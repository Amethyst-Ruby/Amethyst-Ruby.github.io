<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【日记】周末闲聊001</title>
      <link href="p/94540e94.html"/>
      <url>p/94540e94.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="周末随心记"><a href="#周末随心记" class="headerlink" title="周末随心记"></a>周末随心记</h1><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="标签函数"><a href="#标签函数" class="headerlink" title="标签函数"></a>标签函数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>,</span><br><span class="line">    b = <span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zipTag</span>(<span class="params">strings, ...rest</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(strings);   <span class="comment">// 这是个数组    ["", " + ", " = ", "", raw: Array(4)]   </span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        strings[<span class="number">0</span>] +</span><br><span class="line">        rest</span><br><span class="line">        .map(<span class="function">(<span class="params">e, i</span>) =></span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`<span class="subst">${e}</span><span class="subst">${strings[i + <span class="number">1</span>]}</span>`</span>;</span><br><span class="line">        })</span><br><span class="line">        .join(<span class="string">""</span>)       <span class="comment">// map 返回数组，然后拼接</span></span><br><span class="line">    );</span><br><span class="line">}</span><br><span class="line"><span class="keyword">let</span> tag = zipTag<span class="string">`<span class="subst">${a}</span> + <span class="subst">${b}</span> = <span class="subst">${a + b}</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(tag);</span><br></pre></td></tr></tbody></table></figure></div><h2 id="闲谈"><a href="#闲谈" class="headerlink" title="闲谈"></a>闲谈</h2><p>早上看了看书，然后做了场力扣比赛，有个贪心的问题还没解决….</p><p>下午想着看一个纪录片了，同学找我玩原神，于是啊打到晚上五点多，五点半出门吃了顿饭，晚上回来洗个了澡，我邮寄回来的烤肠到了，然后烤了四个整的屋子里都是味道，烤完肠这就七点多了跟家里人打打电话，</p><h3 id="晚上跟家里人视频"><a href="#晚上跟家里人视频" class="headerlink" title="晚上跟家里人视频"></a>晚上跟家里人视频</h3><p>我老爹这腰疼的病又犯了，说是中午疼的，可咋整呢，说是腰肌劳损，我说去医院看看，他们还是心疼钱，哎我啥时候能有钱呢。昨天又找家里要钱来着，这个月工资发的晚了，吃饭的钱都要没了，以后要攒钱，要攒钱！！！狠狠的攒钱</p><p>每周写点啥叭~当是我的周总结了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随心记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>换硬盘之后如何迁移 hexo 博客</title>
      <link href="p/f31fa1f4.html"/>
      <url>p/f31fa1f4.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="换硬盘之后如何迁移博客"><a href="#换硬盘之后如何迁移博客" class="headerlink" title="换硬盘之后如何迁移博客"></a>换硬盘之后如何迁移博客</h1><blockquote><p>最近把我原先的机械硬盘换了个固态~哎呀好香啊，不仅开机没有了机械硬盘旋转的声音，而且加载LOL都顺畅无比，美滋滋</p><p>然而原先的 hexo 博客还在里面呢，此文记录一下半价的过程</p></blockquote><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://blog.csdn.net/Calvin_zhou/article/details/85218157" target="_blank" rel="noopener">1. Hexo博客开发之——电脑重装系统后如何恢复Hexo博客</a></p><p><a href="https://www.cnblogs.com/lpcsf/p/12912984.html" target="_blank" rel="noopener">2. hexo 报错 – TypeError: Cannot read property ‘removeAttr’ of undefined</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>其实很好弄，只需要把除了 <code>node-module</code> 外的其他文件夹拷贝过来即可，</p><p>然后在<code>npm i</code> 一下，不过肯定没那么顺利的啦，卡一卡很正常，看看报错信息然后百度一下</p><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><h3 id="count-of-undefined"><a href="#count-of-undefined" class="headerlink" title="count of undefined"></a>count of undefined</h3><p><a href="https://img-blog.csdnimg.cn/20200920125942543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70#pic_center" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200920125942543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70#pic_center" src="/img/loading.gif" class="lazyload"></a></p><p>解决方法如下，删掉这个插件，很暴力….</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-baidu-url-submit --save</span><br></pre></td></tr></tbody></table></figure></div><h3 id="TypeError-Cannot-read-property-‘removeAttr’-of-undefined"><a href="#TypeError-Cannot-read-property-‘removeAttr’-of-undefined" class="headerlink" title="TypeError: Cannot read property ‘removeAttr’ of undefined"></a>TypeError: Cannot read property ‘removeAttr’ of undefined</h3><p>这个是我的一篇 文章里的图片链接失效了，导致 <code>hexo g</code> 的时候编译失败</p><p>解决办法就是找打那篇文章，删掉也好修改也好~</p><h3 id="Plugin-load-failed-hexo-generator-index-pin-top"><a href="#Plugin-load-failed-hexo-generator-index-pin-top" class="headerlink" title="Plugin load failed: hexo-generator-index-pin-top"></a>Plugin load failed: hexo-generator-index-pin-top</h3><p>报错信息如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">ERROR Plugin load failed: hexo-generator-index-pin-top</span><br><span class="line">Error: Cannot find module <span class="string">'object-assign'</span></span><br></pre></td></tr></tbody></table></figure></div><p>本着缺啥就安装啥的精神</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i object-assign</span><br></pre></td></tr></tbody></table></figure></div><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>以上就是我遇到的小问题，其实还是蛮顺利的我以为还会弄一下午呢，爽啊~</p></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>批量更改文件名</title>
      <link href="p/48116.html"/>
      <url>p/48116.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h2><p>弄着博客时候，找个很多好看的图片，然后先给他们起个名字好上传到图床，自己改太累了，索性弄个Python改</p><h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里写你要修改的文件夹位置</span></span><br><span class="line">fileList = os.listdir(<span class="string">r"C:\Users\10074\Desktop\picdiet"</span>)</span><br><span class="line">print(<span class="string">"修改前："</span> + str(fileList))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到进程当前工作目录</span></span><br><span class="line">currentpath = os.getcwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前工作目录修改为待修改文件夹的位置</span></span><br><span class="line">os.chdir(<span class="string">r"C:\Users\10074\Desktop\picdiet"</span>)</span><br><span class="line"><span class="comment"># 名称变量</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="comment"># 遍历文件夹中所有文件</span></span><br><span class="line"><span class="keyword">for</span> fileName <span class="keyword">in</span> fileList:</span><br><span class="line">    <span class="comment"># 匹配文件名正则表达式</span></span><br><span class="line">    pat = <span class="string">".+\.(jpg)"</span></span><br><span class="line">    <span class="comment"># 进行匹配</span></span><br><span class="line">    pattern = re.findall(pat, fileName)</span><br><span class="line">    <span class="comment"># 文件重新命名</span></span><br><span class="line">    <span class="comment"># 这里的命名法则是你自己定的，自由发挥</span></span><br><span class="line">    os.rename(fileName, (<span class="string">"post"</span> + str(num) + <span class="string">'.'</span> + pattern[<span class="number">0</span>]))</span><br><span class="line">    <span class="comment"># 改变编号，继续下一项</span></span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line"><span class="comment"># 改回程序运行前的工作目录</span></span><br><span class="line">os.chdir(currentpath)</span><br><span class="line"><span class="comment"># 刷新</span></span><br><span class="line">sys.stdin.flush()</span><br><span class="line"><span class="comment"># 输出修改后文件夹中包含的文件名称</span></span><br><span class="line">print(<span class="string">"修改后："</span> + str(os.listdir(<span class="string">r"C:\Users\10074\Desktop\picdiet"</span>)))</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立商城简单后台的过程</title>
      <link href="p/45929.html"/>
      <url>p/45929.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="给自己的小商城建立简单后台的过程"><a href="#给自己的小商城建立简单后台的过程" class="headerlink" title="给自己的小商城建立简单后台的过程"></a>给自己的小商城建立简单后台的过程</h1><h2 id="使用到的工具"><a href="#使用到的工具" class="headerlink" title="使用到的工具"></a>使用到的工具</h2><ul><li><p>Node.js</p><ul><li><code>Node.js</code>既不是框架，也不是个语言，他是一个平台，可以运行<code>JavaScript</code>语言，没有Dom、Bom</li><li>模块作用域：也就是一个文件对应一个作用域</li></ul></li><li><p>MongoDB</p><ul><li>非关系型数据库，跟<code>Node.js</code>是个不错的好基友</li></ul></li><li><p>Mongoose</p></li></ul><p>这里简单介绍，我会看一个新的板块去整理这些工具的知识</p><h2 id="安装-Node-和-数据库-Mongo"><a href="#安装-Node-和-数据库-Mongo" class="headerlink" title="安装 Node 和  数据库 Mongo"></a>安装 Node 和  数据库 Mongo</h2><ul><li><p>Node.js</p><ul><li>官网地址：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></li><li>安装的时候一直Next即可</li></ul></li><li><p>MongoDB</p><ul><li>官网地址：<a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a></li><li>可能有网络问题，请使用魔法，科学上网 =_ =</li></ul></li><li><p>Mongoose</p><ul><li>在cmd中执行命令</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mongoose</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h2 id="建立http服务"><a href="#建立http服务" class="headerlink" title="建立http服务"></a>建立http服务</h2><h3 id="简单的http服务"><a href="#简单的http服务" class="headerlink" title="简单的http服务"></a>简单的http服务</h3><p>主要的逻辑是</p><ol><li>创建<code>http</code>服务</li><li>监听<code>request</code>请求</li><li>监听端口，开启服务</li></ol><p>新建<code>xxx.js</code>文件</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最简单的服务搭建</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.创建服务</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 监听服务</span></span><br><span class="line"><span class="comment">// 请求:处理</span></span><br><span class="line"><span class="comment">// 响应：一个请求对应一个响应，如果在一个请求的过程中，已经结束响应了，则不能重复发送响应</span></span><br><span class="line"></span><br><span class="line">server.on(<span class="string">"request"</span>,<span class="function"><span class="keyword">function</span> (<span class="params">require,response</span>) </span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"request"</span>)</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 绑定端口号，启动服务</span></span><br><span class="line">server.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"running"</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="发送和获取数据"><a href="#发送和获取数据" class="headerlink" title="发送和获取数据"></a>发送和获取数据</h3><p>我们最关心的问题应该有一下几点</p><ul><li><p>如何获取前台发送给后台的数据？</p><ul><li>通过<code>req.on('data',function(){})</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>{</span><br><span class="line">    req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>{</span><br><span class="line">        <span class="comment">// console.log(chunk)</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 接收过来的chunk就是前台发来的</span></span><br><span class="line">        <span class="comment">// 但是，chunk是二进制编码</span></span><br><span class="line">        <span class="comment">// JSON.parse() 方法用于将一个 JSON 字符串转换为对象。</span></span><br><span class="line">        <span class="comment">// 前台传数组也可以“</span></span><br><span class="line">        <span class="comment">// 但是前台如果直接传字符串的话就不能用json.parse了</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(chunk));</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><ul><li>如果前台发来的是字符串，那么可以通过<code>chunk.toString()</code>可以转化成人能看懂的字</li><li>如果前台发来的是数据，对象等复杂数据类型的时候，那么可以<code>JSON.parse(chunk)</code>转化一下</li></ul></li><li><p>如何知道前台请求的是什么服务/功能？</p><ul><li>我们可以这么设计：在url中写下功能含义，比方说前台请求这个接口<code>url:'http://127.0.0.1:3000/addUser'</code>，那我们直接获取<code>addUser</code>就可以了</li><li>通过在监听服务里获取<code>req.url</code>即可知道前台请求的url后缀写的什么了，然后通过后缀写不同的功能</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></li></ul><ul><li><p>如何给前台发送数据</p><ul><li>可以通过<code>res.write</code>返回，只能返回<code>Buffer</code>和<code>String</code></li><li><code>res.end()</code>说明服务结束，如果不写他的话前台会收不到数据的</li><li>如果想要返回复杂数据类型，比方说对象，数据，可以通过<code>res.write(JSON.stringify(要返回的复杂数据))</code>来返回数据</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>{</span><br><span class="line">    <span class="comment">// res.write('保存失败')</span></span><br><span class="line">    res.write(<span class="built_in">JSON</span>.stringify())</span><br><span class="line">    res.end()</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></li></ul><p>我的整个设计如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>)</span><br><span class="line"><span class="comment">// 1. 创建服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入数据库</span></span><br><span class="line"><span class="keyword">const</span> User = <span class="built_in">require</span>(<span class="string">"./build_DB_Schema"</span>)</span><br><span class="line"><span class="keyword">const</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 监听request请求事件，设置请求处理函数</span></span><br><span class="line">server.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据req.url 的同来分配不同任务</span></span><br><span class="line"><span class="keyword">var</span> url = req.url</span><br><span class="line"><span class="comment">// ********************************</span></span><br><span class="line"><span class="comment">// 功能点1.添加用户</span></span><br><span class="line"><span class="comment">// ********************************</span></span><br><span class="line">req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>{</span><br><span class="line">sendMsg = <span class="built_in">JSON</span>.parse(chunk)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收过来的chunk是二进制编码</span></span><br><span class="line"><span class="comment">// JSON.parse() 方法用于将一个 JSON 字符串转换为对象。</span></span><br><span class="line"><span class="comment">// 前台传数组也可以</span></span><br><span class="line"><span class="comment">// 但是前台如果直接传字符串的话就不能用json.parse了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 功能一：添加用户</span></span><br><span class="line"><span class="comment">// 注释：在我添加用户之前需要价差数据中是否已经有了这个用户</span></span><br><span class="line"><span class="comment">// 如果检测有这个用户，我就不添加</span></span><br><span class="line"><span class="comment">// 如果检测没有这个用户，没有我就添加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url === <span class="string">'/wzq/addUser'</span>) {</span><br><span class="line">User.find(sendMsg, <span class="function"><span class="keyword">function</span>(<span class="params">err, ret</span>) </span>{</span><br><span class="line"><span class="comment">// 如果查询到的长度为0 ，代表数据库中没有数据</span></span><br><span class="line"><span class="keyword">if</span> (ret.length === <span class="number">0</span>) {</span><br><span class="line"><span class="keyword">var</span> newUser = <span class="keyword">new</span> User({</span><br><span class="line">userPhoneNumber: sendMsg.userPhoneNumber</span><br><span class="line">})</span><br><span class="line"><span class="comment">// 保存到数据库</span></span><br><span class="line">newUser.save(<span class="function"><span class="keyword">function</span>(<span class="params">err, ret</span>) </span>{</span><br><span class="line"><span class="keyword">if</span> (err) {</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'保存失败'</span>);</span><br><span class="line"><span class="comment">// 写给前台</span></span><br><span class="line">res.write(<span class="string">'保存失败'</span>)</span><br><span class="line">res.end()</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'保存成功'</span>)</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">res.write(<span class="string">'保存成功'</span>)</span><br><span class="line">res.end()</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`数据库中已经有<span class="subst">${sendMsg.userPhoneNumber}</span>这个用户`</span>)</span><br><span class="line">res.write(<span class="string">`数据库中已经有<span class="subst">${sendMsg.userPhoneNumber}</span>这个用户`</span>)</span><br><span class="line">res.end()</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (url === <span class="string">'/wzq/addHasBuy'</span>) {</span><br><span class="line"><span class="comment">// 功能点2：向指定用户中添加已经购买的商品</span></span><br><span class="line"><span class="comment">// 首先要找到，并且获取id</span></span><br><span class="line">User.find(sendMsg, <span class="function"><span class="keyword">function</span>(<span class="params">err, ret</span>) </span>{</span><br><span class="line"><span class="keyword">let</span> _id = ret[<span class="number">0</span>]._id;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'ret:'</span>,ret)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> oldArr = ret[<span class="number">0</span>].userHasBuyShopes</span><br><span class="line"><span class="built_in">console</span>.log(oldArr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> newObj = {</span><br><span class="line"><span class="string">"userHasBuyShopes"</span> : oldArr</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新</span></span><br><span class="line">User.findByIdAndUpdate(_id,newObj,<span class="function"><span class="keyword">function</span> (<span class="params">err,ret</span>) </span>{</span><br><span class="line"><span class="keyword">if</span> (err) {</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'更新失败'</span>)</span><br><span class="line">}<span class="keyword">else</span> {</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'更新成功'</span>)</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="comment">// res.end 只支持字符串或者buffer</span></span><br><span class="line"><span class="comment">// 相应内容只能是二进制数据或者字符串</span></span><br><span class="line"><span class="comment">// 数字，对象，数组，布尔值都不行</span></span><br><span class="line"><span class="comment">// // res是必须要写的，不写的话前台收不到值</span></span><br><span class="line"></span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 监听端口，开启服务</span></span><br><span class="line">server.listen(<span class="string">'3000'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">argument</span>) </span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'服务器已经开启run'</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="建立表结构"><a href="#建立表结构" class="headerlink" title="建立表结构"></a>建立表结构</h3><p>虽然<code>Mongo</code>是非关系型数据库，但是也是需要设计一下，不然咱增删改查也费劲啊</p><p>在<code>Mongo</code>中有个叫架构<code>Schema</code>的东西，专门用来约束数据，其目的是：保证数据的完整性，减少脏数据</p><p>举个例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入Schema</span></span><br><span class="line"><span class="keyword">const</span> Schema = mongoose.Schema</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立博客的架构</span></span><br><span class="line"><span class="keyword">var</span> blogSchema = <span class="keyword">new</span> Schema({</span><br><span class="line">    title: {</span><br><span class="line">        type: <span class="built_in">String</span>,</span><br><span class="line">        required: <span class="literal">true</span> </span><br><span class="line">    },</span><br><span class="line">    author: <span class="built_in">String</span>,</span><br><span class="line">    body: <span class="built_in">String</span>,</span><br><span class="line">    comments: [{ <span class="attr">body</span>: <span class="built_in">String</span>, <span class="attr">date</span>: <span class="built_in">Date</span> }],</span><br><span class="line">    date: { <span class="attr">type</span>: <span class="built_in">Date</span>, <span class="attr">default</span>: <span class="built_in">Date</span>.now },</span><br><span class="line">    hidden: <span class="built_in">Boolean</span>,</span><br><span class="line">    meta: {</span><br><span class="line">        votes: <span class="built_in">Number</span>,</span><br><span class="line">        favs: <span class="built_in">Number</span></span><br><span class="line">    }</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><p>可以看到<code>Schema</code>规定了每条数据的架构，其中如果有不可缺少项，比如上面的<code>title</code>，可以通过<code>required:true</code>来约束</p><h3 id="将架构发布为模型并挂载给外部"><a href="#将架构发布为模型并挂载给外部" class="headerlink" title="将架构发布为模型并挂载给外部"></a>将架构发布为模型并挂载给外部</h3><blockquote><p>Q: 既然是模块作用域，那如何让模块与模块之间进行通信？<br>加载文件模块的目的更重要的是为了使用里面的成员</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将架构发布为模型，并挂载，以便于外部使用</span></span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">'User'</span>, userSchema)</span><br></pre></td></tr></tbody></table></figure></div><p>这里介绍一下<code>module.exports</code>，把所有需要被外部访问的成员挂在到exports 上</p><p>比方说有两个文件，分别是<code>a.js</code>，<code>b.js</code>，如果想在<code>a</code>文件中使用<code>b</code>文件的内容，就需要把<code>b</code>文件暴露出来</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先引入b.js 并给ret对象，这时候ret就可以使用b.js暴露出的方法了</span></span><br><span class="line"><span class="comment">// 这里的ret 随便起名</span></span><br><span class="line"><span class="keyword">const</span> ret = <span class="built_in">require</span>(<span class="string">"./b"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(ret.add(<span class="number">5</span>,<span class="number">6</span>));<span class="comment">// 11</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//b.js</span></span><br><span class="line"><span class="comment">// 把 add 这个函数挂载</span></span><br><span class="line">exports.add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>{</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="Q1：后台不能传递复杂数据类型给前台"><a href="#Q1：后台不能传递复杂数据类型给前台" class="headerlink" title="Q1：后台不能传递复杂数据类型给前台"></a>Q1：后台不能传递复杂数据类型给前台</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// res.end 只支持字符串或者buffer</span></span><br><span class="line"><span class="comment">// 比方说我要返回 returnData ，我需要把他用JSON。stringify转换一下</span></span><br><span class="line"><span class="comment">// 相应内容只能是二进制数据或者字符串</span></span><br><span class="line"><span class="comment">// 数字，对象，数组，布尔值都不行</span></span><br><span class="line"><span class="keyword">let</span> returnData = {<span class="attr">code</span>:<span class="number">1</span>,<span class="attr">data</span>:[<span class="string">'你好'</span>]}</span><br><span class="line">res.write(<span class="built_in">JSON</span>.stringify(returnData));</span><br><span class="line"><span class="comment">// res是必须要写的，不写的话前台收不到值</span></span><br><span class="line">res.end();</span><br></pre></td></tr></tbody></table></figure></div><h3 id="Q2：敲代码的技巧：批量删除代码前面的tab"><a href="#Q2：敲代码的技巧：批量删除代码前面的tab" class="headerlink" title="Q2：敲代码的技巧：批量删除代码前面的tab"></a>Q2：敲代码的技巧：批量删除代码前面的tab</h3><p><code>shift + tab</code></p><h3 id="Q3：提示-Cannot-find-module-‘mongoose’"><a href="#Q3：提示-Cannot-find-module-‘mongoose’" class="headerlink" title="Q3：提示 Cannot find module ‘mongoose’"></a>Q3：提示 Cannot find module ‘mongoose’</h3><p>安装 <code>mongoose</code>即可，这个插件是在运行的文件夹下的</p><p>就是说如果文件换了路径，也需要重新导入<code>module</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 我用的是淘宝镜像，爽的</span><br><span class="line">cnpm install mongoose</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【项目】手持弹幕</title>
      <link href="p/27114.html"/>
      <url>p/27114.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><a href="https://img-blog.csdnimg.cn/2020022315182580.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020022315182580.gif" src="/img/loading.gif" class="lazyload"></a></p><h1 id="主要点"><a href="#主要点" class="headerlink" title="主要点"></a>主要点</h1><ul><li>做的时候还挺顺的，因为思路已经想好了，之前有个版本我是把page旋转90度，然后我就傻逼了</li><li>这个用到了新的    <code>input</code> 属性 <code>cursor-spacing='10'</code> 这个是软键盘跟光标的距离，不设置的话在手机端会有点难看<h1 id="关键步骤"><a href="#关键步骤" class="headerlink" title="关键步骤"></a>关键步骤</h1></li></ul><ol><li><p>文字的旋转，主要的就是给他一点点高度</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.text</span>{</span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1</span>rpx;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="comment">/* background-color: salmon; */</span></span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">280%</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="comment">/* margin-top: -1%; */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>弹幕动画的制作</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> animateText{</span><br><span class="line">  0%{</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0%</span>;</span><br><span class="line">  }</span><br><span class="line">  100%{</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">700%</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">view</span> <span class="attr">class</span>=<span class="string">"textBox"</span> <span class="attr">style</span>=<span class="string">"background-color:{{backgroundColor}}"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">view</span> <span class="attr">class</span>=<span class="string">'text'</span> <span class="attr">style</span>=<span class="string">"font-size: {{fontSize}}rpx; animation: animateText {{animateTime}}s infinite linear; color:{{fontColor}}"</span>></span> {{text}} <span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br></pre></td></tr></tbody></table></figure></div></li></ol><ol start="3"><li><p>属性弹框，分别放到wxml、wxss和js里</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">view</span>  <span class="attr">bindtap</span>=<span class="string">"showModal"</span>></span></span><br><span class="line">    点击弹出</span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"></span><br><span class="line"><span class="comment"><!--屏幕背景变暗的背景 --></span></span><br><span class="line"><span class="tag"><<span class="name">view</span> <span class="attr">class</span>=<span class="string">"commodity_screen"</span> <span class="attr">bindtap</span>=<span class="string">"hideModal"</span> <span class="attr">wx:if</span>=<span class="string">"{{showModalStatus}}"</span>></span><span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"></span><br><span class="line"><span class="comment"><!-- 屏幕内容 --></span></span><br><span class="line"><span class="tag"><<span class="name">view</span> <span class="attr">animation</span>=<span class="string">"{{animationData}}"</span> <span class="attr">class</span>=<span class="string">"commodity_attr_box"</span> <span class="attr">wx:if</span>=<span class="string">"{{showModalStatus}}"</span>></span></span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 弹起框的样式 */</span></span><br><span class="line"><span class="comment">/*使屏幕变暗 */</span></span><br><span class="line"><span class="selector-class">.commodity_screen</span> {</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">position</span>: fixed;</span><br><span class="line"> <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"> <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line"> <span class="attribute">overflow</span>: hidden;</span><br><span class="line"> <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*对话框 */</span></span><br><span class="line"><span class="selector-class">.commodity_attr_box</span> {</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">430</span>rpx;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">overflow</span>: hidden;</span><br><span class="line"> <span class="attribute">position</span>: fixed;</span><br><span class="line"> <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line"> <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>: <span class="number">10</span>rpx <span class="number">10</span>rpx <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">padding-top</span>: <span class="number">20</span>rpx;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示对话框</span></span><br><span class="line"> showModal: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">   <span class="comment">// 显示遮罩层</span></span><br><span class="line">   <span class="keyword">var</span> animation = wx.createAnimation({</span><br><span class="line">     duration: <span class="number">200</span>,</span><br><span class="line">     timingFunction: <span class="string">"linear"</span>,</span><br><span class="line">     delay: <span class="number">0</span></span><br><span class="line">   })</span><br><span class="line">   <span class="keyword">this</span>.animation = animation</span><br><span class="line">   animation.translateY(<span class="number">300</span>).step()</span><br><span class="line">   <span class="keyword">this</span>.setData({</span><br><span class="line">     animationData: animation.export(),</span><br><span class="line">     showModalStatus: <span class="literal">true</span></span><br><span class="line">   })</span><br><span class="line">   setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">     animation.translateY(<span class="number">0</span>).step()</span><br><span class="line">     <span class="keyword">this</span>.setData({</span><br><span class="line">       animationData: animation.export()</span><br><span class="line">     })</span><br><span class="line">   }.bind(<span class="keyword">this</span>), <span class="number">200</span>)</span><br><span class="line"> },</span><br><span class="line"> <span class="comment">//隐藏对话框</span></span><br><span class="line"> hideModal: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">   <span class="comment">// 隐藏遮罩层</span></span><br><span class="line">   <span class="keyword">var</span> animation = wx.createAnimation({</span><br><span class="line">     duration: <span class="number">200</span>,</span><br><span class="line">     timingFunction: <span class="string">"linear"</span>,</span><br><span class="line">     delay: <span class="number">0</span></span><br><span class="line">   })</span><br><span class="line">   <span class="keyword">this</span>.animation = animation</span><br><span class="line">   animation.translateY(<span class="number">300</span>).step()</span><br><span class="line">   <span class="keyword">this</span>.setData({</span><br><span class="line">     animationData: animation.export(),</span><br><span class="line">   })</span><br><span class="line">   setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">     animation.translateY(<span class="number">0</span>).step()</span><br><span class="line">     <span class="keyword">this</span>.setData({</span><br><span class="line">       animationData: animation.export(),</span><br><span class="line">       showModalStatus: <span class="literal">false</span></span><br><span class="line">     })</span><br><span class="line">   }.bind(<span class="keyword">this</span>), <span class="number">200</span>)</span><br><span class="line"> },</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>滑竿，以改变字体为例，绑定<code>bindchanging</code>事件，这个事件是滑竿一滑动就会触发</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">slider</span> <span class="attr">show-value</span> <span class="attr">value</span>=<span class="string">'{{sliderValOfFontSize}}'</span> <span class="attr">bindchanging</span>=<span class="string">'changeFontSize'</span> <span class="attr">selected-color</span>=<span class="string">'#006AFE'</span>></span><span class="tag"><!--<span class="name"-->slider</span>></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">data: {</span><br><span class="line">    fontSize: <span class="number">300</span>,</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变字号</span></span><br><span class="line">  changeFontSize(e){</span><br><span class="line">    <span class="comment">//获取滑竿的值</span></span><br><span class="line">    <span class="built_in">console</span>.log(e.detail.value);</span><br><span class="line">    <span class="keyword">let</span> sliderVal = e.detail.value;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">//运算边界值</span></span><br><span class="line">    <span class="comment">//50 对应 300rpx 的字号</span></span><br><span class="line">    <span class="comment">//0 对应 150rpx</span></span><br><span class="line">    <span class="comment">//100 对应 450rpx，解方程求斜率</span></span><br><span class="line"></span><br><span class="line">    that.setData({</span><br><span class="line">      fontSize: sliderVal * <span class="number">3</span> + <span class="number">150</span>,</span><br><span class="line">      sliderValOfFontSize: sliderVal</span><br><span class="line">    })</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div></li></ol><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>链接：<a href="https://pan.baidu.com/s/15KNLFvUUQHc3T4V9wuQWdw" target="_blank" rel="noopener">https://pan.baidu.com/s/15KNLFvUUQHc3T4V9wuQWdw</a><br>提取码：5cbu </p></body></html>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【美食】可乐鸡腿</title>
      <link href="p/12602.html"/>
      <url>p/12602.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h1><ol><li>鸡腿一斤</li><li>可乐250ml</li><li>适量的盐，一段儿葱，一片姜</li><li>老抽半勺，料酒一勺</li></ol><h1 id="制作过程"><a href="#制作过程" class="headerlink" title="制作过程"></a>制作过程</h1><ol><li>鸡腿洗净，葱姜切片</li><li>锅内烧烤开水，放入鸡腿再次煮滚捞出沥干水，鸡腿改刀（就是用刀子🔪划几下，好入味）</li><li>锅内放入少量油，放入鸡腿煎至两面泛黄</li><li>倒入可乐、老抽、加葱姜盐料酒，烧开转小火，大约15min后即可出锅</li></ol><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><a href="https://raw.githubusercontent.com/Amethyst-Ruby/TyporaImg/master/TyporaImages/20200220125139-725682.jpeg" data-fancybox="group" data-caption="20200218_115908" class="fancybox"><img alt="20200218_115908" title="20200218_115908" data-src="https://raw.githubusercontent.com/Amethyst-Ruby/TyporaImg/master/TyporaImages/20200220125139-725682.jpeg" src="/img/loading.gif" class="lazyload"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>感觉还是淡，可能是没有腌制，或是盐放少了</li><li>菜系偏甜</li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【美食】万能蘸料</title>
      <link href="p/3299.html"/>
      <url>p/3299.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h1><ul><li>白芝麻、辣椒碎、辣椒面、孜然粉、蒜沫、小葱沫、小米辣</li><li>蚝油、盐、白糖（视个人口味定量）</li><li>食用油</li></ul><h1 id="制作过程"><a href="#制作过程" class="headerlink" title="制作过程"></a>制作过程</h1><ol><li>把白芝麻、辣椒碎、辣椒面、孜然粉、蒜沫、小葱沫、小米辣放到碗里</li><li>锅内热油，淋入碗中</li><li>搅拌均匀即可</li></ol><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><a href="https://i.loli.net/2020/02/21/ClXKyNYpOebfHvx.jpg" data-fancybox="group" data-caption="ms001.jpg" class="fancybox"><img alt="ms001.jpg" title="ms001.jpg" data-src="https://i.loli.net/2020/02/21/ClXKyNYpOebfHvx.jpg" src="/img/loading.gif" class="lazyload"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>还挺成功的，我蘸着蒸茄子吃的，跟烧烤店的味道差不多呢</li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【经济学_05】晨读 </title>
      <link href="p/16139.html"/>
      <url>p/16139.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="晨读：一个普通人怎样靠股票赚到100-万？-每个人都可以做到！"><a href="#晨读：一个普通人怎样靠股票赚到100-万？-每个人都可以做到！" class="headerlink" title="晨读：一个普通人怎样靠股票赚到100 万？ 每个人都可以做到！"></a>晨读：一个普通人怎样靠股票赚到100 万？ 每个人都可以做到！</h1><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>优秀的储蓄容器：定投股市</li><li>着眼未来，目光放的长远些</li><li>不要不切实际的对投资收益的追求，以及平时不注重储蓄的生活习惯，从小事做起</li><li>哈佛教条：无论每个月的收入是多少，一定要先存下20%，在花剩下的80% </li><li>两种思维：一种是先存钱，然后花剩下的。另一种是先花钱，然后把剩下的存起来。没做过的人看似没有区别，但真的那么做以后，区别真的很大</li><li>对于大部分人呢，学会储蓄才是最先要做的事情</li><li>20%的算计不仅仅是表面的大钱小钱的问题，更深层次的是人生成本的问题，相比于月光族，那一点看似不多的储蓄带来的不止是表面的金钱数字，重要的是它还可能是一次摆脱现状的机会</li><li>人为什么要买保险？因为对于同一个人来说，同样的钱，效用是不同的。就像吃饭，吃8个馒头人会觉的饱，但第八个馒头和第一个馒头的作用是截然不同的，对于一个快饿死的人而言，第一个馒头是“救命”用的。</li><li>买保险虽然从纯数字上看可能是亏的，但大部分保险的真正意义是用平日里丰衣足食的第八个馒头，去换快饿死时的第一个馒头，从边际效用的角度看，是划算的。因为越是接近0的资产，所产生的收益越大，效用越大</li><li>储蓄的级数可能限制了你的想象，比方说你只有1万储蓄，你失业了，你只能着急寻找下一份工作，如果你有10万储蓄，你失业了，可能去想用这些钱去合伙投资之类的，10万可能是一套房子的首付，对于一个没有储蓄的人，是不可能去想着买一套上百万房产的，如果你有100万储蓄，可能就会让一个人开始时不时思考创业和投资的项目，思考成为某个牛逼同学的创业合伙人是不是靠谱这样的事情。而这些就是机会成本</li><li>没钱会把一群人和一群机会隔离开，更会使人的事业被迫局促在狭窄的，自己能够到的范围内，投资市场是这样的，生活亦如此</li><li>没钱这件事情似乎本身就会影响人的思维，可钱到底应该以什么样的方式变出来呢？<strong>做的什么样的准备，有什么样的运气</strong></li><li>运气也好，方法也好，最终都需要一个人真的为了某件事做好了充分的准备和计划以后，好的运气才会从天而降</li><li>量入而出</li></ul><p>个人感悟：</p><p>普通的人，要早早开始挖井，才有可能达到财富自由</p><h2 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h2><p>复利在我么学习上也是起作用的</p><ul><li>看似不多的储蓄带来的不止是表面的金钱数字，重要的是它还可能是一次摆脱现状的机会</li><li>贫穷会影响思维方式</li><li>一个人财富起点之前，一定是知识储备的起点</li></ul><ol><li>关于时代的发展，Google 将 AI 人工智能开发的很成熟，意味着人工智能时代将替换掉大部分行业，时代在变迁，学习能力➕ 迁移能力将变得越来越重要！</li><li>关于眼界</li><li>关于碎片化时间。赞同利用整体的时间，也就是取舍的问题</li><li>圈子的重要性，圈子到了一定程度就是金钱圈</li></ol></body></html>]]></content>
      
      
      <categories>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础投资知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【经济学_04】晨读：保险的实质 &amp;  特效药 &amp; 医疗膨胀 &amp; 保险的发明</title>
      <link href="p/43961.html"/>
      <url>p/43961.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="保险的实质"><a href="#保险的实质" class="headerlink" title="保险的实质"></a>保险的实质</h1><p>文章链接：<br><a href="https://docs.qq.com/doc/DRExWRnh4WkN6UU9s" target="_blank" rel="noopener">https://docs.qq.com/doc/DRExWRnh4WkN6UU9s</a></p><h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2><p>父母说如果孩子生病，那说什么都得治</p><p>如果自己生病，能不给孩子添麻烦就不给孩子添麻烦</p><p>这个麻烦说的是什么呢？我想更多的还是钱吧</p><p>如果能在风险来临之前，<strong>把风险提前转移</strong> 给保险公司就好了</p><h2 id="认知"><a href="#认知" class="headerlink" title="认知"></a>认知</h2><p>希望通过今天的学习，大家都认识到保险的重要性，在资产配置中每个产品都有自己的一个位置，<strong>保险就是防守</strong>，那保险要做的就是将风险转移的目的做到最大化，争取花最少的钱获得的最大的保障，避免获得同样的保障时你比别人花的多～</p><p>保险不能避免意外发生，但是可以在意外发生时，避免因财务陷入困境，一夜回到解放前</p><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>这里有一招，直接看本质的，（还是分析能力）</p><p>比如，配置重大疾病保险，就要考虑到发生疾病造成两方面的影响：</p><ol><li>对现有财富的影响有多大（治病大致的花费）</li><li>疾病对未来收入的影响（发生疾病后，会影响多久时间的收入）</li></ol><p>把这两个钱加起来，就是需要为这个人配制的保额了</p><p>所以保险很个性化，一定是针对个人，针对个人家庭来配置的</p><h2 id="Q1：那么保险是资产还是负债呢？"><a href="#Q1：那么保险是资产还是负债呢？" class="headerlink" title="Q1：那么保险是资产还是负债呢？"></a>Q1：那么保险是资产还是负债呢？</h2><p>A：保险是一种杠杆性的工具，就是以小博大<br>（个人认为它是资产，因为它给我们降低了经济风险。智者见智，欢迎有理由、有逻辑的争辩）</p><h2 id="Q2：富人也喜欢保险？"><a href="#Q2：富人也喜欢保险？" class="headerlink" title="Q2：富人也喜欢保险？"></a>Q2：富人也喜欢保险？</h2><p>A：很多有钱人是很喜欢用的<br>富人们买保险比我们勤多了，因为保险还有一个好处，保险是一个很好的财产传承方式，它不收税</p><h2 id="对于企业来说保险的好处"><a href="#对于企业来说保险的好处" class="headerlink" title="对于企业来说保险的好处"></a>对于企业来说保险的好处</h2><p>很多做企业的朋友，买保险至少有两大好处</p><ul><li><p>第一，看重现金价值，偶尔需要贷款，现在很多保单是可以贷款用的</p></li><li><p>第二、企业家的保险是可以提升信用资产</p></li><li><p>第三，有一条最大的好处，知道是什么吗？<br>当他的公司遭遇经营问题，负债收场时，如果它的企业是个体经营或者责任制的，那自己是要掏钱全额赔完的</p><p>保险的好处来了，保险，不因为任何原因被强制使用的<br>也就是说，买了保险，这笔钱，才真的是你的，就算你的公司倒了，欠人家钱了，这个保险还会在，你家里的所有东西都当完了，你还有保险</p></li></ul><h2 id="无时无刻都在接触保险"><a href="#无时无刻都在接触保险" class="headerlink" title="无时无刻都在接触保险"></a>无时无刻都在接触保险</h2><p>所以，保险，对你们来说，有没有觉得好像不太一样了？<br>其实在我们生活中无时不刻在接触</p><p>比如，旅个游，如果报团，基本会帮你们买团体意外保险<br>坐个动车，也有，坐个飞机，也有</p><p>有一个现象，就是越有钱的人其实都是越擅长用保险的人</p><p>之前在讲股票、讲投资等，到现在讲保险，我还是那句，去了解一个工具的 <strong>本质</strong>，只有真正了解它，你才能真正的使用好它</p><p>你懂，它就是你的剑，你不懂，它就伤了你自己</p><h2 id="为什么说，越穷的人越需要配保险"><a href="#为什么说，越穷的人越需要配保险" class="headerlink" title="为什么说，越穷的人越需要配保险"></a>为什么说，越穷的人越需要配保险</h2><p>一旦得病，就欠债，然后用接下来的几年工作还债<br>甚至十几年<br>往期也经常有学员会说，自己都是听亲朋好友推荐买的保险，当时觉得很好，学习了解了才发现很多坑。<br>有时候做保险的朋友，是真心为你好，但是如果她自己本身不是很专业，这样能帮到你的也很有限<br>大多数保险代理人的知识，来源于保险公司的培训，所以，你们懂的<br>另外，也经常有学员直接扔个链接问我这个保险好不好。</p><h2 id="保险特点"><a href="#保险特点" class="headerlink" title="保险特点"></a>保险特点</h2><h3 id="特点1：个性化强"><a href="#特点1：个性化强" class="headerlink" title="特点1：个性化强"></a>特点1：个性化强</h3><p>希望大家明白，保险一定是个性化配置的，不要企图别人配得很好的方案就拿来套自己身上，所以也忌讳听别人的建议买</p><p>例子：有同学来问我，他说想要配置重疾险，一个35岁的单身男，想用5千块配置，这时候，就会出现一个问题，你想要保终身、保50万保额、5千保费、交费20年</p><p>这些条件是无法同时满足的</p><p>就像我们一直在说的，要根据个人情况来</p><p>比如，大家的收入结构不同，这决定了我们保费</p><p>比如收入很低，那我们可以先考虑保20年或30年的，可以暂时不考虑终身型</p><p>如果有来学习理财投资，那我们就不买理财型保险</p><p><strong>记住，保险是根据个人情况规划的</strong></p><h3 id="特点2：动态配置"><a href="#特点2：动态配置" class="headerlink" title="特点2：动态配置"></a>特点2：动态配置</h3><p>还有，保险它是动态的<br>保险不是买了就OK了<br>单身期、家庭成形期、中年稳定期、退体期等等，是完全不一样的配置<br>保险配置一定不能脱离个人的人生规划</p><h2 id="晨读总结"><a href="#晨读总结" class="headerlink" title="晨读总结"></a>晨读总结</h2><p>总结一下，保险，是 <strong>针对个人情况</strong> 而定，没有最好，只有 <strong>最合适</strong></p><p>还有，保险是一种工具，它还有很多很多的好处，只要你 <strong>懂了它</strong>，你就可以驾驭它</p><hr><p>tags:</p><ul><li>基础投资知识<br>categories: 金融</li></ul><hr><p>所以，理财就是理生活，哈哈</p><p>做理财规划，就是做人生规划</p><h2 id="Q3：保险公司的培训，会有什么问题？"><a href="#Q3：保险公司的培训，会有什么问题？" class="headerlink" title="Q3：保险公司的培训，会有什么问题？"></a>Q3：保险公司的培训，会有什么问题？</h2><p>有人问，保险公司的培训，会有什么问题？</p><p>比如消费性保险可以是短期的（一年期），长期的N年期（20年，30年，至70岁，至85岁）和终身的<br>而大部分保险代理人接受的保险公司的培训，他们 <strong>定义的消费型保险都是一年期的</strong>，其实这是有误区的。</p><p>大家学习了就知道，消费型保险是针对保费是否返还而言的。并非仅仅只是一年期的</p><p>我上上期就有保险从业的学员和我争辩，重疾险只有返还型没有消费型的，我也是醉了</p><p>我还碰到过2个学员，为了给家里人配置保险，特意跑到保险公司上了几年班。。我和小伙伴们都惊呆了Σ( ° △ °|||)︴</p><p>大家不关财商教育缺乏，各种理财知识也缺乏学习渠道。。自己学习花费的时间和精力是很消耗的。</p><p>如果我们说生命属于自己的，金钱属于儿女的，那么我们就应该考虑给未来自己的健康与子女的钱包多一份保障</p><p><strong>晨读内容结束！！</strong></p><hr><hr><h1 id="插曲：特效药"><a href="#插曲：特效药" class="headerlink" title="插曲：特效药"></a>插曲：特效药</h1><ul><li>索菲布韦，丙肝特效药。一片药$1000，相当于一部带i7的笔记本电脑，要吃84片才能治好</li><li>Tivicay，艾滋特效药。一年费用$14000，平均每天￥260，相当于一次吃掉一个U盘，而且还治不好，只能保证不死</li><li>伊马替尼（格列卫），慢粒靶向药。一年费用$92000，平均每天￥1700，相当于一次吃掉一部小米手机。也是需要长期服药</li><li>CAR T疗法，用于白血病治疗。一次疗程大概$800 000，我不知道这相当于什么</li></ul><p>大家要明白保险的重要性，不能总等着国家救你，我们也要提前考虑自救呀</p><p>因为药厂和国家，这些都是我们没办法管掌控的东西</p><p>我们在自己能做的力所能及的范围里面，去努力的保证自己生存的希望</p><p>有病没有药是天灾，有药买不起是人祸</p><p>根据2017年一份报告显示，中国已经是当之无愧的世界癌症第一大国。每天约有1万人确诊癌症，平均每7分钟就有一个人</p><p>都说死亡面前人人平等，这句话对癌症来说却是个例外</p><p>根据国际货币基金组织的一则数据，今年中国人的平均购买力还不到2万元/年</p><p>而大多数面向市场推出的新的癌症特效药，花费都在1-5万元/月不等</p><p><strong>也就是说，不吃死得快；吃了死得慢，但很快你就吃不起了</strong></p><p>以大部分普通家庭的收入，即便倾家荡产，也不过续命一年到几年而已，在人均寿命已经达到70-80多岁的今天，毫无意义</p><p>所以，我们才在新闻上看到那么多案例，很多人患了癌症，明知道吃药可以稳定病情却还是拒绝</p><p>不是说不想活下去了，而是不想为了短短的几年，就毁了还活着的家人的未来不是说不想活下去了，而是不想为了短短的几年，就毁了还活着的家人的未来</p><p>世间最艰难的选择，莫过于此</p><p>对于我们这些普通人来说，你还会觉得保险是可有可无的吗？你还会觉得投资是可学可不学的吗？</p><p>都说医院是最见人性的地方，其实它也是金钱价值被无限放大的场所</p><p>有位病友曾经开玩笑说：我去过的唯一高消费场所是医院，要是能办VIP卡就好了</p><p>那里不讲价、不打折、不促销，但永远有人排着长队去缴费…</p><p>用钱买命是最大的无奈，而没钱治病，是最极致的悲哀</p><p>能用保险解决的事，千万别用眼泪和生命</p><p>愿每一个生命都能被温柔以待</p><p>或许大家觉得今天不学习理财投资，没有损失，可是当疾病或者意外来临的时候</p><p>而你束手无策，坐以待毙的时候，会不会有一丝后悔呢</p><hr><h1 id="插曲：流感下的北京中年"><a href="#插曲：流感下的北京中年" class="headerlink" title="插曲：流感下的北京中年"></a>插曲：流感下的北京中年</h1><p>很久之前，一篇《流感下的北京中年》刷爆朋友圈</p><p>作者是北京人，北京有房，东北有房，一年的收入是他夫人、岳父、岳母的收入总和，典型的中产阶级，典型的高净值人群</p><p>一场感冒，大概一个月的ICU治疗，被逼迫到卖东北房子、卖北京房子的地步</p><p>你要知道，ICU一天的治疗费用就是6万到10万，等于是一个普通基层公务员一年的工资收入了（这个价格根据地区而定，小的地区几千，大城市1万、2万甚至更贵！）</p><p>每个人都有得大病的概率，尤其像一些恶性疾病，例如肿瘤、器官衰竭等。这类病，要么不治，一治，就是几十万甚至上百万的治疗费用</p><p>相比之下，最基层的全面医保根本起不了什么作用，报销非常有限</p><p>别说一个普通人家，就是一个中产阶级，一个高净值的家庭，一场大病，随随便便就能压垮</p><p>这对我们普通人的启示在于：每个人面临的风险都是一样的，病魔不会管你是普通收入阶层，还是高净值人群</p><p>提高自己的抗风险能力，是每个人都应该考虑到的</p><p>把每个月收入的一部分，投入到疾病保险，把疾病风险，转嫁给保险公司</p><p>还有前段时间刷爆朋友圈的一则消息“37岁二胎爸爸查出胃癌，和妻子的聊天</p><p>记录曝光：这世上除了生死，都是小事”，如果生命到此结束，你是不是没有任何遗憾？</p><p>今天的话题有点沉重了，但想送给大家一句我的忠告……</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>请大家一定要搞定保险！<br>一定要不惜一切代价搞定保险！</p><p>这件事在未来，真的是能救命的</p><p>这是学姐给大家真心的忠告。不要等到想买的时候却买不了了</p><hr><h1 id="插曲：保险的发明"><a href="#插曲：保险的发明" class="headerlink" title="插曲：保险的发明"></a>插曲：保险的发明</h1><p>今天晨读之后有些同学有疑问，想必很多小伙伴对保险更有着一些误区，把它当做是保险公司“敛财”的一种工具</p><p>学姐很早之前也是这么觉得（我也一样！）</p><p>其实，保险可以称为是一项仁慈而又伟大的发明</p><p>想要学姐为保险正个名，为大家带来重疾险的发明者小故事，希望大家对于保险有一个更加全面的认识</p><a href="https://img-blog.csdnimg.cn/20190903083415952.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190903083415952.jpg" src="/img/loading.gif" class="lazyload"></a><p>照片中的男士是南非医生马里优斯·巴纳德博士，一位伟大的心脏外科医生，1967年世界首例心脏移植的手术实施者，1983年重大疾病保险的发明者</p><p>一天，有一位女士来到巴纳德博士的诊所</p><p>她当时34岁，有自己的事业，离过婚，带着两个孩子。她很消瘦、疲劳、多汗和咳嗽，还有吸烟的习惯，身体状况不好</p><p>检查发现，她得了肺癌，还好是初期</p><p>巴纳德医生通过手术切除了癌细胞肿块，对她说“我这次的手术非常的成功，你回去后做好后续治疗，好好的休息</p><p>目前你就像没有得过这个病一样，按时检查</p><p>但没有想到两年后，女士就回来了，但是脸色已经很难看了</p><p>赶紧去检查发现癌症复发了，只剩下不到三个月的寿命</p><p>巴纳德医生甚至有点生气的问：到底发生了什么事儿，不是和你说要好好休养</p><p>女士回答：治疗让我花了很多钱和时间，我要赚钱养家，我有两个孩子，我休息他们生活怎么办</p><p>这件事深深的触动了巴纳德博士，作为医生可以救人，甚至可以延长病人的生命</p><p><strong>却无法解决病患因缺钱而放弃治疗的难题</strong></p><p>即便病人在确诊之后获得了治疗活了下来，<strong>可是他们在财务上却“死”了</strong></p><p>因此，巴纳德博士与南非当地的保险公司合作设计了一款保险产品，它能够解决病人在被确诊之后，获得一笔保险金作为治疗、康复及弥补收入损失的费用</p><p>假如我们就是巴纳德医生，面对原本应该治愈却要离开的生命，我们的心情会怎么样？我们会做什么事情，帮助这个需要帮助的可怜病人和她的孩子呢</p><p>巴纳德医生说：“因为有高明的医生和医术，重大疾病不会结束一个人的生命，但是它会结束一个家庭的经济生命。”我们同意他的观点么？</p><p>巴纳德医生说：当一个家庭的经济生命结束的时候，病人的生命也就跟着结束了，这是我作为医生的最大无奈，我们看到过类似的事情么</p><p>巴纳德医生说：“医学一定会越来越进步，但是这种悲剧一定会重复发生</p><p>假如有一种保险，当这种情况发生的时候有一笔钱来帮助这个家庭，那病人好好的休息几年，他不就可以像健康人一样活下去了吗？”我们也愿意自己的家人健康的活下去吧</p><p>这就是重疾保险的诞生</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>在诞生之初，重疾保险就为了解决三个问题：<strong>治疗费用，康复费用和收入损失</strong></p><p>不仅仅是重疾保险，保险作为一项重要的家庭风险保障，当我们遭遇意外时，能够给自己提供足够治疗的资金，更能够离开时，给家人足够的后续生活保障</p><p>所以学姐真心希望大家重视保险的重要性（我不是学姐！！！我只是个搬运工）</p><hr><hr><h1 id="晚课内容"><a href="#晚课内容" class="headerlink" title="晚课内容"></a>晚课内容</h1><p>现在的保险代理人从业门槛之低，并不是找亲戚朋友，就会买到真正好的产品，适合自己的保险才是最好的。所以，<strong>最重要的还是自己要有这方面的知识</strong></p><p>坑爹的产品和代理人每个公司都有，要想自己不被坑，首先还是自己能有一定的 <strong>分析判断能力</strong>，<strong>相关的专业知识</strong>。所以，我们需要武装自己的大脑，学习专业的知识</p><p>靠山山倒 、靠人人跑 、只有 <strong>靠自己</strong> 才是最靠谱的。<strong>自己的知识思考和分析才是最靠的住的，再辅助以一些讨论、意见交换才是无敌</strong></p><p>而不是简单的去问别人。自己没有知识储备，<strong>别人的意见不知是蜜糖还是毒药</strong>……</p><p>所以自己懂才不会出冤枉钱，保险一交几十年也是几十万的投资，自己要对自己的资金负责</p><hr><h2 id="医疗膨胀"><a href="#医疗膨胀" class="headerlink" title="医疗膨胀"></a>医疗膨胀</h2><p>今天有个小伙伴小窗问我，已经买了一份保险，那份保险够了吗？  </p><p>我觉得这个问题挺典型的，给大家说说，除了通货膨胀这个小怪兽了哈，还有个小怪兽在偷偷蚕食我们的血汗钱  </p><p>其实还有一个更可怕的怪兽在虎视眈眈的看着我们，觊觎我们的劳动成果，“医疗通胀”了解一下  </p><p>嗯呐，啥是医疗通胀？小伙伴们可以脑洞一下  </p><p>美世咨询2017年的《医疗成本调研报告》指出，2017年的全球医疗成本通胀是9.7%，  </p><p>如果保持这样的速度，意味着 <strong>6年后享受同等医疗服务的价格是现在的2倍。</strong>  </p><h3 id="故事（加深理解）"><a href="#故事（加深理解）" class="headerlink" title="故事（加深理解）"></a>故事（加深理解）</h3><p>大家明白了不？如果还不太明白，故事百宝袋的班班（老师叫班班）来给大家讲一个事情，帮助大家理解。  </p><p>10年前陪表姐做阑尾炎的手术。  </p><p>那时候微创技术不是特别普及，大部分的医院都是做的传统手术，创伤相对来说要大一点，恢复时间也长一些。现在她肚子上还有一个毛毛虫。  </p><p>费用嘛，就是一两千左右，住院时间一周。  </p><p>现在呢，微创技术已经全面普及，创伤小，恢复时间短。  </p><p>人受的罪少了，当然价格相应上涨，费用变成了1万左右，住院时间缩短到了4天。  </p><p>有的患者家属年龄比较大，看了账单就会有抱怨：怎么现在做个阑尾手术这么贵了？以前可不是这个价啊！  </p><p>医务工作者只能笑笑，啥都不能说。这就是医疗通胀。  </p><p>想想小时候矫正牙齿，也就花了2、3千，现在没有1、2万根本不用想。</p><p>医疗技术在不断进步，医学研究人员会不断优化治疗过程，减轻患者的痛苦，成本高了，当然价格会上涨。  </p><p>再就是通货膨胀的作用，让医疗费用不断攀升  </p><p>说了这么多，大家可能会纳闷，医疗费用上涨和保险有什么关系，哈哈，关系大了去了  </p><p>大家可以想象一下，现在有一个重疾险，保额是30万。也就是说一旦确诊了重疾，保险公司会按照保险条款的相关规定，给付30万。  </p><p>但是，如果这个重疾险的是一个定期或者终身重疾，投保人在30岁的时候买的，57岁发病。</p><p>30岁的时候，万一患了重疾，30万可能是够用的。过了27年后，到了57岁的时候，这30万还会够用吗？  </p><p>因为医疗通胀的存在，30万是肯定不够用的。  </p><hr><h2 id="不能一份保险保终身"><a href="#不能一份保险保终身" class="headerlink" title="不能一份保险保终身"></a>不能一份保险保终身</h2><p>所以不能一份保险保终身，要知道，重疾的高发年龄就是在中老年时期。  </p><p>其实说了这么多，班班是想告诉大家<br>没有一步到位、一劳永逸的保险配置方案。 </p><p>那我们该怎么做？  </p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>选择消费型保险，费用不高，以后再增加保障也不会有太多压力。</strong>  </p><p>毕竟每一个人的每一个人生阶段，不同的经济条件，所需要的保额都是不一样的。   </p><p>除了系统的学习保险知识，根据自身的实际情况制定最适合自己的保险配置方案，好像我们没有其他选择。  </p><p>也有小伙伴聊到了分红险，有小伙伴自家保险每年就花2，3万，所以，我们今晚一起来聊聊分红险~  </p><hr><h2 id="三十岁前的每一天"><a href="#三十岁前的每一天" class="headerlink" title="三十岁前的每一天"></a>三十岁前的每一天</h2><p>先给大家看个保险的内容，大家说说觉得它好吗？咱们今晚解答<br><a href="https://img-blog.csdnimg.cn/20190903084951992.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190903084951992.png" src="/img/loading.gif" class="lazyload"></a></p><p>假设保险公司略微具备一点投资知识（这几乎是肯定的），年收益率达到6%的话会怎样呢？到70岁那年，保险公司从客户身上赚到的利润将达到119万。<br><a href="https://img-blog.csdnimg.cn/20190903085541245.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190903085541245.png" src="/img/loading.gif" class="lazyload"></a></p><p>再假如保险公司的年收益率达到10%呢？到70岁那年，保险公司从客户身上赚到的利润将达到613万！！</p><p>如果到了100岁……这个数字会达到1个亿！！</p><p>所以你想，保险公司给你区区每年2.1万很划算吗？羊毛出在羊身上呢。</p><p>顺便说一下，在后面的课程我们会介绍指数基金，从指数基金30年历史来看，10%的年化收益率真的不算非常难。</p><p>对于来上小白营的同学来说，大家都有理财意识，接下来培养自己的理财能力，战胜保险理财收益是妥妥的。就别指望保险给你生钱啦，你拿钱去投资，比它的回报要多得多！ </p><p><strong>保险第三原则：保险最重要的是保障，而非投资。</strong></p><p>当然，如果你的资产比较多，也能够接受这个比较低的年化收益，想要配置一部分低风险的年金险，那也是可以的。班班只是想告诉大家，我国保监会的规定，决定了一般理财险的收益率不会很高，这个大家需要明确。</p><hr><h2 id="保险中的坑"><a href="#保险中的坑" class="headerlink" title="保险中的坑"></a>保险中的坑</h2><p>其次，班班知道很多小伙伴对于买保险一事，会担心其中有坑。班班在这里和大家说道说道。</p><p>保险是一个严格的法律合同，涉及到法律问题，就会有法律条文条款。实际上保险条款也是经过律师审核出来的，不同的人对不同文字的理解肯定会有歧义，如果有明显歧义的话，就比如说同一条法案或保险条款，保险公司的说法跟我们为客户的理解不一样。<br>然后大家的解释都有道理，都情有可原，都能解释得通，那么如果这种情况发生的话，法院和仲裁机构他们的判决，一般都是倾向于投保人和被保险人的利益，也就是我们客户的利益。</p><p>嗯，也就是正常情况下，我们是可以得到赔偿的。当然，通过保险的系统学习，大家会了解的更多，就更不用去畏惧这些条文这些陷阱。</p><p>班班也曾经和从事保险代理人的朋友交流过，当客户投诉、跟保险公司对簿公堂的时候，保险公司很少情况下会胜出，那保险公司其实也很不愿意跟客户打官司，因为这样会明显地影响到公司的声誉，无论是保险公司赢了还是客户赢了，那对保险公司声誉都不好。所以大家对这个问题不用太担心。</p><p>其实在购买保险一事上，我们更需要担心的是，不专业的代理人，或者是各种渠道有意无意给我们带来的错误的信息。这才是最大的坑。</p><p>就比如说不专业的代理人，他们可能会为了销售告诉你一些错误的信息，那其实是很容易误导我们的，让我们有错误的认识。条款没有错，但是却会有一些误读条款的人。</p><p>保险保的不是人，是我们的财产</p><p>2018年第一季度，银保监会数据显示保险投诉率达到41.63%。</p><p>投诉的主要内容就是部分营销人员片面解释产品条款，故意隐瞒免赔额、除外责任等.<br>最后，班班再次温馨提醒大家一下。</p><p>买保险就像买衣服，要根据不同家庭的经济和风险情况，量体裁衣，合理设计。没有最好的保险，而只有最适合自己的保险。</p><p>我们一生的保险需求，要考虑伴随年龄的变化，自身的的经济结构，资产结构，收益目标，保险利益，对应的家庭责任以及生活品质的要求，所需要的保险产品都将随之发生极其大的变化。</p><p>保险最忌讳的就是听说别人买什么，你也买什么，每个人的情况不同，需要自己学会如何配置。任何资产配置的核心都是以当前实际情况为依托综合考量的结果。</p><p>可能有一些有意识的小伙伴也会去看一些网络平台上大V的介绍。</p><p>在这里班班也要提醒一下，不要盲目的听从一些理论讲解，偏听偏信，不管是保险配置还是投资理财甚至是其他的决断，都应该独立自主，从自身的需求出发去选择。</p><p><strong>况且很多人经常是抛开条款来说的，然而保险最重要的就是条款。</strong></p><p>举个例子，一个年龄30岁单身和一个年龄50岁有两个孩子的一家之主的配置绝对是差异很大的，具体的配置是差异万千的。</p><p>但是很多小伙伴可能就会根据一篇文章的介绍就去买了一个保险产品。</p><p>很多人也许都遇到过不靠谱的保险代理人，也买到了根本不适合自己的保险产品，其实还是因为我们自己不具备辨别的能力。</p><p>在这里班班也要提醒一下，不管是保险配置还是投资理财甚至是其他的决断，都应该独立自主，从自身的需求出发去选择。</p><p>能够来到14天训练营学习的小伙伴们，相信大家都是非常理性，非常正能量，有很强学习能力的。</p><p>如果大家要想要科学合理的配置自己的保险，除了选到一个专业的保险代理人，也需要做到自身能够懂得保险的正确理念和正统的基础知识，不说做到精深，至少要做到有概念会识别吧。</p><p>如果我们自己一脸懵逼，那就是保险经纪眼里的软柿子。</p><hr><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><p>今晚的分享就要结束了，班班先带领大家回顾一下今晚的重点内容：</p><ol><li>保险作用：在风险发生后，转移风险，为我们兜底付钱，避免发生财务危机。</li><li>保险要优先考虑经济支柱，且保险要全面：意外、重疾、寿险、医疗。</li><li>要根据自身情况配置合适的保险，保险最重要的是保障，而非投资。</li></ol><p>班班再补充一下，我们为什么要学习保险知识</p><ul><li>第一：为了防骗防坑，无论你是找保险代理人还是经纪人还是自己在网上买保险，都可能发现一些误导或者说是为了销售而刻意隐瞒的情况；</li><li>第二：为了更好的沟通，当然也不是说所有的保险代理人的宣传都会误导我们，只有我们学习了保险知识之后才可以真真听懂那些是即专业又可靠的建议，从而发现哪些是好的产品而哪些产品会更适合自己；</li><li>第三：以节省保费，除了通过线下代理人以外的渠道购买保险外，我们在网上购买保险已经是非常非常方便了，网上因产品丰富，选择到更合适的机率会更大些。</li></ul><p>以上就是今天的全部内容了，谢谢大家。</p><hr><hr><h2 id="提问"><a href="#提问" class="headerlink" title="提问"></a>提问</h2><h3 id="Q1：第三点，以节省保费的意思是，我们通过线下代理人或者网上的选择更多，从而选对适合自己的保险的意思嘛"><a href="#Q1：第三点，以节省保费的意思是，我们通过线下代理人或者网上的选择更多，从而选对适合自己的保险的意思嘛" class="headerlink" title="Q1：第三点，以节省保费的意思是，我们通过线下代理人或者网上的选择更多，从而选对适合自己的保险的意思嘛?"></a>Q1：第三点，以节省保费的意思是，我们通过线下代理人或者网上的选择更多，从而选对适合自己的保险的意思嘛?</h3><p>A1:@拾壹 可以这么说。电子保单和纸质保单一样具有法律效益，同样是保险公司进行承保的。就像你在苹果官网和苹果专卖店里买的手机，本质也没有什么差别。</p><p>保险公司有几百家，保险有几千种，但是大家熟悉的保险公司可能就是那么几家，保险也不是公司有名就越好的。。最重要的还是看条款哦。</p><hr><h3 id="Q2：现在有一些互助保之类的东西，就是一个人生病，一群人平摊的那种，也属于保险吗？"><a href="#Q2：现在有一些互助保之类的东西，就是一个人生病，一群人平摊的那种，也属于保险吗？" class="headerlink" title="Q2：现在有一些互助保之类的东西，就是一个人生病，一群人平摊的那种，也属于保险吗？"></a>Q2：现在有一些互助保之类的东西，就是一个人生病，一群人平摊的那种，也属于保险吗？</h3><p>A2：相互宝不是保险是众筹<br>Q2：所以也不能代替保险是吗？<br>A2：相互宝，保额很低，40岁以前30万，40岁以后10万，60岁以后没保障<br>A2: 李小燕 一年期保障不够，如果你得了重疾，就无法再续保了,而且，越年轻保费越便宜。同样投保30年，你们可能每年保费只要几百，而我要几千了,指望相互宝是不可能的,还有之前支付宝那个新闻不知道大家看了没有，就诊花费9102.8元，好医保报销94.03元，价格和价值是成正比的，不要贪图便宜就忽略了具体的保险条例和理赔条件</p><p>没有保险公司兜底，，没有约束力。。可以随时退出，随时终止，以后是否长期有效，不保证</p><p>在我看来，是比较坑的</p><hr><h3 id="Q3：社保＋补充医疗险＋意外险，这样配置是否就有比较足够的保障啦？"><a href="#Q3：社保＋补充医疗险＋意外险，这样配置是否就有比较足够的保障啦？" class="headerlink" title="Q3：社保＋补充医疗险＋意外险，这样配置是否就有比较足够的保障啦？"></a>Q3：社保＋补充医疗险＋意外险，这样配置是否就有比较足够的保障啦？</h3><p>A3： 要从你的年龄、家庭经济情况等考虑，重疾、寿险也是很重要的</p><hr><h3 id="Q4：保险公司不会倒闭吗"><a href="#Q4：保险公司不会倒闭吗" class="headerlink" title="Q4：保险公司不会倒闭吗"></a>Q4：保险公司不会倒闭吗</h3><p>A4:@Adele 很多代理人不懂，会说保险公司是不能倒闭的<br>但是保险法第89条说了，其实保险公司是可以倒闭的。如果是分立、合并或者被依法撤销的话<br>不过如果真的倒闭了，经营的人寿业务要转移给其他的人寿公司<br>而且。中国是世界上对保险公司监管最严的国家，没有之一<br>所以保险公司是有倒闭的可能，但是这个可能性很低很低<br>退一万步说，真的倒闭了，还有一个东西叫做保障基金，大家可以百度一下</p><hr><h3 id="Q5：重疾险-寿险-意外险-医疗险一般都买一个公司的，还是只需要看条款合适的，不同公司的也可以？意外险是只保命吗，如果说后面出现修复这种还有理赔吗？"><a href="#Q5：重疾险-寿险-意外险-医疗险一般都买一个公司的，还是只需要看条款合适的，不同公司的也可以？意外险是只保命吗，如果说后面出现修复这种还有理赔吗？" class="headerlink" title="Q5：重疾险 寿险 意外险 医疗险一般都买一个公司的，还是只需要看条款合适的，不同公司的也可以？意外险是只保命吗，如果说后面出现修复这种还有理赔吗？"></a>Q5：重疾险 寿险 意外险 医疗险一般都买一个公司的，还是只需要看条款合适的，不同公司的也可以？意外险是只保命吗，如果说后面出现修复这种还有理赔吗？</h3><p>A5:@Adele 可以买任意公司，重要的还是要看条款，根据自己的需要买</p><p>任何保险都不能保命</p><p>你买了意外险，也救不了公交车掉下桥，只是为你的家人留下一笔钱可以继续生活</p><p>A5:修复是什么意思</p><p>Q5:比如说 出了火灾什么的 被烧伤了 </p><p>A5：@Adele 看具体保险产品的条款</p><hr><h3 id="Q6：还有问的最多的，我已经买了不合适的怎么办呢？"><a href="#Q6：还有问的最多的，我已经买了不合适的怎么办呢？" class="headerlink" title="Q6：还有问的最多的，我已经买了不合适的怎么办呢？"></a>Q6：还有问的最多的，我已经买了不合适的怎么办呢？</h3><p>A6：不建议大家盲目退保，因为退保会有一定的经济损失。如果要分析，可以学习以后量化的算一下。这就像我们买股票，如果错买了一只股票，当学会分析财报之后发现它不行，就应该及时的止损。</p><p>另外补充一下，我们不要着急讨论是否该退保的问题。在退保之前我们得先解决两个问题。</p><ol><li>你是否确定自己会买到合适保险呢？什么样的保险是适合你的，你清楚吗？</li><li>你新购买的保险是否已经开始生效？这两个问题解决好了，再来考虑是否要退保~</li></ol><hr><h2 id="Q7：还有一个大家比较关心的，消费型的保险都是一年一交吗？是一直交到老吗？还是分险种。"><a href="#Q7：还有一个大家比较关心的，消费型的保险都是一年一交吗？是一直交到老吗？还是分险种。" class="headerlink" title="Q7：还有一个大家比较关心的，消费型的保险都是一年一交吗？是一直交到老吗？还是分险种。"></a>Q7：还有一个大家比较关心的，消费型的保险都是一年一交吗？是一直交到老吗？还是分险种。</h2><p>A7:保险根据保障年限分，可以分为长期险种和短期险种，长期险种的保障年限都超过1年，比如20年，30年，以及终身等。而短期险种的保障年限最长只有1年。</p><p>拓展一下：如何选择呢，不同的险种不一样。<br>意外险可以选择短期险，交一年保一年，意外险的费率主要跟职业相关，而跟年龄无关，所以每年的保费变化不大。</p><p>重疾险和寿险最好选择长期险，每年的保费不变，也没有续保被拒的情况，越早买费用越少。</p><p>今天好多小伙伴过来跟我说他们目前的保险配置，都不太合适。就算你一年多花2000块钱的商业溢价，20年下来也浪费了4万块钱。这个钱拿去投资有什么不好的呢？ </p><p>一份保险，一交几十年，大几十万的，难道不应该好好学习一下吗？磨刀不误砍柴工，千万别等买错了再去后悔难受，只能用更多钱来为自己买单了。</p><p>学习赚钱的同时，还要学习省钱</p><p>很多人不相信保险公司是因为很多人被亲戚朋友推荐了不合适的保险，从而一朝被蛇咬十年怕井绳，不把风险转嫁给保险公司，那就只有自己承担风险啦</p><p>这其实也是一种穷人思维的体现，当我们有足够的知识，就可以掌控，而不是任由别人牵着鼻子走啦。</p><p>以前我也和大部分同学一样，哪里懂什么保险呀，感觉就是骗人的，现在不那么想了，我可以自己挑选合适的，再也不担心自己踩坑了。</p><hr><h3 id="Q8：年金险是什么？刚刚听同事讨论了一下"><a href="#Q8：年金险是什么？刚刚听同事讨论了一下" class="headerlink" title="Q8：年金险是什么？刚刚听同事讨论了一下"></a>Q8：年金险是什么？刚刚听同事讨论了一下</h3><p>A8：分红险的一种</p><p>现在又出了很多性价比高的产品，等学完了可以好好选选。</p><hr><hr><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>学习是自己的事情，上点心，学到就是自己的，希望大家都不是为我学习的，不懂的地方一定要及时提出来。</p><hr><h1 id="宣传语"><a href="#宣传语" class="headerlink" title="宣传语"></a>宣传语</h1><p>余生很贵……<br>能用“一个月工资”买保险！<br>就别把“一生积蓄”给医院！<br>有家、有爱、有保险！</p><p> –2019银保监公众宣传语</p><hr></body></html>]]></content>
      
      
      <categories>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础投资知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【经济学_03】晨读 &amp; 复利</title>
      <link href="p/49502.html"/>
      <url>p/49502.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><p>图片为长投学堂的资料，仅供个人学习！！</p><hr><h1 id="晨读总结"><a href="#晨读总结" class="headerlink" title="晨读总结"></a>晨读总结</h1><p>文章链接：<a href="https://docs.qq.com/doc/DRFdOTnNUcExxTWh0" target="_blank" rel="noopener">https://docs.qq.com/doc/DRFdOTnNUcExxTWh0</a></p><h2 id="1-财富的载体：时间"><a href="#1-财富的载体：时间" class="headerlink" title="1. 财富的载体：时间"></a>1. 财富的载体：时间</h2><p>我们需要将每一份时间卖得更贵<br> 也就是提升自己的价值，我们的单位时间价值才能提高！<br> 有时候改变我们的只是那么一个小小的思想和方法而已。但是也许就是那一点，可能就是改变人生的一个支点。<br> 直观地说，普通人花钱去买别人的时间来让自己变得更值钱，那么你的单位时间价值就提升了。我们应该利用这段时间去武装自己的大脑，以创造更多的财富。</p><h2 id="2-理财需趁早"><a href="#2-理财需趁早" class="headerlink" title="2. 理财需趁早"></a>2. 理财需趁早</h2><p>时间的力量是非常可怕的，而复利就是依靠着时间这个强硬后台的。此消彼长，那么结果就是天壤之别了。</p><h2 id="3-每天努力一点点"><a href="#3-每天努力一点点" class="headerlink" title="3. 每天努力一点点"></a>3. 每天努力一点点</h2><p>这张图很多小伙伴应该都见过，每天进步1%。那一年之后就会是现在的37.8倍。而每天退步1%，一年之后是现在的3%<br><a href="https://img-blog.csdnimg.cn/20190901190130907.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190901190130907.jpg" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="复利"><a href="#复利" class="headerlink" title="复利"></a>复利</h1><p>复利的公式是 ==最终收益 = 本金 *（1+收益率）^ 时间==<br>听说过各种网贷嘛？或者听说过大学生校园贷，贷款一两万块钱，最后要卖房还~<br>所以会理财的人，思维是指数型的，没错，就像那个国王的棋盘。</p><h2 id="国王的棋盘"><a href="#国王的棋盘" class="headerlink" title="国王的棋盘"></a>国王的棋盘</h2><p>国王的棋盘，对这个故事感兴趣的上网上搜一下，最后农民在坚持了七天之后就饿死了。<br>总结：做事情 <strong>不要只有一个模式</strong>，要多想一想，冷静下来，要考虑到各种场景以及各种因素。<br>我们都知道，大家关注的都是一粒、两粒、四粒的复利增长上，却忘了这里面有个场景，就是农民是要靠米吃饭的啊。复利也是需要 <strong>时间</strong> 的。</p><p>第二个结局：假设农民自己本身有米，顺利的度过了前期。很快地主就发现，即使将自己所有的粮食都给他，也不够百分之一。<br>这个棋盘故事里面，后一个格子是前一个的一倍。相当于就是收益率100%，所以，你要是听到什么投资一年翻好几倍的，肯定是骗人的。</p><p>当利润达到10%的时候，他们将蠢蠢欲动；<br>当利润达到50%的时候，他们将铤而走险；<br>当利润达到100%的时候，他们敢于践踏人间的一切法律；<br>当利润达到300%的时候，他们敢于冒绞刑的危险。</p><h2 id="复利-amp-单利"><a href="#复利-amp-单利" class="headerlink" title="复利 & 单利"></a>复利 & 单利</h2><p>复利和单利，在初期的时候，差别还不是很大。<br>同样是投资10万元，到第10年的时候，也只是相差5.9万，可是随着时间的拉长，差别越来越大，第50年的时候，单利是60万，而复利是1174万，简直是天壤之别。<br><a href="https://img-blog.csdnimg.cn/20190902204754617.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902204754617.jpg" src="/img/loading.gif" class="lazyload"></a></p><h3 id="影响因素"><a href="#影响因素" class="headerlink" title="影响因素"></a>影响因素</h3><ul><li><p>第一个是 <strong>本金</strong> 啦，本金越多，最终收益越大，但是本金的影响其实没有那么大，而且本金在短期内是很难改变的。</p></li><li><p>第二个因素，影响非常大，就是 <strong>收益率</strong>，一年赚3%和一年赚10%，差别是显而易见的，我们在本金不多的情况下，就要努力提高自己的投资能力，提高自己的收益率啦。</p> <a href="https://img-blog.csdnimg.cn/20190902205041290.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902205041290.jpg" src="/img/loading.gif" class="lazyload"></a> 如上图所示，从100万开始，收益率1%、5%、10%、15%，30年后的差异，大家应该都能从曲线就可以看到。这个点很好理解，我们学习就是为了提高收益率，在相同的时间内可以得到更多的回报。</li><li><p>第三个因素其实影响更大，就是 <strong>时间</strong>。年复利，和每天复利，后者要高很多，迭代的次数越多，复利威力越大，真是恨不得每一秒都在复利。</p><p>   相信大多数普通人是依赖工资结余进行投资的。而我们年轻时可能犯的最大的错误就是，总想着还有明天，想把一切责任都交给明天的自己。</p><p>  22岁、27岁、32岁开始投资的人到底有多大区别呢？也许你认为5年在漫漫人生路上，连1/10都不到，即使错过5年，只要抓紧时间，就能够迎头赶上。</p></li></ul><p>复利既然有正，那么肯定有负。我们推迟投资的每一天，复利都会发挥反向的作用。原因就是通货膨胀。<br>投资成本就是作用在你资产上的反向复利，因为投资是一生的事情，你要投十年，二十年，三十年。<br>还有同学觉得自己本金少，所以是不是几块钱的收益对自己影响不大呢？<br>这几块钱也提现了你的投资能力，必须现在开始锻炼。不积跬步无以至千里。<br>强调一点，大家现在刚开始学习理财知识，不要想着一步登天立刻就去下载什么理财APP啊，投资这投资那的。<br>有句话是这么说的，不投资是等X。乱投资是找X。<br>“不懂的不要碰”，希望大家记住这句至理名言<br>好，那关于投资上的复利说到这里，最重要的是时间因素。也就是你开始投资的时间<br>在强调一次怎样投资才算得上产生复利：第一年的本金+收入作为第二年的本金<br>投资、身体健康都是按照复利规律发展的。那么，人生呢？</p><h2 id="复利的魔法：时间"><a href="#复利的魔法：时间" class="headerlink" title="复利的魔法：时间"></a>复利的魔法：时间</h2><p>假设有小夏和小冬两个人，小夏的理财意识觉醒得比较早，20岁的时候就开始投资。小冬呢，要稍微晚一点，25岁才开始投资。看起来只是差了5年，差距不是很大，只要抓紧时间，就能迎头赶上，可是，事实的真相是什么呢？</p><p>假设两人都是每月定投1000元，每年的收益率为12%（历史数据回溯定投指数基金能够达到这个水平）。<br>小夏从20岁开始投资，共投资10年，到31岁的时候就不再投入本金。<br>小冬从25岁开始投资，一直投入本金直到60岁。<br>我们来看一下，当他们到60岁的时候各自都有多少钱呢？</p><p>60岁的时候，小夏有822万，小冬有733万，即使小冬的投入本金是小夏的3.5倍，最终也还是没有追上小夏。并且，我们可以看到，在人生的各个阶段，小冬始终落后于小夏，仅仅就是因为 <strong>相差了五年。</strong></p><p>复利的魔法在漫长的 <strong>时间</strong> 中发挥了魔力，如果你行动时间晚了一点，那么你的投资回报就会少得多。所以执行力强的人往往会提前行动，争取时间，让复利发挥出最大的力量。</p><h2 id="错误观点：我没钱理财，以后再说吧"><a href="#错误观点：我没钱理财，以后再说吧" class="headerlink" title="错误观点：我没钱理财，以后再说吧"></a>错误观点：我没钱理财，以后再说吧</h2><p>年轻人最大的资本就是时间。<br>20岁的100块，和30岁的100块能一样么？20岁的100块可以积累10年的复利，越早开始越轻松。<br>复利仅仅体现在投资么，不，我认为复利是这个世界上最重要的法则，在很多地方都发挥着重要的作用。<br>就以身体健康做例子好了。你的每一次饮食，每一次锻炼，每一个与健康有关的选择，其实都是加在你健康上的复利因子，有正的，也有负的。<br>复利有什么特点？就是最开始毫无声息，后面就爆发了。<br><a href="https://img-blog.csdnimg.cn/20190902205836240.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902205836240.jpg" src="/img/loading.gif" class="lazyload"></a><br>这个是常见重疾的发病率，是不是跟复利曲线一模一样的呢？一些作用在你身上对健康不利的因子，常年累月地，按照复利的规律影响你的健康，这就是为什么很多人，平时也很健康的，突然就垮了。<br>大部分年轻人很少有想到买保险的，觉得自己身体倍棒，因为他还在这个曲线的前面，不知道自己总归是会走到曲线后面的。</p><p>郑重提醒：一定要配置保险，因为到最后 <strong>风险的释放</strong> 几乎是必然的。<br>投资、身体健康都是按照复利规律发展的。那么，人生呢？为什么小学同学都是差不多的，到了中年后却千差万别。</p><p>你的每一个选择，都是作用在你人生上的复利因子，有正的，有负的，起初看不出来变化。就像棋盘里面第一格，第二格的麦粒。但是后面巨大的收获如果没有前面这第一格，第二格麦粒，又从何谈起呢？</p><p>人通常都看不起，或者不在意微小的进步，其实，正是这些点点滴滴的进步，才能给你想要的未来。这个世界从来没有什么一步登天，所有的成就都是复利的力量，我相信复利的力量，也相信投资的必要性。</p><h2 id="我已经晚了，怎么办呢？"><a href="#我已经晚了，怎么办呢？" class="headerlink" title="我已经晚了，怎么办呢？"></a>我已经晚了，怎么办呢？</h2><p>想办法 <strong>利用复利</strong> 来缩短差距。</p><ul><li>要么你有足够的本金</li><li>要么你开始要比别人早</li><li>如果这两个都没有，那么你就只能提高自己的投资能力。</li></ul><p>相对增加本金和趁早开始来说，我们已经错过了太多。那提高自己的收益率，才是我们可以快速赶超别人的方法。<br>无论我们是打工，做生意还是创业，其实你一生的财富终值都会跟我们的投资能力有关，跟投资收益率有关。为什么这么说呢？<br><a href="https://img-blog.csdnimg.cn/20190902210129355.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902210129355.jpg" src="/img/loading.gif" class="lazyload"></a><br>作为一般的普通人，如果你的投资收益率只有3%，也就是余额宝的收益率，那这辈子大概率会成为一个穷人。有人说我就安贫乐道，但是也别忘了，贫贱夫妻百事哀。<br>如果你的收益率是5%，也就是银行理财的收益率。那最多就是一个中产，中年危机最大的一群人就是中产。<br>如果你的收益率能达到10%及以上，那么恭喜你，你已经进入富人阶层。<br>可能有人觉得我说得有点夸张，我们来看一下各个国家的首富，他们的收益率。<br><a href="https://img-blog.csdnimg.cn/20190902210231956.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902210231956.jpg" src="/img/loading.gif" class="lazyload"></a><br>大家看一下他们的初始本金，菲律宾首富施至成的本金是最少的，只有0.1万，李嘉诚的本金也只有0.7万，但是这并不妨碍他们成为世界首富，所以，本金的影响并没有你想象地那么大。<br>这些世界首富身处各行各业，有零售业，有科技业，有开赌场的，也有投资的。<br>很多人认为巴菲特是炒股的，其实这位投资大师也是一位企业家，他经营的企业就是伯克希尔哈撒韦。<br>很多人认为李嘉诚是企业家，但其实他也是投资家，投资了很多行业和公司。<br><a href="https://img-blog.csdnimg.cn/20190902210323122.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902210323122.jpg" src="/img/loading.gif" class="lazyload"></a><br>所以，他们本质上做的都是同一件事，那就是投资。为什么有钱人越来越有钱呢，就是因为他们理解复利法则，懂得用投资来使自己的财富增值。<br>再看一下上面的表格，收益率最高的是比尔盖茨，达到了35.5%，最低的是何鸿燊，只有17.8%。大部分都是20%～30%之间。<br>这些收益率不是很高吧，我们努努力，20%可能做不到，10%还是可以达到的吧。10%意味着什么呢？意味着地区首富！</p><p>穷人和中产为什么不能跨越阶层呢？因为很多人懒，懒得学习，懒得行动，懒得努力。贫穷的原因很大一部分是因为懒惰。时间会帮你干掉大部分对手。<br>他们虽然知道钱放在银行会贬值，会让通货膨胀吃掉，但是他们懒得行动，不愿意花费一些时间去改变自己，每天躺在舒适区，有天父母需要养老金，孩子需要一大笔教育金，自己生病需要一大笔钱的时候，难道只能怪自己穷吗？<br>我们都是希望学会投资，最终能够财富自由的。你是希望自己和家人成为富人还是穷人呢？就取决于你现在的决定。</p><h2 id="投资，到底是人生的选修课还是必修课？"><a href="#投资，到底是人生的选修课还是必修课？" class="headerlink" title="投资，到底是人生的选修课还是必修课？"></a>投资，到底是人生的选修课还是必修课？</h2><p>对于独生子女这一代人，投资不是选修课，而是你必须精通的一项技能，一项刚需技能！就是特别特别刚的那种刚需技能。<br>为什么要这么说呢？不懂投资难道就不能好好过日子了么？<br>恐怕对于生于国家计划生育政策下的这一代人……是这样的。如果不懂得投资，未来你的生活很可能寸步难行。<br>可能有人会问，这么说是不是危言耸听了啊？<br>我想说的是，真的并没有。</p><p>如果你是独生子女，你（未来的）对象也是独生子女，那么不好意思，很可能你真的就是最近一百年以来中年生活危机最严重的那一代人。<br>家庭结构很可能是在人类历史上最最最特别的，但是在如今最最最普遍的421家庭，或者422家庭。<br>什么是421或是422呢？就是上面四个老人，中间是独生子女一代的夫妻小两口，下面是一个孩子或者是二胎政策开放后的两个孩子。<br>如果用比较官方的话语来说，家庭结构当中的劳动人口，小于了50%，甚至在422家庭中，劳动人口只有可怜的25%。<br>一个大家庭八口人，处于青壮年不需要人照顾的只有两个人……这个数据是一个细思极恐的事情。<br>话说现在貌似有些理解了为啥古代中国讲究家族要“人丁兴旺”，估计也是这个原因把。<br>以前觉得作为独身子女，什么都是自己的，一身轻松<br>现在才发觉出来混，还是要还的<br>当依靠出卖时间换取金钱的“主动收入”无法再有效的时候，我们这一代人能够仰仗的，可能真的就只有投资带来的“被动收入”了。<br>巴菲特这句话应该改一下，如果你没有找到一个当你睡觉时还能赚钱的方法，未来你可能无钱可赚……<br>不要把投资当做一个可有可无的选修课了，这件事在我看来，甚至是比高考科目还要重要的必修课，真的会关系到你家庭未来十年到二十年的幸福。<br>60岁之后过什么日子靠今天的自己，还是未来的子女，由现在的你来决定。</p><h2 id="嘟嘟的-50-块"><a href="#嘟嘟的-50-块" class="headerlink" title="嘟嘟的 50 块"></a>嘟嘟的 50 块</h2><p>讲个去年长投年会上，水湄姐讲的复利的故事<br>水湄姐和熊大的儿子叫嘟嘟，去年五岁快要六岁了，这个时候小孩子对于钱， 复利这些其实是没有什么概念的<br>水湄姐就跟嘟嘟说，妈妈每个月给你50块的零花钱，如果你能把这50块钱储蓄起来不花掉，妈妈给你10%的奖励金，10%是多少？也就是5块，这5块在嘟嘟的眼里是个什么概念呢？也就是一罐小小的酸奶，恩，这个酸奶嘟嘟一天可以喝四瓶。那如果嘟嘟这一年都没有花这每个月的50块，那么他一年后将会得到什么？答案是价值1226元的星球大战乐高一套<br>嘟嘟的50块，12个月复利能买到1226的乐高一套，那么10年呢？<br>答案是5099万，东京上野公园旁，200平米的复式大house一套</p><h2 id="欠-8-个亿啥时候能还完？"><a href="#欠-8-个亿啥时候能还完？" class="headerlink" title="欠 8 个亿啥时候能还完？"></a>欠 8 个亿啥时候能还完？</h2><p>大家还记得 fanbingbing 很有名的八亿罚款么？<br>那么问题来了，如果你月储蓄1万，不会投资，那么我们需要多久才能拿到这8个亿<br>那么假设你有投资能力呢？8亿需要多久来还清？<br><a href="https://img-blog.csdnimg.cn/20190902211301820.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190902211301820.jpg" src="/img/loading.gif" class="lazyload"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础投资知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【经济学_02】晨读 &amp; 科学记账 &amp; 分辨资产与负债 &amp; 开源 &amp; 本章建议</title>
      <link href="p/10997.html"/>
      <url>p/10997.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="晨读-amp-总结"><a href="#晨读-amp-总结" class="headerlink" title="晨读 & 总结"></a>晨读 & 总结</h1><p>文章链接如下：<br><a href="https://docs.qq.com/doc/DRHBaQXBGekhXTllo" target="_blank" rel="noopener">https://docs.qq.com/doc/DRHBaQXBGekhXTllo</a></p><h2 id="1-思维"><a href="#1-思维" class="headerlink" title="1. 思维"></a>1. 思维</h2><p><strong>没钱不需要理财</strong> 的思维，只能将你变为穷人，你不理财，财不理你</p><h2 id="2-负债的人"><a href="#2-负债的人" class="headerlink" title="2. 负债的人"></a>2. 负债的人</h2><p>如果你时常负债，那就要先学会科学记账，并认真分析你的账本<br>减少甚至规避掉那些不必要的支出，跨出保持正常生活的第一步。</p><h2 id="3-月光的人"><a href="#3-月光的人" class="headerlink" title="3. 月光的人"></a>3. 月光的人</h2><p>如果你现在是月光，那就需要先认清自己的现状，再树立一个正确的理财理念<br>找到合适自己的理财方法和投资方式，努力开源节流，以实现月有结余。</p><h2 id="4-月有结余的人"><a href="#4-月有结余的人" class="headerlink" title="4. 月有结余的人"></a>4. 月有结余的人</h2><p>如果你现在已经可以做到月有结余，那就需要先努力跑赢通货膨胀<br>再养一只肥鹅，从而进一步追求财富自由。</p><hr><h1 id="科学记账"><a href="#科学记账" class="headerlink" title="科学记账"></a>科学记账</h1><p>这个月的总消费，你要 ==分析== 一下，哪些是 <strong>必要消费</strong>，哪些是 <strong>不必要消费</strong>，哪些是 <strong>浪费消费</strong> </p><p>比如：我这个月有两万的收入，9000块钱的必需品，那下个月就把这 9000 块钱拿出来放在货币基金里（比如余额宝），其他的 11000 在下个月开了工资之后，该买基金买基金，该买股票买股票，该投资产品就投资产品。</p><ul><li>分析完之后，看看那一部分钱是必须每个月的开支，然后哪一部分钱是这个月浪费掉的，下个月就要重新规划起来这部分钱 。</li><li>记流水账是没有用的，你要分析，改变消费方式与习惯，从而改变经济状况</li></ul><hr><h1 id="概念：资产、负债-amp-案例分析"><a href="#概念：资产、负债-amp-案例分析" class="headerlink" title="概念：资产、负债 & 案例分析"></a>概念：资产、负债 & 案例分析</h1><p><strong>资产：</strong> 就是能把钱放进你口袋里的东西，它能给你 <strong>不断带来收入</strong><br><strong>负债：</strong> 则是把钱从你口袋里取走的东西</p><p><strong>案例分析</strong></p><ul><li><p>第一个案例是汽车。有一个朋友，是公司营销部门的业务员，他工作努力，也很有营销天赋，自来熟，喜欢拜访客户，与客户聊天。这个人平时的生活比较节俭，工作两年，有了10万的储蓄，这工作后的第一个十万。他选择买了辆福特入门级车，这辆车给他的工作带来了一些积极的变化，主要是工作效率提高了，活动半径变大了，成了工作上很重要的一个助力。 </p><p> 一个比较明显的迹象，有车后他外出拜访客户的效率非常高，是过去跑客户数的三倍。而公司领导也开始安排一些更重要的工作给他，营销部业务员的收入与业绩直接相关，业绩又与有效工作量有关自然，有天分又肯干的他，收入相交其他同事上升更快些，工作成绩也更突出，前些时候被公司领导提升，做了营销经理。</p><p> 对这位朋友来说，这辆车是工作的助力，改善了工作效率，提升了自己的有效工作量，最终这些又反过来体现到自己收入的提高上。所以，车是他重要的资产。</p></li><li><p>第二个同样是买车的案例：有同学结婚了。原本她老公有台奥迪，后来婆家又给买了一辆50万的奔驰，这样家里就有了两台车。然而，她和她老公都是在自家公司上班，平时代步根本用不上两辆车。养护费，维修，停车，保险，总的来说，这第二辆车对同事家而言，增加了非必要的生活支出，减少了净现金流，是实实在在的负债。</p></li></ul><hr><h1 id="成为富人的秘密"><a href="#成为富人的秘密" class="headerlink" title="成为富人的秘密"></a>成为富人的秘密</h1><ul><li>在一生中 <strong>不断地买入资产</strong>?！资产品种丰富，给自己带来非常多的被动收入，不用单一依靠工资！<br>相对应的穷人的死穴就是，毫无任何资产可言！生活的唯一的经济支柱就是工资！</li><li><strong>乐意接受新鲜的事物</strong>，并在不断增长见识的过程中，提升自己辨别事物的能力，同时结交更多的朋友，拓展自己的圈子，遇到更多的贵人，进而良性循环！<br>而穷人对于任何新鲜的事物，第一反应就是屏蔽，或者说是封闭自我。因此穷人的眼界会越来越窄，见识越来越短，赚钱的道路也会越来越单一，最终悲悲戚戚的过一生。这就是我说的富人的第二个秘密：对待新鲜事物的态度。这也是穷人的第二个死穴：穷人思维。</li></ul><hr><h1 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h1><p>开源的意思就是 <strong>开辟收入的新来源</strong></p><p>收入少的时候如何开源：<br> 让你的时间卖出更多的价值</p><ul><li>投资自己，提升自己的技能，把自己的单位时间卖的更贵</li><li>将你的一份时间卖出很多份，比如公众号</li><li>让你的资产增值（资产增值不依赖你的工作时间）</li></ul><hr><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><ol><li>先储蓄，再消费，先从储蓄10%的月收入开始，生活质量不会下降很明显，同时比较容易坚持</li><li>投资自己，提升个人技能，自我增值才是最好的投资</li><li>对于零基础的人来说，可以先培养投资和理财的理念，再了解各种投资品，然后再进一步学习，之后再去完善好家庭的资产配置。</li></ol></body></html>]]></content>
      
      
      <categories>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础投资知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【经济学_01】通货膨胀 &amp; 投资陷阱</title>
      <link href="p/30333.html"/>
      <url>p/30333.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="通货膨胀"><a href="#通货膨胀" class="headerlink" title="通货膨胀"></a>通货膨胀</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>流通的货币过多，超过经济运行的需求，导致钱d不值钱</p><p>相信很多小伙伴都吃过老冰棍吧？尤其是对于80后、90后来说，老冰棍绝对是儿时不可缺少的回忆了。如今不少厂家也在打这张怀旧牌，一块钱就能买一支老冰棍。不过呢，大家肯定还记得，小时候吃的老冰棍，哪有一块钱那么贵啊？一般两毛钱就能买一支了。<br>同样是一块钱，当年能买五支，现在只能买一支了。这就是很多人经常感慨的，<strong>钱不值钱了</strong>。</p><hr><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>钱印多了</p><hr><h2 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h2><p><strong>财富的缩水</strong></p><p>CPI (消费者价格指数) 每年上涨 5%，可以理解为你的财富每年缩水 5%<br>举个例子：今年有 1 万，通胀率 5%，到明年它的购买力就变成了 $\cfrac{10000 元}{(1 + 0.05)}$ $=$ $9524元$，直接少了 476 元。钱还是 1 万，数额没有变化，但购买力已经只有 9524 元了</p><hr><h2 id="跑赢通货膨胀的方法"><a href="#跑赢通货膨胀的方法" class="headerlink" title="跑赢通货膨胀的方法"></a>跑赢通货膨胀的方法</h2><p>投资</p><ul><li>通胀是不可避免的，能做到的就是去学习投资，进而抵抗通胀</li></ul><hr><h2 id="不友好对象"><a href="#不友好对象" class="headerlink" title="不友好对象"></a>不友好对象</h2><ol><li><p><strong>把钱压在枕头底下的人</strong><br>一样的钱，昨天可能买奥迪，今天只能买奥拓，明天只能买一包奥利奥就不错了<br>自己的钱，放在家里多少年都不会涨，但是物价一直在涨，结果自己的钱被通货膨胀吃掉</p></li><li><p><strong>把钱存进银行的人</strong><br>银行定期利率一般也就是 2% 左右，（信息来源 <a href="https://www.yinhang123.net/lilvbiao_bank/24398.html）" target="_blank" rel="noopener">https://www.yinhang123.net/lilvbiao_bank/24398.html）</a></p><p>  这是 2019 年的各大银行利率</p><a href="https://img-blog.csdnimg.cn/20190830131021924.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190830131021924.jpg" src="/img/loading.gif" class="lazyload"></a></li><li><p>靠 <strong>一份</strong>  <strong>固定收入</strong> 过日子的人<br>请注意重点，一份 + 固定收入</p></li></ol><hr><h2 id="Q1-我本金少，我去投资根本赚不到多少钱，没必要学吧？"><a href="#Q1-我本金少，我去投资根本赚不到多少钱，没必要学吧？" class="headerlink" title="Q1. 我本金少，我去投资根本赚不到多少钱，没必要学吧？"></a>Q1. 我本金少，我去投资根本赚不到多少钱，没必要学吧？</h2><p>A1. 其实如果坚持系统投资，给它一段时间，我们的资金就会呈指数增长，但如果不开始，那就永远是 0，甚至是倒退着复利（因为通胀），<strong>我们推迟投资的每一天，通货膨胀就会发挥复利的反向作用，与别人的差距也会越来越大</strong></p><hr><hr><h1 id="投资陷阱"><a href="#投资陷阱" class="headerlink" title="投资陷阱"></a>投资陷阱</h1><p><strong>不投资是等死，乱投资是找死</strong></p><hr><h2 id="巴菲特的两句话"><a href="#巴菲特的两句话" class="headerlink" title="巴菲特的两句话"></a>巴菲特的两句话</h2><ol><li>不要亏损</li><li>永远记住第一点</li></ol><hr><h2 id="复利"><a href="#复利" class="headerlink" title="复利 *"></a>复利 *</h2><p>复利的意义就是利滚利<br>复利的计算是对本金及其产生的利息一并计算，也就是利上有利。</p><hr><h2 id="庞氏骗局"><a href="#庞氏骗局" class="headerlink" title="庞氏骗局"></a>庞氏骗局</h2><p>MMM 的本质是一个典型的庞氏骗局，通过高额回报来吸引投资者，并用发展下线的方式来支付前面的投资者。当没有新人加入，或者加入的新人不够支撑之前的人的利润时，这个游戏就玩不下了，崩盘是迟早的事。<br>崩盘了怎么办呢？它有一招很奇葩但很有效的模式——重启。<br>重启是什么意思呢？就是这个系统玩不转了，我们宣布系统要重启，<strong>如果你还想要拿回你原来的钱，那你要再往里面投新的钱</strong>。重启的实质，就是继续骗钱。</p><p>Q：如果是你，你会不会再投钱进去？</p><p>A1：不会，沉没成本，及时止损</p><p>A2：继续投入，其中有两个心里在起作用</p><ul><li><strong>侥幸心理</strong>：万一我能拿回来呢？要不试试</li><li><strong>无法舍弃沉没成本</strong>：我已经投了那么多钱，如果我不试试，那原来投入的钱都拿不回来了。</li></ul><hr><h3 id="沉默成本"><a href="#沉默成本" class="headerlink" title="沉默成本"></a>沉默成本</h3><p>沉没成本是指已经发生且不可收回的支出，无论现在或未来做什么决策，都无法改变的成本。（骗子就是利用这个心理反复的重启）<br><strong>执着于沉默成本是投资决策中一个非常严重的干扰心理</strong></p><hr><h2 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h2><p>防范有三条原则</p><ol><li><p>弄清楚每一个投资<strong>背后的原理</strong>，你赚的是 <strong>谁</strong> 的钱<br>大家要去想一想，我投资的项目，到底靠什么赚钱的呢？一个产品，一个公司，不是靠 <strong>优质的产品和周到的服务来赚取利润</strong>，而是通过 <strong>不断发展下线来赚取利润</strong>，大家觉得靠谱吗？</p></li><li><p>先学习，在投资<br>我们首先要通过学习弄清楚投资背后的赚钱逻辑</p></li><li><p>要知道投资的风险在哪里<br> 2018年 A股 上市公司中净资产收益率（可以简单理解为年收益率）超过20%的公司只有 318 家，而现在 A股 全部上市公司超过3700家，也就是说，不到十分之一的公司可以赚取20%的利润。上市公司基本上是整个社会中最能赚钱的群体了，它们的赚钱能力也不过如此。</p><p> 被尊为股神的巴菲特累计45年平均年化收益率为20.5%。20%的收益率好像不起眼，但是他凭着这不起眼的收益率曾干到了世界首富。</p><p> 过高的收益率是不可持续的。并且如果你不知道风险在哪里，那就一定要警惕，不知道的风险才是最大的风险。</p></li></ol><hr><h3 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h3><p>举个例子，2018年年初的时候有个新闻曝光了投资骗局冰川水，详细新闻链接：<a href="http://url.cn/5k8jm7E" target="_blank" rel="noopener">http://url.cn/5k8jm7E</a><br>它的噱头是投资2800元，40天后收益4000元。</p><p>识别这个骗局，<strong>要问自己四个问题</strong></p><h4 id="四个问题"><a href="#四个问题" class="headerlink" title="四个问题"></a>四个问题</h4><h5 id="1-收益率"><a href="#1-收益率" class="headerlink" title="1. 收益率"></a>1. 收益率</h5><p>第一，投资2800元，40天后获得4000元，投资收益率是多少？</p><p>本金是2800，收益是4000-2800=1200，收益率=1200/2800=42%，是分40天返还，40天的收益率是42%，换算到年，就是383%。这简直是暴利。<br><br></p><h5 id="2-门槛"><a href="#2-门槛" class="headerlink" title="2. 门槛"></a>2. 门槛</h5><p>第二，这个投资机会有没有门槛，是任何人都能做的吗？<br>这个投资机会没有门槛，非但没有门槛，还在做广告让别人来投资。</p><p><strong>任何投资机会都是有资金容量的</strong>，没有门槛，收益率这么高，这时就要十分警惕了。<br><br></p><h5 id="3-风险"><a href="#3-风险" class="headerlink" title="3. 风险"></a>3. 风险</h5><p>第三，这个投资机会的风险是什么？</p><p>无论做什么投资，我们都要思考风险在哪里。找了半天，没有看到一句风险提示，就连类似“股市有风险，投资需谨慎”这样的提示都没有。如果一个投资品种 <strong>只强调收益，绝口不提风险</strong>，那就要留一个心眼。<br><br></p><h5 id="4-公司商业模式"><a href="#4-公司商业模式" class="headerlink" title="4. 公司商业模式"></a>4. 公司商业模式</h5><p>第四，公司的商业模式是什么，它是如何赚钱的？</p><p>一箱水卖2800元，分40天返还4000元，请问哪里的水可以这么贵？所以这家公司就必须有源源不断的人进来，整个资金池才不会空。所谓的收益，赚的就是下线的钱，如果哪天后面的来源断了，那这个公司就崩溃了。</p><hr><h2 id="投资的不可能三角"><a href="#投资的不可能三角" class="headerlink" title="投资的不可能三角"></a>投资的不可能三角</h2><p>想象有个三角形，顶点是以下三个属性，投的资只能一次占两个属性，不可能三个属性都有！<strong>三个属性都有的可能就是骗局</strong>！</p><ol><li>收益性<br>能带来多少汇报</li><li>安全性<br>也叫风险性，就是这个投资靠不靠谱，会不会亏损，老板会不会拿钱跑路</li><li>流动性<br>把投资品再变回现金的速度和能力<h3 id="三种常见情况"><a href="#三种常见情况" class="headerlink" title="三种常见情况"></a>三种常见情况</h3>这里有两个要素：<strong>时间、价格</strong>，时间不能太久，价格不能偏离市场价格太多<br>比如房子，有的封闭几年的基金，还有购买N年的国债，投资时间越久的流动性越差，<br>价格偏离市场价格，就是高估了，太贵了风险也就高了<h4 id="1-满足-收益性-安全性，不满足流动性"><a href="#1-满足-收益性-安全性，不满足流动性" class="headerlink" title="1. 满足 收益性 + 安全性，不满足流动性"></a>1. 满足 收益性 + 安全性，不满足流动性</h4>比如说房子，房产在过去一直是中国老百姓最爱投资的资产，但房子的流动性天然就比较差，再加上现在大量城市推出的各种调控措施，包括最直接的限售，让投资房子的流动性几乎被完全打掉。<br>投资时间越久的流动性越差，可以理解为：时间越久，通货膨胀就越大。不可控因素越多，导致价值的不可控<br>3-5年不用的闲置资金用来投资收益率高、安全性低、流动性强的股票等<h4 id="2-满足-安全性-流动性，不满足收益性"><a href="#2-满足-安全性-流动性，不满足收益性" class="headerlink" title="2. 满足 安全性 + 流动性，不满足收益性"></a>2. 满足 安全性 + 流动性，不满足收益性</h4>最简单的例子是活期存款，货币基金等。这些产品足够安全，也随时可以转化成现金，但是收益较低。<h4 id="3-满足-收益性-流动性，不满足安全性。"><a href="#3-满足-收益性-流动性，不满足安全性。" class="headerlink" title="3. 满足 收益性 + 流动性，不满足安全性。"></a>3. 满足 收益性 + 流动性，不满足安全性。</h4>最典型的是部分P2P，在没爆雷之前，流动性和收益性都比较好，因此吸引了大量资金进入。然而，它并不能满足安全性，一旦出现危机，就是致命的风险。</li></ol><hr><h4 id="Q1：三角关系如何权衡"><a href="#Q1：三角关系如何权衡" class="headerlink" title="Q1：三角关系如何权衡"></a>Q1：三角关系如何权衡</h4><p>A1：具体要从资产配置的角度来考虑<br>简单的说，我们可以把应急金、日常开销的资金放在流动性强，但是收益率低的投资品，比如余额宝<br>3-5年不用的闲置资金用来投资收益率高、安全性低、流动性强的股票等</p><h4 id="Q2：如何判断投资品种是否靠谱"><a href="#Q2：如何判断投资品种是否靠谱" class="headerlink" title="Q2：如何判断投资品种是否靠谱"></a>Q2：如何判断投资品种是否靠谱</h4><p>A2：从分析资产的三性开始，即安全性，流动性，收益性</p><h4 id="Q3：投资骗局"><a href="#Q3：投资骗局" class="headerlink" title="Q3：投资骗局"></a>Q3：投资骗局</h4><p>投资骗局的这种模式一般都会持续经营一段时间，才会被发现是骗局或者被有关部门查处，如果说一开始投资，有了一些收益后马上撤，这样的话不也能赚到钱吗？</p><p>A3：行话叫：逃顶。就是在崩溃之前离开，不做最后一棒。<br>首先，这种方式赚钱很快，而人性是贪婪的，一旦尝到一点甜头，想到的不是离开，而是加大投资。<br>其次，你事前并不知道这种骗局什么时候崩溃，崩溃都是事后才知道。<br>在没有崩溃之前，赚了钱的人没人愿意离开，而没有赚到钱的人想到的都是先赚到钱。<br>最后，这种投资方式没有一个退出机制。<br>比如，投资股市的退出时机，是因为股票的估值已经很贵了，股市的市盈率非常高了，相对地收益率就比较低，连银行定存都达不到了，就可以选择退出。但这种骗局没有办法判断何时应该退出。<br>另一个关键是，人性是贪婪的，赚了1万，想赚10万，根本不想退出，没有退出机制，最后的结局就一定是被骗。<br>举个例子：钱宝网……（自行搜索）<br><strong>对于这种骗局，最好的方法就是识破，然后不参与，千万不要存有侥幸心理。</strong><br><strong>最后再说一遍，千万不要心存侥幸，明知是骗局还要参与，这就是火中取栗，最后的结局一定是万劫不复。切记不懂得不碰?</strong></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 金融 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础投资知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【日语_01】初级文法总结</title>
      <link href="p/63282.html"/>
      <url>p/63282.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>微软ime常用快捷键</p><p>cap+shift 切换 英文日文</p><p>cap + ctrl 切换 平假名</p><p>cap+ alt 切换片假名</p><h1 id="第一单元-小李赴日"><a href="#第一单元-小李赴日" class="headerlink" title="第一单元　小李赴日"></a>第一单元　小李赴日</h1><h2 id="01李さんは-中国人です"><a href="#01李さんは-中国人です" class="headerlink" title="01李さんは　中国人です"></a>01李さんは　中国人です</h2><table><thead><tr><th align="left">日语语法</th><th align="left">汉语翻译</th><th align="left">例句</th></tr></thead><tbody><tr><td align="left">名詞 + は 名詞 <strong>です</strong></td><td align="left">xx 是 xx</td><td align="left">李さんが中国人です</td></tr><tr><td align="left">名詞 + は 名詞 <strong>ではありません</strong></td><td align="left">xx 不是 xx</td><td align="left">森さんは学生ではありません</td></tr><tr><td align="left">名詞　は 名詞 です<strong>か</strong></td><td align="left">疑问句</td><td align="left">あなたは小野さんですか</td></tr><tr><td align="left"><strong>はい、そうです</strong></td><td align="left">肯定的回答</td><td align="left"></td></tr><tr><td align="left"><strong>いいえ、ちがいます</strong></td><td align="left">否定的回答</td><td align="left"></td></tr><tr><td align="left">名詞　の　名詞　【从属机构、国家】【属性】</td><td align="left">前面的名词是后面名词从属的机构、国家或属性</td><td align="left">李さんはJC企画の社員です</td></tr></tbody></table><h2 id="02これは-本です"><a href="#02これは-本です" class="headerlink" title="02これは　本です"></a>02これは　本です</h2><table><thead><tr><th align="left">日语语法</th><th align="left">汉语翻译</th><th align="left">例句</th></tr></thead><tbody><tr><td align="left"><strong>これ</strong>は　名詞です【距离说话人较近】</td><td align="left">这里</td><td align="left">これは本です</td></tr><tr><td align="left"><strong>それ</strong>は　名詞です【距离听话人较劲】</td><td align="left">那里</td><td align="left">それはかばんです</td></tr><tr><td align="left"><strong>あれ</strong>は　名詞です【距离说/听话人都远】</td><td align="left">那~那里</td><td align="left">あれはテレビです</td></tr><tr><td align="left"><strong>誰ですか／何ですか</strong></td><td align="left">谁啊/什么啊</td><td align="left">それは　何ですか</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">あの人は誰ですか</td></tr><tr><td align="left">名詞　の　名詞　【所属】</td><td align="left">所属</td><td align="left">わたしのかぎ(钥匙🔑)</td></tr><tr><td align="left"><strong>どれ</strong>／<strong>どの</strong></td><td align="left">谁的</td><td align="left">森さんのかばんはどれですか</td></tr></tbody></table><h2 id="03ここは-デパートです"><a href="#03ここは-デパートです" class="headerlink" title="03ここは　デパートです"></a>03ここは　デパートです</h2><table><thead><tr><th align="left">日语语法</th><th align="left">汉语翻译</th><th align="left">例句</th></tr></thead><tbody><tr><td align="left"><strong>ここ</strong>　は　名詞　です</td><td align="left">这里</td><td align="left">ここはデパートです(这里是百货商店)</td></tr><tr><td align="left"><strong>そこ</strong>　は　名詞　です</td><td align="left">那里</td><td align="left">そこは図書館です</td></tr><tr><td align="left"><strong>あそこ</strong>　は　名詞　です</td><td align="left">那儿</td><td align="left">あそこは　入口です</td></tr><tr><td align="left">名詞　は　<strong>とこですか</strong></td><td align="left">哪儿？</td><td align="left">トイレはどごですか</td></tr><tr><td align="left">名詞　<strong>も</strong>　名詞　です</td><td align="left">也</td><td align="left">張さんも中国人です</td></tr><tr><td align="left">名詞　は　名詞　<strong>ですか</strong>，名詞<strong>ですか</strong></td><td align="left">答案有多种，询问其中一种时</td><td align="left">かばん売り場は一階ですか，二階ですか。</td></tr><tr><td align="left">名詞　は　<strong>いくらですか</strong></td><td align="left">询问价格时</td><td align="left">これは　いくらですか。</td></tr></tbody></table><h2 id="04部屋に-机と-椅子が-ありません"><a href="#04部屋に-机と-椅子が-ありません" class="headerlink" title="04部屋に　机と　椅子が　ありません"></a>04部屋に　机と　椅子が　ありません</h2><table><thead><tr><th align="left">日语语法</th><th align="left">汉语翻译</th><th align="left">例句</th></tr></thead><tbody><tr><td align="left"><strong>あります</strong></td><td align="left">没有生命的东西的存在</td><td align="left">ここに本があります。</td></tr><tr><td align="left">ありま<strong>せん</strong></td><td align="left">没有生命的东西的不存在</td><td align="left">ここに本がありません。</td></tr><tr><td align="left"><strong>います</strong></td><td align="left">有生命的东西的存在</td><td align="left">部屋に猫がいます。</td></tr><tr><td align="left">いま<strong>せん</strong></td><td align="left">有生命的东西的不存在</td><td align="left">部屋に猫がいません。（屋子里没有猫）</td></tr><tr><td align="left">名詞「物/人」<strong>は</strong>　名詞「場所」<strong>に</strong>　あります／います</td><td align="left">xx 在 xx</td><td align="left">いすは部屋にあります。</td></tr><tr><td align="left">名詞「場所」に　名詞「物／人」<strong>が</strong>　あります／います</td><td align="left">xx 在 xx</td><td align="left">ここに本があります</td></tr><tr><td align="left">名詞　<strong>と</strong>　名詞 【并列】</td><td align="left">xx 和 xx</td><td align="left">時計と眼鏡</td></tr><tr><td align="left"><strong>ね</strong></td><td align="left">确认</td><td align="left">あそこに犬がいますね。</td></tr><tr><td align="left">疑問詞＋<strong>も</strong>＋<strong>動詞否定</strong></td><td align="left">表示全面否定</td><td align="left">教室に誰もいません</td></tr></tbody></table><h2 id="05森さんは-7時に起きます"><a href="#05森さんは-7時に起きます" class="headerlink" title="05森さんは　7時に起きます"></a>05森さんは　7時に起きます</h2><table><thead><tr><th align="left">日语语法</th><th align="left">汉语翻译</th><th>例句</th></tr></thead><tbody><tr><td align="left">今　～時　～分です</td><td align="left">表示现在的时间</td><td>今4時です</td></tr><tr><td align="left">动ます／动ません</td><td align="left">现在</td><td>森さんは毎日働きます</td></tr><tr><td align="left">动ました／动ませんでした</td><td align="left">国去</td><td>森さんは先週休みました</td></tr><tr><td align="left">「時間」に　动</td><td align="left">表示动作发生的时间</td><td>森さんは7時に起きます</td></tr><tr><td align="left">「時間」から　「時間」まで　動</td><td align="left">某个动作发生的某个<strong>期间</strong></td><td>私は9時から5時まで働きます</td></tr><tr><td align="left">いつ　動　ますか</td><td align="left">询问某个动作进行的时间</td><td>試験はいつ始まりますか</td></tr><tr><td align="left">は「対比」</td><td align="left">表对比</td><td>小野さんは今日は休みます</td></tr></tbody></table><h3 id="动词的时态"><a href="#动词的时态" class="headerlink" title="动词的时态"></a>动词的时态</h3><ol><li>肯定地叙述现在的习惯性动作、状态以及未来的动作、状态时，用 <code>~ます</code>，其否定形式是<code>ません</code></li><li>肯定地叙述过去的动作时<code>ます</code>要变成<code>ました</code>，其否定形式是<code>ませんでした</code>。</li></ol><table><thead><tr><th>～ます</th><th>～ません</th><th>～ました</th><th>～ませんでした</th></tr></thead><tbody><tr><td>休みます</td><td>休みません</td><td>休みました</td><td>休みませんでした</td></tr><tr><td>起きます</td><td>起こません</td><td>起きました</td><td>起きませんでした</td></tr><tr><td>寝ます</td><td>寝ません</td><td>寝ました</td><td>寝ませんでした</td></tr><tr><td>あります</td><td>ありません</td><td>ありました</td><td>ありませんでした</td></tr></tbody></table><h2 id="06吉田さんは来月中国へ行きます"><a href="#06吉田さんは来月中国へ行きます" class="headerlink" title="06吉田さんは来月中国へ行きます"></a>06吉田さんは来月中国へ行きます</h2><table><thead><tr><th>日语语法</th><th>汉语翻译</th><th>例句</th></tr></thead><tbody><tr><td>名詞[場所]へ　動詞</td><td></td><td>吉田さんは中国へ行きます</td></tr><tr><td>名詞[場所]から　動詞</td><td></td><td>李さんは先月北京から来ました</td></tr><tr><td>名詞[人]と　動詞</td><td></td><td>小野さんはと友達と帰りました</td></tr><tr><td>名詞[交通工具]で　動詞</td><td></td><td>李さんは歩いてアパートへ帰りました</td></tr><tr><td>名詞[場所]から名詞[場所]まで　動詞</td><td></td><td></td></tr></tbody></table></body></html>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语文法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【搞机】苹果6Plus绕过ID</title>
      <link href="p/e9056929.html"/>
      <url>p/e9056929.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="苹果6Plus绕过ID"><a href="#苹果6Plus绕过ID" class="headerlink" title="苹果6Plus绕过ID"></a>苹果6Plus绕过ID</h1><h2 id="主要点"><a href="#主要点" class="headerlink" title="主要点"></a>主要点</h2><ul><li>越狱</li><li>开启SSH通道（证明越狱成功,通过爱思助手打开SSH）</li><li>接着通过<code>Sliver</code>这个软件绕过ID</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>只是救一下砖头而已，至于插卡通话之类的，我目前也不大行（当个播放器呗）</li><li><strong>切勿做非法之事，请提高警惕</strong></li><li>这是iPhone硬件上的漏洞，所以没有时间上的限制，可以从<code>iPhone 5s~iPhone X</code>之间的所有苹果设备，系统在 <code>IOS12.4 ~ IOS 13.23</code>均可。</li></ul><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li><code>UNEtBootin.exe</code>：这是制作启动盘的软件，用来越狱</li><li><code>RainLinuxDisk10.1.iso</code>：这是越狱镜像，可以理解为U盘的PE装系统盘</li><li><code>SliSver12.4.7</code>：用来绕过ID的软件</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h3><ul><li>打开<code>UNEtBootin.exe</code>这个软件<br><a href="https://img-blog.csdnimg.cn/20200612140550666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200612140550666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><h3 id="电脑重启，进入Checkra1n"><a href="#电脑重启，进入Checkra1n" class="headerlink" title="电脑重启，进入Checkra1n"></a>电脑重启，进入Checkra1n</h3></li><li>注意：有些电脑开机没有提示，很可能是你开启了快速启动<br><a href="https://img-blog.csdnimg.cn/20200612141153792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200612141153792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li></ul><ul><li>进入Checkra1n系统后，连接电脑<h3 id="打开SSH通道"><a href="#打开SSH通道" class="headerlink" title="打开SSH通道"></a>打开SSH通道</h3></li><li>手机连接到电脑，打开爱思助手，点击工具箱<br><a href="https://img-blog.csdnimg.cn/20200612140053376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200612140053376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><h3 id="打开Sliver-12-4-7"><a href="#打开Sliver-12-4-7" class="headerlink" title="打开Sliver 12.4.7"></a>打开Sliver 12.4.7</h3></li><li>手机开机，到网络连接的时候，点击 <code>Ituens</code> 连接，之后打开Sliver，点击并等待<a href="https://img-blog.csdnimg.cn/20200612141521116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200612141521116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搞机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【建站_01】给博客添加漂亮的邮件回复</title>
      <link href="p/26722.html"/>
      <url>p/26722.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><blockquote><p>闲的又去翻翻大佬们的博客，顺便留个言，拍拍屁股走人，过了几分钟后，QQ收到了个回复邮件，打开一看，哎呀，怎么这么优秀呢？咋这么好看呢！（教练我要学！）</p></blockquote><p><a href="https://img-blog.csdnimg.cn/20200320133555657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200320133555657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>确保你的主题已经成功部署 <code>valine</code>，详细请看你的主题帮助文件（百度大法）</p><hr><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p>这是开发这个组件的大佬 deserts 的原版教程<br><a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">https://github.com/DesertsP/Valine-Admin</a><br><a href="https://deserts.io/diy-a-comment-system" target="_blank" rel="noopener">https://deserts.io/diy-a-comment-system</a></p><p>这是另一个大佬的，我修改评论系统的原因嘎嘎嘎<br><a href="https://bili33.top/2020/03/14/Valine-Admin" target="_blank" rel="noopener">https://bili33.top/2020/03/14/Valine-Admin</a></p><p>这是我的博客<br><a href="https://wangzhongqing.xyz">https://wangzhongqing.xyz</a></p><hr><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p><a href="https://deserts.io/diy-a-comment-system/" target="_blank" rel="noopener">https://deserts.io/diy-a-comment-system/</a></p><hr><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><h2 id="Q1-我如何查看部署情况"><a href="#Q1-我如何查看部署情况" class="headerlink" title="Q1:我如何查看部署情况"></a>Q1:我如何查看部署情况</h2><p><a href="https://img-blog.csdnimg.cn/20200320141101412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="这里查看日志" class="fancybox"><img alt="这里查看日志" title="这里查看日志" data-src="https://img-blog.csdnimg.cn/20200320141101412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h2 id="Q2-SMTP邮箱配置总是不成功"><a href="#Q2-SMTP邮箱配置总是不成功" class="headerlink" title="Q2:SMTP邮箱配置总是不成功"></a>Q2:SMTP邮箱配置总是不成功</h2><p>一定要记得，在<strong>自定义环境变量</strong>，添加 <strong>SMTP_SERVICE</strong> 这个变量</p><h2 id="Q3-发送的模板怎么没变化呢？"><a href="#Q3-发送的模板怎么没变化呢？" class="headerlink" title="Q3:发送的模板怎么没变化呢？"></a>Q3:发送的模板怎么没变化呢？</h2><p>在你的主题文件配置中，<code>notify</code>的值改成<code>false</code>，然后重启生产环境即可</p><p><a href="https://img-blog.csdnimg.cn/20200320141406399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200320141406399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>我的模板是这样的</p><p><strong>MAIL_TEMPLATE</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>></span><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, #2193b0, #6dd5ed);height: 66px;"</span>></span><span class="tag"><<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.1);border-radius: 10px 10px 0 0;"</span>></span>您在<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;font-weight:bold;color: #ffffff;"</span> <span class="attr">href</span>=<span class="string">"${SITE_URL}"</span>></span> 「${SITE_NAME}」<span class="tag"><!--<span class="name"-->a</span>></span>上的留言有新回复啦！<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><!--<span class="name"-->div</span>><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>></span><span class="tag"><<span class="name">p</span>></span><span class="tag"><<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-weight: bold"</span>></span>${PARENT_NICK}<span class="tag"><!--<span class="name"-->span</span>> 童鞋，您曾在 <span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"${POST_URL}"</span>></span>这篇文章<span class="tag"><!--<span class="name"-->a</span>> 上发表评论：<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>></span>${PARENT_COMMENT}<span class="tag"><!--<span class="name"-->div</span>><span class="tag"><<span class="name">p</span>></span><span class="tag"><<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-weight: bold"</span>></span>${NICK}<span class="tag"><!--<span class="name"-->span</span>> 高傲的回应道：<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>></span>${COMMENT}<span class="tag"><!--<span class="name"-->div</span>><span class="tag"><<span class="name">p</span>></span>您可以点击<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"${POST_URL}#comments"</span>></span>查看回复的完整內容<span class="tag"><!--<span class="name"-->a</span>>，欢迎再次光临<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span>                <span class="attr">href</span>=<span class="string">"${SITE_URL}"</span>></span> ${SITE_NAME}<span class="tag"><!--<span class="name"-->a</span>>。<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>></span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>{<span class="attribute">text-decoration</span>:none}</span><span class="tag"><!--<span class="name"-->style</span>><span class="tag"><!--<span class="name"-->div</span>><span class="tag"><!--<span class="name"-->div</span>><br></pre></td></tr></tbody></table></figure></div><p>效果如下</p><p><a href="https://img-blog.csdnimg.cn/20200320145632357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200320145632357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p><strong>MAIL_TEMPLATE_ADMIN</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>></span><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, #36D1DC, #5B86E5);background-image: -webkit-linear-gradient(0deg, #36D1DC, #5B86E5);height: 66px;"</span>></span><span class="tag"><<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.1);border-radius: 10px 10px 0 0;"</span>></span>您的<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #ffffff;"</span> <span class="attr">href</span>=<span class="string">"${SITE_URL}"</span>></span> ${SITE_NAME}<span class="tag"><!--<span class="name"-->a</span>></span>上有新的留言：<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><!--<span class="name"-->div</span>><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>></span><span class="tag"><<span class="name">p</span>></span>${NICK} 给您的留言如下：<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>></span>${COMMENT}<span class="tag"><!--<span class="name"-->div</span>><span class="tag"><<span class="name">p</span>></span>陛下可以点击<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"${POST_URL}#comments"</span>></span>查看回复的完整內容<span class="tag"><!--<span class="name"-->a</span>>，送皇上回宫<span class="tag"><<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span>                <span class="attr">href</span>=<span class="string">"${SITE_URL}"</span>></span> ${SITE_NAME}<span class="tag"><!--<span class="name"-->a</span>>。<span class="tag"><!--<span class="name"-->p</span>><span class="tag"><<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>></span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>{<span class="attribute">text-decoration</span>:none}<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>{<span class="attribute">text-decoration</span>:none}</span><span class="tag"><!--<span class="name"-->style</span>><span class="tag"><!--<span class="name"-->div</span>><span class="tag"><!--<span class="name"-->div</span>><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20200320145638184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200320145638184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 写博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端29_Mongo】芒果数据库使用及常用操作、Mongoose 对数据的增删改查</title>
      <link href="p/8b01bb44.html"/>
      <url>p/8b01bb44.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="非关系性数据库：Mongo"><a href="#非关系性数据库：Mongo" class="headerlink" title="非关系性数据库：Mongo"></a>非关系性数据库：Mongo</h1><h2 id="Mongo"><a href="#Mongo" class="headerlink" title="Mongo"></a>Mongo</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>是一种非关系性数据库，不像<code>MySQL</code>那样有很多条条框框的约束，想怎么存就怎么存。</li><li>什么叫数据库，集合，文档？请看下面的栗子。<h3 id="举个栗子：教学"><a href="#举个栗子：教学" class="headerlink" title="举个栗子：教学"></a>举个栗子：教学</h3></li><li>前提：我想创建一个论坛，论坛里又有很多用户，所以我需要一个论坛数据库，其中还要一个用户集合（表）。<br><a href="https://img-blog.csdnimg.cn/20200704090924510.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200704090924510.png" src="/img/loading.gif" class="lazyload"></a></li><li>然后切换数据库，并查看当前数据库中的集合<a href="https://img-blog.csdnimg.cn/20200704091228446.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200704091228446.png" src="/img/loading.gif" class="lazyload"></a></li><li>我们可以通过<code>db.集合名.find()</code>方法<strong>查看集合中的所有文档</strong>（集合中的每条信息叫做文档）</li></ul><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></tbody></table></figure></div><h4 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></tbody></table></figure></div><h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名称</span><br></pre></td></tr></tbody></table></figure></div><h4 id="展示数据库中的集合"><a href="#展示数据库中的集合" class="headerlink" title="展示数据库中的集合"></a>展示数据库中的集合</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></tbody></table></figure></div><h4 id="展示集合中的所有文档"><a href="#展示集合中的所有文档" class="headerlink" title="展示集合中的所有文档"></a>展示集合中的所有文档</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.finds()</span><br></pre></td></tr></tbody></table></figure></div><h4 id="删除集合中的所有文档"><a href="#删除集合中的所有文档" class="headerlink" title="删除集合中的所有文档"></a>删除集合中的所有文档</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">> db.users.drop()</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="Mongoose-插件"><a href="#Mongoose-插件" class="headerlink" title="Mongoose 插件"></a>Mongoose 插件</h2><blockquote><p><a href="http://mongoosejs.net/" target="_blank" rel="noopener">官方</a>定义如下：编写MongoDB验证，转换和业务逻辑是非常麻烦的. 所以我们发明了Mongoose.</p></blockquote><p>我个人的理解：就是类似<code>JavaScript</code> 和<code>jQuery</code> 的关系。<code>Mongoose</code>相当于<code>jQuery</code>。</p><ul><li>数据库是不需要输入命令的时候建立的，它是在你<strong>插入数据的时候就给你建立</strong>的</li></ul><h3 id="建立文档结构-Schema"><a href="#建立文档结构-Schema" class="headerlink" title="建立文档结构 Schema"></a>建立文档结构 Schema</h3><ul><li>用户表中的用户信息不能是没有规律的吧，需要有用户名，性别，年龄等等信息，我们需要这样一个规范，用来更好的设计，储存数据库，方便以后的查阅，这就引入了文档结构 Schema</li><li>类似一下的感觉<br><a href="https://img-blog.csdnimg.cn/20200704091754477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200704091754477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>首先在后台中，新建一个文件夹，叫啥随便你，这个文件夹作用是：<strong>用来存储文档的格式</strong>，也就是规定了每条数据都有啥属性。</li><li>这个<code>js</code>文件连接了数据库，并且引入了<code>mongoose</code> 插件</li><li>记得最后要导出，<strong>导出的名字不要写成复数</strong>，也就是我上图中的 <code>module.exports = User</code>，因为插件会帮你转成复数<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> dbName = <span class="string">'myWeibo'</span></span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">`mongodb://localhost:27017/<span class="subst">${dbName}</span>`</span>, {<span class="attr">useNewUrlParser</span>: <span class="literal">true</span>, <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置文档结构</span></span><br><span class="line"><span class="keyword">var</span> Schema = mongoose.Schema;</span><br><span class="line"><span class="keyword">var</span> userSchema = <span class="keyword">new</span> Schema({</span><br><span class="line">    username:<span class="built_in">String</span>,</span><br><span class="line">    psw:<span class="built_in">String</span></span><br><span class="line">})</span><br><span class="line"><span class="keyword">const</span> User = mongoose.model(<span class="string">'User'</span>, userSchema)</span><br><span class="line"><span class="built_in">module</span>.exports = User</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><ul><li>需要先引入文档结构</li><li>然后通过<code>.save</code>方法保存<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入用户表格式 Schema</span></span><br><span class="line"><span class="comment">// weiboUser 是我的文档结构的名字，你的自己看看是啥</span></span><br><span class="line"><span class="keyword">const</span> weiboUser = <span class="built_in">require</span>(<span class="string">'../module/weiboUser'</span>)</span><br><span class="line"><span class="keyword">new</span> weiboUser(需要保存的数据).save(<span class="function">(<span class="params">err, ret</span>) =></span> {</span><br><span class="line">    <span class="keyword">if</span>(err){</span><br><span class="line">    <span class="comment">// 保存失败</span></span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line"><span class="comment">// 保存成功</span></span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p>根据条件删除文档</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">weiboUser.remove({<span class="string">'username'</span>: <span class="string">'王先生'</span>},{</span><br><span class="line">    password:<span class="string">'123'</span></span><br><span class="line">}, <span class="function"><span class="keyword">function</span> (<span class="params">err,ret</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span>(err) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'删除失败'</span>)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'删除成功'</span>)</span><br><span class="line">       <span class="built_in">console</span>.log(ret);</span><br><span class="line">       <span class="comment">// { n: 1, ok: 1, deletedCount: 1 }</span></span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h4 id="查数据"><a href="#查数据" class="headerlink" title="查数据"></a>查数据</h4><ul><li>可以通过<code>文档结构.find(查询的数据,回调函数(err, ret){})</code>来查询数据，其中<code>ret</code>就是查询到的文档（数据）</li><li>也可以查询一个<code>findOne()</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">weiboUser.find({<span class="string">'username'</span>:data.username}, (err, ret) => {</span><br><span class="line"><span class="keyword">if</span>(ret === <span class="literal">null</span>) {</span><br><span class="line"> <span class="comment">// 如果没查到</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="comment">// 如果查到了</span></span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><p>通过<code>id</code>来修改数据<br>其中的<code>ret</code>返回的是修改前的数据内容</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除</span></span><br><span class="line">weiboUser.findByIdAndUpdate(<span class="string">'5effddd9630b7d430c4e79aa'</span>,{</span><br><span class="line">    psw:<span class="string">'123'</span></span><br><span class="line">}, <span class="function"><span class="keyword">function</span> (<span class="params">err,ret</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span>(err) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'修改失败'</span>)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'修改成功'</span>)</span><br><span class="line">       <span class="built_in">console</span>.log(ret);</span><br><span class="line">       <span class="comment">// 他会返回修改前的数据</span></span><br><span class="line">       <span class="comment">// { _id: 5effddd9630b7d430c4e79aa, username: '王先生', psw: '1', __v: 0 }</span></span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端28_Vue-Cli 脚手架】萌新指南、安装脚手架、创建项目、项目目录介绍、路由重定向、代码规范ESlint、常用组件：Element、Vue-Axios</title>
      <link href="p/225e122a.html"/>
      <url>p/225e122a.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Vue-cli-脚手架"><a href="#Vue-cli-脚手架" class="headerlink" title="Vue-cli 脚手架"></a>Vue-cli 脚手架</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Vue CLI 是一个基于 Vue.js 进行<strong>快速开发</strong>的完整系统。<br>就是说我们在开发的时候，<strong>前期需要配置</strong>很多东西（网络组件，路由组件，打包组件等等），有了Vue-cli脚手架，他会帮我们集成这些功能</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>可以通过以下命令，在命令行里敲</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></tbody></table></figure></div><h2 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h2><p>创建项目有两种方法</p><ol><li>代码创建</li><li>图形界面GUI<h3 id="代码创建"><a href="#代码创建" class="headerlink" title="代码创建"></a>代码创建</h3></li></ol><ul><li><p>找到想要创建项目的文件夹，在此文件夹下打开cmd，（按住<kbd>shift</kbd> + <kbd>鼠标右键</kbd>），在右键菜单里打开<code>powershell</code>或者是<code>git bash</code>。（PS:如果在PowerShell中出现<a href="https://blog.csdn.net/u010263423/article/details/107099435" target="_blank" rel="noopener">cannot be loaded because running scripts is disabled on this system.</a>）问题，打开链接阅读。</p></li><li><p>输入命令<code>vue create 项目名字</code><br><a href="https://img-blog.csdnimg.cn/20200703101056322.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703101056322.png" src="/img/loading.gif" class="lazyload"></a></p></li><li><p>选择安装依赖（<code>babel</code> 是es6转es5的工具，<code>eslint</code>是代码格式校验工具，默认是安装这两个依赖的，如果没选上，后期也可以选择添加的，莫慌，<code>router</code>是路由模块，是我自己加的，因为会用到）<br><a href="https://img-blog.csdnimg.cn/20200703101101265.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703101101265.png" src="/img/loading.gif" class="lazyload"></a></p></li><li><p>我的配置大概是这样，这个自由性很高，没必要都一样<br><a href="https://img-blog.csdnimg.cn/2020070310115515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020070310115515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></li><li><p>稍等几分钟，成功的话会提示你的<a href="https://img-blog.csdnimg.cn/20200703101922658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703101922658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h3 id="图形界面GUI创建项目"><a href="#图形界面GUI创建项目" class="headerlink" title="图形界面GUI创建项目"></a>图形界面GUI创建项目</h3></li><li><p>在<code>cmd</code>中输入命令<code>vue ui</code>，回车之后稍等一会，会在浏览器中弹出页面。</p></li><li><p>紧接着跟着图示走就可以了，建项目的时候也会很慢，稍等即可。</p></li></ul><p><a href="https://img-blog.csdnimg.cn/2020070310173236.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020070310173236.gif" src="/img/loading.gif" class="lazyload"></a></p><h2 id="项目目录介绍"><a href="#项目目录介绍" class="headerlink" title="项目目录介绍"></a>项目目录介绍</h2><p>新建好之后是如下这样的（可能有些文件不一样，莫慌）<br><a href="https://img-blog.csdnimg.cn/20200703102109647.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703102109647.png" src="/img/loading.gif" class="lazyload"></a></p><ul><li>其中最重要的是<code>src</code>了，以后打代码都是在<code>src</code>里打<ul><li><code>App.vue</code>： 首页</li><li><code>main.js</code> ：入口文件</li><li><code>assets</code>：静态文件</li><li><code>components</code>：组件</li><li><code>router</code>：路由配置</li></ul></li></ul><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>在脚手架右上角会有提示，让你安装<code>vue-router</code><br>安装完之后就会在<code>src</code>文件夹生成<code>router</code>文件，里面的<code>js</code>就是路由管理文件</p><ul><li>路由重定向</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  path: <span class="string">'/'</span>,</span><br><span class="line">  <span class="comment">// 路由重定向</span></span><br><span class="line">  redirect:<span class="string">'/Login'</span></span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure></div><h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><p>萌新会遇到如下的错误<br><a href="https://img-blog.csdnimg.cn/2020070310364365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020070310364365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>这并不是代码写错了，而是规范的问题<br><a href="https://img-blog.csdnimg.cn/20200703103647428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703103647428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>这个<code>ESLint</code>插件帮我们检查的，前期的规范想养成的养成，也可以关掉规范检查，如下</p><p><a href="https://img-blog.csdnimg.cn/2020070310365320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020070310365320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h2 id="常用框架"><a href="#常用框架" class="headerlink" title="常用框架"></a>常用框架</h2><h3 id="Element-ui"><a href="#Element-ui" class="headerlink" title="Element ui"></a>Element ui</h3><p>首先在依赖中安装 <code>element-ui</code>，安装好依赖之后，在<code>main.js</code>中引入</p><p><a href="https://element.eleme.io/#/zh-CN/component/quickstart" target="_blank" rel="noopener">快速上手</a><a href="https://img-blog.csdnimg.cn/20200703105103167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703105103167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br><a href="https://img-blog.csdnimg.cn/20200703105209442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703105209442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h3 id="Vue-Axios"><a href="#Vue-Axios" class="headerlink" title="Vue-Axios"></a>Vue-Axios</h3><blockquote><p>axios是网络请求，原生网络请求的封装</p></blockquote><p>在脚手架中添加依赖<br><a href="https://img-blog.csdnimg.cn/20200704084727333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200704084727333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li>前台发起请求可以这样写，首先要在组件脚本开头引入<code>axios</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br></pre></td></tr></tbody></table></figure></div><p>然后写逻辑代码，写链式的话会比较清晰。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里的指针是为了在axios里使用组件里的参数</span></span><br><span class="line"><span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前台发送请求</span></span><br><span class="line">axios.get(<span class="string">'http://localhost:3000/register'</span>, {</span><br><span class="line">  params: {</span><br><span class="line">    username:<span class="keyword">this</span>.username,</span><br><span class="line">    psw:<span class="keyword">this</span>.psw</span><br><span class="line">  }</span><br><span class="line">})</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">    <span class="comment">// 提示注册成功</span></span><br><span class="line">    <span class="comment">// axios 中的this需要定向</span></span><br><span class="line">    <span class="comment">// console.log(response);</span></span><br><span class="line">    <span class="keyword">if</span> (response.data == <span class="string">'200'</span>){</span><br><span class="line">      _this.$message({</span><br><span class="line">        message: <span class="string">`<span class="subst">${_this.username}</span>注册成功`</span>,</span><br><span class="line">        type: <span class="string">'success'</span></span><br><span class="line">      })</span><br><span class="line">    }</span><br><span class="line">  })</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">  <span class="comment">// 抓取错误</span></span><br><span class="line">    <span class="built_in">console</span>.log(error)</span><br><span class="line">  })</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端22_MUI】初步认识MUI、UI块</title>
      <link href="p/51350.html"/>
      <url>p/51350.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="混合开发"><a href="#混合开发" class="headerlink" title="混合开发"></a>混合开发</h1><p>混合开发，是介于H5和原生之间的一种开发模式，既有原生的部分，也有H5的部分，结合了各自有优点，这种开发模式，既可以做到跨平台，也能上各大应用市场。</p><hr><h1 id="MUI-初步的认识"><a href="#MUI-初步的认识" class="headerlink" title="MUI 初步的认识"></a>MUI 初步的认识</h1><p><a href="https://dev.dcloud.net.cn/mui/" target="_blank" rel="noopener">https://dev.dcloud.net.cn/mui/</a><br>这是他的官网</p><hr><h1 id="HBulid初入时遇到的坑"><a href="#HBulid初入时遇到的坑" class="headerlink" title="HBulid初入时遇到的坑"></a>HBulid初入时遇到的坑</h1><h2 id="Q0：Uncaught-ReferenceError-plus-is-not-defined-提示-请在plus-ready后再调用plus-api"><a href="#Q0：Uncaught-ReferenceError-plus-is-not-defined-提示-请在plus-ready后再调用plus-api" class="headerlink" title="Q0：Uncaught ReferenceError: plus is not defined (提示: 请在plus ready后再调用plus api)"></a>Q0：Uncaught ReferenceError: plus is not defined (提示: 请在plus ready后再调用plus api)</h2><p>这个报错的话应该是你没有添加事件，上来就运行 <code>mui .XXX</code> 的控件了<br>我解决的方案就是加个事件来触发<code>mui.XXX</code></p><h2 id="Q1：上机运行报错error"><a href="#Q1：上机运行报错error" class="headerlink" title="Q1：上机运行报错error"></a>Q1：上机运行报错error</h2><p>修改文件夹的名字，不要有<strong>横杠  -  或是下划线  _ 之类的符号</strong>（我找了好久的错误，浏览器能运行，到手机上就不好使了）<br><a href="https://img-blog.csdnimg.cn/2020031612325176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020031612325176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>报错信息如下</p><p><a href="https://img-blog.csdnimg.cn/20200316123303834.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316123303834.png" src="/img/loading.gif" class="lazyload"></a></p><h2 id="Q2：手机上显示主页怎么调？"><a href="#Q2：手机上显示主页怎么调？" class="headerlink" title="Q2：手机上显示主页怎么调？"></a>Q2：手机上显示主页怎么调？</h2><p>不用每次都修改index，而是<br><a href="https://img-blog.csdnimg.cn/20200316123242961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316123242961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="MUI框架"><a href="#MUI框架" class="headerlink" title="MUI框架"></a>MUI框架</h1><h2 id="Dialog-消息框"><a href="#Dialog-消息框" class="headerlink" title="Dialog 消息框"></a>Dialog 消息框</h2><p>如果想要一个消息框类似如下，可以写这样的代码</p><p><a href="https://img-blog.csdnimg.cn/20200316125135975.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316125135975.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">mui.init()</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">button</span> <span class="attr">class</span>=<span class="string">"btn1"</span>></span>弹出提示框<span class="tag">< /<span class="attr">button</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">var btn = document.querySelector('.btn1')</span><br><span class="line">var arr = ['取消','确定'];</span><br><span class="line">btn.onclick = function(){</span><br><span class="line">mui.confirm('这是一段内容','标题',arr,function(e){</span><br><span class="line">console.log(e);</span><br><span class="line">});</span><br><span class="line">}</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p>如果想把她的样式变成IOS的，可以在<code>confrim</code>的参数里添加 <code>div</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">mui.confirm(<span class="string">'这是一段内容'</span>,<span class="string">'标题'</span>,arr,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(e);</span><br><span class="line"><span class="comment">/* 在下面添加'div' */</span></span><br><span class="line">},<span class="string">'div'</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="图文列表"><a href="#图文列表" class="headerlink" title="图文列表"></a>图文列表</h2><p>样式如下<a href="https://img-blog.csdnimg.cn/20200316130348645.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316130348645.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">ul</span> <span class="attr">class</span>=<span class="string">"mui-table-view"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell mui-media"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">img</span> <span class="attr">class</span>=<span class="string">"mui-media-object mui-pull-left"</span> <span class="attr">src</span>=<span class="string">"../../imgs/girl1.png"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-media-body"</span>></span></span><br><span class="line">                幸福</span><br><span class="line">                <span class="tag">< <span class="attr">p</span> <span class="attr">class</span>=<span class="string">'mui-ellipsis'</span>></span>能和心爱的人一起睡觉，是件幸福的事情；可是，打呼噜怎么办？<span class="tag">< /<span class="attr">p</span>></span></span><br><span class="line">            <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell mui-media"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">img</span> <span class="attr">class</span>=<span class="string">"mui-media-object mui-pull-left"</span> <span class="attr">src</span>=<span class="string">"../../imgs/girl1.png"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-media-body"</span>></span></span><br><span class="line">                木屋</span><br><span class="line">                <span class="tag">< <span class="attr">p</span> <span class="attr">class</span>=<span class="string">'mui-ellipsis'</span>></span>想要这样一间小木屋，夏天挫冰吃瓜，冬天围炉取暖.<span class="tag">< /<span class="attr">p</span>></span></span><br><span class="line">            <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell mui-media"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">img</span> <span class="attr">class</span>=<span class="string">"mui-media-object mui-pull-left"</span> <span class="attr">src</span>=<span class="string">"../../imgs/girl1.png"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-media-body"</span>></span></span><br><span class="line">                CBD</span><br><span class="line">                <span class="tag">< <span class="attr">p</span> <span class="attr">class</span>=<span class="string">'mui-ellipsis'</span>></span>烤炉模式的城，到黄昏，如同打翻的调色盘一般.<span class="tag">< /<span class="attr">p</span>></span></span><br><span class="line">            <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">ul</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="侧滑菜单"><a href="#侧滑菜单" class="headerlink" title="侧滑菜单"></a>侧滑菜单</h2><p>样式类似这样的<br><a href="https://img-blog.csdnimg.cn/20200316131246830.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316131246830.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< !<span class="attr">--</span> 在最外层这个类里改变样式</span></span><br><span class="line"><span class="tag"> <span class="attr">mui-scalable</span> 类似手机<span class="attr">qq</span></span></span><br><span class="line"><span class="tag"> <span class="attr">mui-slide-in</span> 菜单也会跟随着滑动</span></span><br><span class="line"><span class="tag"> <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 侧滑导航根容器 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-off-canvas-wrap mui-draggable mui-scalable"</span>></span></span><br><span class="line">  <span class="tag">< !<span class="attr">--</span> 菜单容器 <span class="attr">--</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">aside</span> <span class="attr">class</span>=<span class="string">"mui-off-canvas-left"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-scroll-wrapper"</span>></span></span><br><span class="line">      <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-scroll"</span>></span></span><br><span class="line">        <span class="tag">< !<span class="attr">--</span> 菜单具体展示内容 <span class="attr">--</span>></span></span><br><span class="line">        菜单具体展示内容</span><br><span class="line">      <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">  <span class="tag">< /<span class="attr">aside</span>></span></span><br><span class="line">  <span class="tag">< !<span class="attr">--</span> 主页面容器 <span class="attr">--</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-inner-wrap"</span>></span></span><br><span class="line">    <span class="tag">< !<span class="attr">--</span> 主页面标题 <span class="attr">--</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">header</span> <span class="attr">class</span>=<span class="string">"mui-bar mui-bar-nav"</span>></span></span><br><span class="line">      <span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-action-menu mui-icon-bars mui-pull-left"</span>></span><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line">      <span class="tag">< <span class="attr">h1</span> <span class="attr">class</span>=<span class="string">"mui-title"</span>></span>标题<span class="tag">< /<span class="attr">h1</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">header</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-content mui-scroll-wrapper"</span>></span></span><br><span class="line">      <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-scroll"</span>></span></span><br><span class="line">        <span class="tag">< !<span class="attr">--</span> 主界面具体展示内容 <span class="attr">--</span>></span></span><br><span class="line">        主界面具体展示内容</span><br><span class="line">      <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">div</span>></span>  </span><br><span class="line">  <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>样式如下</p><p><a href="https://img-blog.csdnimg.cn/20200316132047966.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316132047966.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">title</span>></span><span class="tag">< /<span class="attr">title</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">href</span>=<span class="string">"../../css/mui.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../../css/mui.picker.css"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../../css/mui.poppicker.css"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< /<span class="attr">head</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> <span class="attr">picker</span>的引入要在<span class="attr">mui</span> 的下面 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.picker.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.poppicker.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">mui.init()</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">button</span> <span class="attr">class</span>=<span class="string">"btn1"</span>></span>点我触发选择器<span class="tag">< /<span class="attr">button</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">(function($,doc){</span><br><span class="line">$.init();</span><br><span class="line">var user = new $.PopPicker();</span><br><span class="line">user.setData([</span><br><span class="line">{value:'cxq',text:'陈晓晴'},</span><br><span class="line">{value:'zzh',text:'张子涵'},</span><br><span class="line">{value:'hsj',text:'黄圣杰'}</span><br><span class="line">])</span><br><span class="line">var btn = doc.querySelector('.btn1');</span><br><span class="line">btn.addEventListener('tap',function(){</span><br><span class="line">user.show(function(items){</span><br><span class="line">console.log(items);</span><br><span class="line">//return false 弹框不会自动关闭</span><br><span class="line">})</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line">)(mui,document)</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="城市三级联动"><a href="#城市三级联动" class="headerlink" title="城市三级联动"></a>城市三级联动</h2><p>想要做这个需要以下文件</p><p>链接：<a href="https://pan.baidu.com/s/1vGK2rjoTJ4SLpPdiv6UgDg" target="_blank" rel="noopener">https://pan.baidu.com/s/1vGK2rjoTJ4SLpPdiv6UgDg</a><br>提取码：219x</p><p>样式如下<br><a href="https://img-blog.csdnimg.cn/20200316132728258.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316132728258.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">title</span>></span><span class="tag">< /<span class="attr">title</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">href</span>=<span class="string">"../../css/mui.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../../css/mui.picker.css"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../../css/mui.poppicker.css"</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">head</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.picker.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.poppicker.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/city.data-3.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">mui.init()</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 显示的容器 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"what"</span>></span><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">/* 设置选择器的层级 */</span><br><span class="line">var picker = new mui.PopPicker({</span><br><span class="line">    layer: 3</span><br><span class="line">});</span><br><span class="line">picker.setData(cityData3);</span><br><span class="line">picker.pickers[0].setSelectedIndex(1);</span><br><span class="line">picker.pickers[1].setSelectedIndex(1);</span><br><span class="line">picker.show(function(SelectedItem) {</span><br><span class="line">console.log(SelectedItem);</span><br><span class="line">//显示你选的是那个城市</span><br><span class="line">what.innerHTML = SelectedItem[0].text + SelectedItem[1].text;</span><br><span class="line">})</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="选项卡"><a href="#选项卡" class="headerlink" title="选项卡"></a>选项卡</h2><p>样式如下<br><a href="https://img-blog.csdnimg.cn/20200316133608394.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316133608394.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../../js/mui.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">mui.init()</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">header</span> <span class="attr">class</span>=<span class="string">"mui-bar mui-bar-nav"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-action-menu mui-icon-bars mui-pull-left"</span>></span><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">h1</span> <span class="attr">class</span>=<span class="string">"mui-title"</span>></span>标题你好<span class="tag">< /<span class="attr">h1</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">header</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">nav</span> <span class="attr">class</span>=<span class="string">"mui-bar mui-bar-tab"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"#fir"</span> <span class="attr">class</span>=<span class="string">"mui-tab-item mui-active"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-icon-home"</span>></span><span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>></span>首页<span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"#sec"</span> <span class="attr">class</span>=<span class="string">"mui-tab-item "</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-icon-help"</span>></span><span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>></span>help<span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"#thr"</span> <span class="attr">class</span>=<span class="string">"mui-tab-item "</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-icon-home"</span>></span><span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>></span>charset<span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">"#for"</span> <span class="attr">class</span>=<span class="string">"mui-tab-item "</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-icon mui-icon-home"</span>></span><span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>></span>首页<span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">nav</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-content"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"fir"</span> <span class="attr">class</span>=<span class="string">"mui-control-content mui-active"</span>></span></span><br><span class="line">1</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"sec"</span> <span class="attr">class</span>=<span class="string">"mui-control-content"</span>></span></span><br><span class="line">22</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"thr"</span> <span class="attr">class</span>=<span class="string">"mui-control-content "</span>></span></span><br><span class="line">333</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"for"</span> <span class="attr">class</span>=<span class="string">"mui-control-content"</span>></span></span><br><span class="line">4444</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="导航栏滑动透明度"><a href="#导航栏滑动透明度" class="headerlink" title="导航栏滑动透明度"></a>导航栏滑动透明度</h2><p>卧槽不知道咋写标题了，看效果吧<br><a href="https://img-blog.csdnimg.cn/20200316134257671.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316134257671.gif" src="/img/loading.gif" class="lazyload"></a><br>具体实现如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< !<span class="attr">--</span> 导航栏滑动逐渐变得不透明，只需要这里的一个类 <span class="attr">mui-bar-transparent--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">header</span> <span class="attr">class</span>=<span class="string">"mui-bar mui-bar-transparent"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">h1</span> <span class="attr">class</span>=<span class="string">"mui-title"</span>></span>标题<span class="tag">< /<span class="attr">h1</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">header</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"mui-content"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">img</span> <span class="attr">src</span>=<span class="string">"../../imgs/girl1.png"</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="滑动选项"><a href="#滑动选项" class="headerlink" title="滑动选项"></a>滑动选项</h2><p>样式如下<br><a href="https://img-blog.csdnimg.cn/20200316135949733.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200316135949733.gif" src="/img/loading.gif" class="lazyload"></a><br>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-content"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">ul</span> <span class="attr">class</span>=<span class="string">"mui-table-view"</span>></span></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 左滑删除 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-right mui-disabled"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-btn mui-btn-red"</span>></span>删除<span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-handle"</span>></span></span><br><span class="line">左滑删除</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 右滑删除 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-left mui-disabled"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-btn mui-btn-red"</span>></span>删除<span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-btn mui-btn-blue"</span>></span>删除<span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-handle"</span>></span></span><br><span class="line">右滑删除</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 左右滑删除 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"mui-table-view-cell"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-left mui-disabled"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-btn mui-btn-red"</span>></span>删除<span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-right mui-disabled"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">class</span>=<span class="string">"mui-btn mui-btn-red"</span>></span>删除<span class="tag">< /<span class="attr">a</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"mui-slider-handle"</span>></span></span><br><span class="line">左右滑删除</span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">ul</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">div</span>></span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端21_微信】常用之制作二维码、腾讯地图API、百度地图API、获取位置的天气信息</title>
      <link href="p/46259.html"/>
      <url>p/46259.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="制作二维码"><a href="#制作二维码" class="headerlink" title="制作二维码"></a>制作二维码</h1><blockquote><p>用途：扫二维码进入一个网站<br>二维码是用canvas画出来的演示如下<br><a href="https://img-blog.csdnimg.cn/20191210203948149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210203948149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></blockquote><ul><li>首先下载这个 <code>weapp.qrcode.min.js</code><br>链接：<a href="https://pan.baidu.com/s/1MvY5iI60ipSCiCWZJOlEyQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1MvY5iI60ipSCiCWZJOlEyQ</a>  提取码：3yrs<br>把这个复制到你的项目中去，可以新建个名字叫 js 的文件夹，丢进去</li><li>然后再你的项目的 js 文件中导入，语句如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/12-10/demo1/demo1.js</span></span><br><span class="line"><span class="comment">//写在你的js文件中，写开头就行，路径自己写，这个是我的路径演示</span></span><br><span class="line"><span class="keyword">import</span> drawQrcode <span class="keyword">from</span> <span class="string">"../../../utils/weapp.qrcode.min.js"</span>;</span><br></pre></td></tr></tbody></table></figure></div><ul><li>在 wxml 中写个 canvas，记住他的宽高，后面要用到，注意 <code>canvas-id</code> 要写对了</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">canvas</span> <span class="attr">style</span>=<span class="string">"width:200px;height:200px"</span> <span class="attr">canvas-id</span>=<span class="string">"birdId"</span>></span><span class="tag">< /<span class="attr">canvas</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>接下来写 js </li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//你可以把这段写在onLoad:function()里试试看</span></span><br><span class="line">drawQrcode({ <span class="comment">//画二维码</span></span><br><span class="line">     width:<span class="number">200</span>,  <span class="comment">//这里用wxml里的宽</span></span><br><span class="line">     height:<span class="number">200</span>,   <span class="comment">//同理，用wxml里设置的canvas的高，写的不对的话二位码会画乱</span></span><br><span class="line">     canvasId: <span class="string">"birdId"</span>,  <span class="comment">//canvasId也要写上</span></span><br><span class="line">     text:<span class="string">"https://blog.csdn.net/u010263423/category_9162796.html"</span>, <span class="comment">//这个是二维码能跳转的网站</span></span><br><span class="line">     background:<span class="string">"#6A586C"</span>,   <span class="comment">//背景颜色</span></span><br><span class="line">     foreground:<span class="string">"#E7EAD9"</span>,   <span class="comment">//码的颜色</span></span><br><span class="line">     image:{   <span class="comment">//你可以在你的二维码上添加个图标，例如你的微信头像之类的</span></span><br><span class="line">       imageResource:<span class="string">"../../../img/twitter.png"</span>,   <span class="comment">//本地图像</span></span><br><span class="line">       dx:<span class="number">70</span>,    <span class="comment">//图标的x轴偏移量</span></span><br><span class="line">       dy:<span class="number">70</span>,    <span class="comment">//图标的y轴偏移量，注意没有单位的</span></span><br><span class="line">       dWidth:<span class="number">60</span>,    <span class="comment">//图标的宽</span></span><br><span class="line">       dHeight:<span class="number">60</span>    <span class="comment">//图标的高</span></span><br><span class="line">     }</span><br><span class="line">   })</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="腾讯地图-API-：选择位置"><a href="#腾讯地图-API-：选择位置" class="headerlink" title="腾讯地图 API ：选择位置"></a>腾讯地图 API ：选择位置</h1><p>演示如下：<br><a href="https://img-blog.csdnimg.cn/201912102104392.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/201912102104392.gif" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/12-10/demo2/demo2.js</span></span><br><span class="line"><span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">Page({</span><br><span class="line"><span class="comment">//我是把这个函数绑定在按钮上了</span></span><br><span class="line">choosePosition(){</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;  <span class="comment">//固定指针，让that 指向page中的对象</span></span><br><span class="line">    wx.getLocation({  <span class="comment">//调用wx的获取位置信息功能</span></span><br><span class="line">      type: <span class="string">'gcj02'</span>,    <span class="comment">//wgs84 返回 gps 坐标，gcj02 返回可用于 wx.openLocation 的坐标</span></span><br><span class="line">      success(res) {  <span class="comment">//成功获得坐标的话</span></span><br><span class="line">        <span class="keyword">const</span> latitude = res.latitude   <span class="comment">//记录纬度</span></span><br><span class="line">        <span class="keyword">const</span> longitude = res.longitude <span class="comment">//记录经度</span></span><br><span class="line">        <span class="keyword">const</span> speed = res.speed   </span><br><span class="line">        <span class="keyword">const</span> accuracy = res.accuracy   <span class="comment">//精度值</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"getLocation:"</span>, res);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//弹出选择位置</span></span><br><span class="line">        wx.chooseLocation({ </span><br><span class="line">          success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>{ <span class="comment">//成功回调函数</span></span><br><span class="line">            l(<span class="string">"chooseLocation:"</span>,res);   <span class="comment">//打印</span></span><br><span class="line">            l(res.address);</span><br><span class="line">            that.setData({    <span class="comment">//更改网页的信息</span></span><br><span class="line">              name:res.name,</span><br><span class="line">              pos:res.address</span><br><span class="line">            })</span><br><span class="line">          },</span><br><span class="line">        })</span><br><span class="line">      }</span><br><span class="line">    })</span><br><span class="line">  },</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="百度地图-API-使用示例"><a href="#百度地图-API-使用示例" class="headerlink" title="百度地图 API 使用示例"></a>百度地图 API 使用示例</h1><blockquote><p>实例为显示当前位置</p></blockquote><p><a href="https://img-blog.csdnimg.cn/20191210211321589.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210211321589.gif" src="/img/loading.gif" class="lazyload"></a></p><ul><li>首先在搜索引擎里搜索 <strong>百度地图api</strong>，然后进入，注册</li><li>注册成功之后打开百度地图的控制台<br><a href="https://img-blog.csdnimg.cn/20191210212232516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210212232516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>看图<br><a href="https://img-blog.csdnimg.cn/20191210212251361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210212251361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>取名字<br><a href="https://img-blog.csdnimg.cn/20191210212310598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210212310598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>创建好之后，复制你的 ak 值<br><a href="https://img-blog.csdnimg.cn/20191210212356196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191210212356196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/12-10/demo3/baiduApi.js</span></span><br><span class="line"><span class="comment">//写page里，我这里就不写page了</span></span><br><span class="line">location(){</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    wx.showLoading({</span><br><span class="line">      title: <span class="string">'加载中'</span>,</span><br><span class="line">    })</span><br><span class="line">    wx.getLocation({  <span class="comment">//获取用户的位置信息</span></span><br><span class="line">    </span><br><span class="line">      <span class="comment">//用户已经授权了接口才会接着执行</span></span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>{</span><br><span class="line">        wx:wx.hideLoading();<span class="comment">//隐藏加载提示</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 纬度</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"纬度："</span>,res.latitude);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 经度</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"经度："</span>,res.longitude);</span><br><span class="line"></span><br><span class="line">        wx:wx.request({</span><br><span class="line">          <span class="comment">//请求百度地图的接口</span></span><br><span class="line">          url: <span class="string">'http://api.map.baidu.com/reverse_geocoding/v3'</span>,</span><br><span class="line">          data:{</span><br><span class="line">            ak:<span class="string">"nhFmMePLH66sRx1DcT0wwk2bPjymwBfq"</span>,  <span class="comment">//填你自己的ak值</span></span><br><span class="line">            location: <span class="string">`<span class="subst">${res.latitude}</span>,<span class="subst">${res.longitude}</span>`</span>, <span class="comment">//传值，注意纬度、经度的顺序</span></span><br><span class="line">            output:<span class="string">"json"</span> </span><br><span class="line">          },</span><br><span class="line">          success(res){</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"baiduApi:"</span>,res);</span><br><span class="line">            <span class="keyword">if</span>(res.data.status == <span class="string">'0'</span>){</span><br><span class="line">              that.setData({</span><br><span class="line">                locationTest: res.data.result.formatted_address</span><br><span class="line">              })</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        })</span><br><span class="line">      },</span><br><span class="line">    })</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="获取位置天气信息"><a href="#获取位置天气信息" class="headerlink" title="获取位置天气信息"></a>获取位置天气信息</h1><p>首先又是下载插件hhh<br>链接：<a href="https://pan.baidu.com/s/1_gjqqt8ZKqZB1hErWH1TvQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1_gjqqt8ZKqZB1hErWH1TvQ</a><br>提取码：r85m</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/12-10/demo4/demo4.js</span></span><br><span class="line"><span class="comment">//这个写在page的外面，作用是把百度api的所有导入过来</span></span><br><span class="line"><span class="keyword">let</span> bamp = <span class="built_in">require</span>(<span class="string">'../../../js/bmap-wx.min.js'</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>然后在js中写如下的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我把这些写在onLoad()函数中了</span></span><br><span class="line"><span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">   <span class="keyword">let</span> BMap = <span class="keyword">new</span> bamp.BMapWX({</span><br><span class="line">     <span class="comment">//new一个插件的对象出来</span></span><br><span class="line">     ak: <span class="string">"填你自己的"</span></span><br><span class="line">   });</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 抽离的思想</span></span><br><span class="line">   <span class="keyword">let</span> success = <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>{</span><br><span class="line">     <span class="keyword">let</span> string = <span class="built_in">console</span>.log(res.currentWeather[<span class="number">0</span>]);</span><br><span class="line">     <span class="comment">//{currentCity: "烟台市", pm25: "206", date: "周二 12月10日 (实时：8℃)", temperature: "12 ~ 2℃", weatherDesc: "多云转晴", …}</span></span><br><span class="line">     </span><br><span class="line">     <span class="keyword">let</span> city = res.currentWeather[<span class="number">0</span>].currentCity;</span><br><span class="line">     <span class="keyword">let</span> pm25 = res.currentWeather[<span class="number">0</span>].pm25;</span><br><span class="line">     <span class="keyword">let</span> date = res.currentWeather[<span class="number">0</span>].date;</span><br><span class="line">     <span class="keyword">let</span> temperature = res.currentWeather[<span class="number">0</span>].temperature;</span><br><span class="line">     <span class="keyword">let</span> weatherDdesc = res.currentWeather[<span class="number">0</span>].weatherDdesc;</span><br><span class="line">   }</span><br><span class="line">   BMap.weather({</span><br><span class="line">     success:success,<span class="comment">//成功的话执行success函数</span></span><br><span class="line">   })</span><br></pre></td></tr></tbody></table></figure></div><p>#</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端20_微信】准备、WXML 操作、JS：数据绑定、条件语句、事件、更新数据、存储、双向数据绑定、图片选择，预览、对外暴露、模板</title>
      <link href="p/15958.html"/>
      <url>p/15958.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="微信小程序简介"><a href="#微信小程序简介" class="headerlink" title="微信小程序简介"></a>微信小程序简介</h1><ul><li>小程序的大小限制在 <strong>2MB</strong> 以内</li></ul><h1 id="开发前的准备"><a href="#开发前的准备" class="headerlink" title="开发前的准备"></a>开发前的准备</h1><p>首先要注册个微信开发者工具，来这个网站<br><a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" target="_blank" rel="noopener">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a><br>我用邮箱注册的（我新建的网易163邮箱）</p><h2 id="小程序-ID"><a href="#小程序-ID" class="headerlink" title="小程序 ID"></a>小程序 ID</h2><p>注册完之后把你的 ID 记住了</p><p><a href="https://img-blog.csdnimg.cn/20191127202343250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127202343250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p><a href="https://img-blog.csdnimg.cn/20191127202353374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127202353374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h2 id="下载开发者工具"><a href="#下载开发者工具" class="headerlink" title="下载开发者工具"></a>下载开发者工具</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a><br>根据你自己的操作平台来下载，我的是 Win10</p><hr><h2 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h2><p>安装完开发者工具之后，打开它<br><a href="https://img-blog.csdnimg.cn/20191127202814508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127202814508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h2 id="编译界面简介"><a href="#编译界面简介" class="headerlink" title="编译界面简介"></a>编译界面简介</h2><p><a href="https://img-blog.csdnimg.cn/20191127203616824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127203616824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="WXML-的基本开发"><a href="#WXML-的基本开发" class="headerlink" title="WXML 的基本开发"></a>WXML 的基本开发</h1><h2 id="创建新的页面"><a href="#创建新的页面" class="headerlink" title="创建新的页面"></a>创建新的页面</h2><ul><li>我们点开 <code>app.json</code> 文件，在 <code>"pages"</code> 这个数组中添加新的语句，我填的是 <code>"pages/demo1/demo1",</code>，这句话就是声明一个名为 <code>demo1</code> 的新页面，然后按下< kbd>Ctrl< /kbd> + < kbd>S< /kbd>，保存好之后在左侧的 pages 文件夹中自动生成 demo1 文件夹</li><li>注意 <code>pages</code> 这里谁写在第一位，那么在开启小程序的时候就会展示这一页，你可以想象成主页。<br><a href="https://img-blog.csdnimg.cn/2019112720521735.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019112720521735.gif" src="/img/loading.gif" class="lazyload"></a><br>在这个文件夹中自动生成四个文件，其中的 <code>.wxml</code> 就类似 <code>.html</code>，<code>.wxss</code> 就类似 <code>.css</code>，我说的类似是他们功能是相似的，但是里面的语法，及标签的使用还是有些许区别的<br><a href="https://img-blog.csdnimg.cn/20191127210113225.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127210113225.png" src="/img/loading.gif" class="lazyload"></a></li></ul><h2 id="创建-tabBar"><a href="#创建-tabBar" class="headerlink" title="创建 tabBar"></a>创建 tabBar</h2><h3 id="简单操作"><a href="#简单操作" class="headerlink" title="简单操作"></a>简单操作</h3><blockquote><p>首先 <code>tabBar</code> 是个啥呢？就是你打开微信，下面的四个切换栏</p></blockquote><p>在 <code>app.json</code> 文件中</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">"tabBar":{</span><br><span class="line">  "list":[</span><br><span class="line">    {</span><br><span class="line">      <span class="attr">"pagePath"</span>:<span class="string">"pages/demo1/demo1"</span>,</span><br><span class="line">      <span class="attr">"text"</span>:<span class="string">"demo1"</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="attr">"pagePath"</span>: <span class="string">"pages/index/index"</span>,</span><br><span class="line">      <span class="attr">"text"</span>: <span class="string">"index"</span></span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure></div><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>对象中最后一项语句的末尾，是不可以有逗号的，比方说这个 <code>"text":"demo1"</code>，他是对象中最后一个键值对，它的最后面不可以加逗号的，也就是写成 <code>"text":"demo1",</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">     <span class="string">"pagePath"</span>:<span class="string">"pages/demo1/demo1"</span>,</span><br><span class="line">     <span class="string">"text"</span>:<span class="string">"demo1"</span></span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure></div><ul><li>颜色的表示方法，很多都是 十六</li></ul><hr><p>具体添加方法如下<br><a href="https://img-blog.csdnimg.cn/20191127211615670.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127211615670.gif" src="/img/loading.gif" class="lazyload"></a></p><h3 id="添加-tabBar-的图标"><a href="#添加-tabBar-的图标" class="headerlink" title="添加 tabBar  的图标"></a>添加 tabBar  的图标</h3><blockquote><p>微信官方给的要求：<br>icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。</p></blockquote><p>首先来这个网站    <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a>    搜索你想要的图标，比方我要微信上的 Chats 图标<br><a href="https://img-blog.csdnimg.cn/20191127212101449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127212101449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li><code>iconPath</code> 这个属性是选项卡没有选中时的图片，通常为灰色</li><li><code>selectedIconPath</code> 选项卡选中时的图片，微信是绿色的，这两个图片我们都要设置</li></ul><p><a href="https://img-blog.csdnimg.cn/20191127213046573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127213046573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h2 id="页面的编写"><a href="#页面的编写" class="headerlink" title="页面的编写"></a>页面的编写</h2><ul><li>新的标签名字 <code>view</code> 类似原先的 <code>div</code> ，</li></ul><p>以下是水平的滑动，演示如下<br><a href="https://img-blog.csdnimg.cn/20191127215632660.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191127215632660.gif" src="/img/loading.gif" class="lazyload"></a><br>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< !<span class="attr">--pages</span>/<span class="attr">demo2</span>/<span class="attr">demo2.wxml--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">scroll-view</span> <span class="attr">id</span>=<span class="string">"scroll"</span> <span class="attr">scroll-x</span>=<span class="string">"true"</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"flex"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item1"</span>></span>1<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item2"</span>></span>2<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item3"</span>></span>3<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item4"</span>></span>4<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item5"</span>></span>5<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">view</span> <span class="attr">class</span>=<span class="string">"item item6"</span>></span>6<span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">  <span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">scroll-view</span>></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* pages/demo1/demo1.wxss */</span></span><br><span class="line"><span class="selector-id">#scroll</span>{</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> salmon solid;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.flex</span>{</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1300px</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item</span>{</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item1</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: gold;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item2</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">34</span>, <span class="number">148</span>, <span class="number">11</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item3</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">223</span>, <span class="number">123</span>, <span class="number">84</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item4</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">165</span>, <span class="number">45</span>, <span class="number">95</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item5</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">87</span>, <span class="number">37</span>, <span class="number">204</span>);</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.item6</span>{</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">151</span>, <span class="number">102</span>, <span class="number">123</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h3><p>轮播图 <code>< swiper></code> 需要配合 <code>< swiper-item></code> 来一起使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">swiper</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">swiper-item</span>></span>1<span class="tag">< /<span class="attr">swiper-item</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">swiper-item</span>></span>2<span class="tag">< /<span class="attr">swiper-item</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">swiper</span>></span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html</a><br>这是官方给的轮播图的属性</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>常用的标签在官网上都有说明，需要的话自行查找</p><hr><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>小程序中是没有 dom 的，依赖于 <strong>数据的绑定</strong></p><h2 id="定义、引用变量（数据绑定）"><a href="#定义、引用变量（数据绑定）" class="headerlink" title="定义、引用变量（数据绑定）"></a>定义、引用变量（数据绑定）</h2><p>目前我们需要把变量声明到 <code>xx.js</code> 文件中的 <code>data</code> 里，放在这里的变量可以用在 <code>wxml</code> 中<br><a href="https://img-blog.csdnimg.cn/20191201085122815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191201085122815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>data 里是对象，里面放 <code>"key":"value"</code>，我在里面放了个</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data: {</span><br><span class="line">  flag:<span class="string">"true"</span></span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure></div><p>如何在 wxml 页面引用变量？<br>用<code></code> 两个花括号</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">text</span>></span>{{flag}}<span class="tag">< /<span class="attr">text</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p>这样引用变量既可以当属性名，也可以用来做属性值<br><a href="https://img-blog.csdnimg.cn/20191201090010466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191201090010466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><p>微信小程序中的条件是 <code>wx:if</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:if</span>=<span class="string">"{{flag > 0}}"</span>></span></span><br><span class="line">  if</span><br><span class="line"><span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:elif</span>=<span class="string">"{{flag <  0}}"</span>></span></span><br><span class="line">  elif</span><br><span class="line"><span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:else</span>=<span class="string">"{{flag == 0}}"</span>></span></span><br><span class="line">  else</span><br><span class="line"><span class="tag">< /<span class="attr">view</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p><code>wx:if</code>和 <code>hidden</code> 都能实现隐藏，那么他俩的区别在于</p><p><code>wx:if</code>是惰性求值，渲染都不渲染，切换的时候卡</p><p><code>hidden</code>，频繁切换的话，效率高一点，他是渲染的，上来就卡</p><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>通过 <code>wx:for=""</code> 来声明循环那个对象，<code></code>，通过 <code>wx:item="item"</code> 来声明对象中每个元素叫啥，这里取名叫 <code>item</code> ，取名任意，你想改就改</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:for</span>=<span class="string">"{{arr}}"</span> <span class="attr">wx:item</span>=<span class="string">"item"</span>></span></span><br><span class="line">  {{item}}</span><br><span class="line"><span class="tag">< /<span class="attr">view</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><p>更新数据需要用到 <code>setData</code>，这里更新完的数据会传递到页面中供其使用<br>刚开始我们需要 <code>let that = this;</code> 使指针指向对象，这个对象是 <code>page</code> 里的那个对象，就是下面动画里选中的这一大坨<br><a href="https://img-blog.csdnimg.cn/2019120321072553.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019120321072553.gif" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">that.setData({</span><br><span class="line"><span class="comment">//这里填你想要修改的值</span></span><br><span class="line"><span class="string">"key"</span>:<span class="string">"value"</span></span><br><span class="line"></span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><p>这个key值如果有变量的话就要在外部拼接好，然后在这里用解构，比方说下面的例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key = <span class="string">`arr[<span class="subst">${choiseIndex}</span>].boolean`</span>;<span class="comment">//这里的key有变量choiseIndex,在外部拼接好了</span></span><br><span class="line">that.setData({</span><br><span class="line">      [key]: <span class="literal">false</span><span class="comment">//这里不能直接写key，要用中括号解构好变量,像这样：[key]</span></span><br><span class="line">    })</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="点击变色（1）"><a href="#点击变色（1）" class="headerlink" title="点击变色（1）"></a>点击变色（1）</h2><blockquote><p>问题描述：我点击 li，这个 li 就变色，在点击另一个 li，另一个 li 变色，上一个li就恢复原来的颜色，只能存在一个 li 是变色的<br>演示如下<br><a href="https://img-blog.csdnimg.cn/20191203195941115.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191203195941115.gif" src="/img/loading.gif" class="lazyload"></a></p></blockquote><p>解决思路:</p><ul><li>首先小程序里没有 Dom 节点，只能通过数据绑定了</li><li>那么我们可以通过切换每个标签的类名，实现样式的改变</li><li>我给每一个标签加上索引，判断 <code>点击的索引 == 标签的索引</code>，如果是，就给他加样式，如果不是就不用管它</li></ul><p>抛出问题：</p><ul><li>如何给标签加属性索引？</li><li>如何在 js 中找到点击的是哪一个？</li></ul><p>解决问题：</p><ul><li>我用 <code>data-xxx</code> ，把他写在标签里，相当于给标签加上了新的属性，写它的好处在于你能在 js 文件中通过事件因子 <code>e</code> 找到你点击的是哪一个<a href="https://img-blog.csdnimg.cn/20191203201147164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191203201147164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>我们可以通过事件因子中的 <code>e.currentTarget.dataset</code> 这里找到我们在标签里写的属性。<br><a href="https://img-blog.csdnimg.cn/20191203201754147.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191203201754147.gif" src="/img/loading.gif" class="lazyload"></a></li></ul><p>注意：</p><ul><li><code>that.setData({})</code>只有在这里修改 data 里的数据，才会把更改后的新数据传到页面中，你在他外面修改data 的数据值，是不会传递到页面中去的</li></ul><p>完整代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js</span></span><br><span class="line"><span class="comment">//上面的Page没有写，函数是写在page里的</span></span><br><span class="line">data: {</span><br><span class="line">    arr:[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>],</span><br><span class="line">    tapIndex:<span class="number">-1</span></span><br><span class="line">  },</span><br><span class="line">  </span><br><span class="line">  changeCol(e){</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> tapIndex = e.currentTarget.dataset.index;</span><br><span class="line">    that.setData({</span><br><span class="line">      tapIndex: tapIndex</span><br><span class="line">    })</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/*wxml*/</span><br><span class="line"><span class="tag">< <span class="attr">text</span>></span>点击那个那个变色，只有一个变色<span class="tag">< /<span class="attr">text</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:for</span>=<span class="string">"{{arr}}"</span> <span class="attr">data-index</span>=<span class="string">"{{index}}"</span> <span class="attr">bindtap</span>=<span class="string">"changeCol"</span>  <span class="attr">class</span>=<span class="string">"color{{tapIndex == index ? 'Select':'Normal'}}"</span>></span>{{item}}<span class="tag">< /<span class="attr">view</span>></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.colorNormal</span>{</span><br><span class="line">  <span class="attribute">color</span>: black</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.colorSelect</span>{</span><br><span class="line">  <span class="attribute">color</span>:red</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="点击变色（2）"><a href="#点击变色（2）" class="headerlink" title="点击变色（2）"></a>点击变色（2）</h2><blockquote><p>问题描述<br>击那个就切换颜色，再次点击取消颜色<br>演示如下<br><a href="https://img-blog.csdnimg.cn/20191203202805501.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191203202805501.gif" src="/img/loading.gif" class="lazyload"></a></p></blockquote><p>解决思路</p><ul><li>给每一个 li 添加一个状态，这种状态记录着它是否被点击过，因为我们循环的数据，那么我们暂且把这种状态加到数据里</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我的这组数据中 num 就是记录这种状态，默认 -1 为未点击状态</span></span><br><span class="line">data: {</span><br><span class="line">    arr: [</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第1"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第2"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第3"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第4"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">    ],</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><ul><li>我还是通过 <code>data-num=""</code> 来寻找点的是哪一个标签</li><li><strong>重点！！！：</strong> 我们在用 <code>setData</code> 来更新 data 里的数据的时候，对象里的 key 值一定是个字符串</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误1： key值为变量，arr[index].num 是不会被解析的</span></span><br><span class="line">that.setData({</span><br><span class="line">     arr[index].num : <span class="number">1</span></span><br><span class="line">   })</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误2： key值为变量，result 里是有 index 的，</span></span><br><span class="line"><span class="comment">//index 也是变量不是字符串，照样是不会被解析的</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="string">"arr["</span> + index + <span class="string">"].num"</span>;</span><br><span class="line">that.setData({</span><br><span class="line">     result : <span class="number">1</span></span><br><span class="line">     <span class="comment">//等价于 "arr[" + index + "].num" : 1</span></span><br><span class="line">   })</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正确示范：加上中括号，里面的变量就可以解析了（es6）</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="string">"arr["</span> + index + <span class="string">"].num"</span>;</span><br><span class="line">that.setData({</span><br><span class="line">     [result] : <span class="number">1</span></span><br><span class="line">   })</span><br></pre></td></tr></tbody></table></figure></div><p>完整代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< !<span class="attr">--</span>页面<span class="attr">.wxml--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">text</span>></span>点击那个就切换颜色，再次点击取消，跟电影院选位置一样</span><br><span class="line"></span><br><span class="line"><span class="tag">< /<span class="attr">text</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">view</span> <span class="attr">wx:for</span>=<span class="string">"{{arr}}"</span> <span class="attr">data-num</span>=<span class="string">"{{index}}"</span> <span class="attr">bindtap</span>=<span class="string">"changeCol"</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">view</span> <span class="attr">wx:if</span>=<span class="string">"{{item.num != -1}}"</span> <span class="attr">class</span>=<span class="string">"colorSelect"</span>></span></span><br><span class="line">    {{item.data}}</span><br><span class="line">  <span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">view</span> <span class="attr">wx:else</span> <span class="attr">class</span>=<span class="string">"colorNormal"</span>></span></span><br><span class="line">    {{item.data}}</span><br><span class="line">  <span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">view</span>></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式.wxss */</span></span><br><span class="line"><span class="selector-class">.colorNormal</span>{</span><br><span class="line">  <span class="attribute">color</span>: black</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.colorSelect</span>{</span><br><span class="line">  <span class="attribute">color</span>:red</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">data: {</span><br><span class="line">    arr: [</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第1"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第2"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第3"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">      { <span class="attr">data</span>: <span class="string">"第4"</span>, <span class="attr">num</span>: <span class="number">-1</span> },</span><br><span class="line">    ],</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  changeCol(e) {</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> index = e.currentTarget.dataset.num;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">"arr["</span> + index + <span class="string">"].num"</span>;</span><br><span class="line">    <span class="keyword">if</span>(that.data.arr[index].num == <span class="number">-1</span>){</span><br><span class="line">      that.setData({</span><br><span class="line">        [result] : <span class="number">1</span></span><br><span class="line">      })</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">      that.setData({</span><br><span class="line">        [result]: <span class="number">-1</span></span><br><span class="line">      })</span><br><span class="line">    }</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="双击-单击"><a href="#双击-单击" class="headerlink" title="双击/单击"></a>双击/单击</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简写输出语句</span></span><br><span class="line"><span class="keyword">var</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">Page({</span><br><span class="line">data: {</span><br><span class="line">    last:<span class="number">0</span>,</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置空属性，等会延时定时器的名字</span></span><br><span class="line">  funC:<span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">  timeEnd:<span class="number">0</span>,</span><br><span class="line">  timeStart:<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">  touchStart(e){</span><br><span class="line">    <span class="comment">//记录触屏按下时的时间戳，赋值给对象中的timeStart属性</span></span><br><span class="line">    <span class="keyword">this</span>.timeStart = e.timeStamp;</span><br><span class="line">  },</span><br><span class="line">  touchEnd(e){</span><br><span class="line">    <span class="comment">//记录触屏手抬起时的时间戳，赋值给对象中的touchEnd属性</span></span><br><span class="line">    <span class="keyword">this</span>.timeEnd = e.timeStamp;</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  double(e){</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">//如果（抬起 - 按下）的时间小于350毫秒，那么就可以判断他不是长按了</span></span><br><span class="line">    <span class="comment">//然后我们区分单击还是双击</span></span><br><span class="line">    <span class="keyword">if</span> (that.timeEnd - that.timeStart <  <span class="number">350</span>){</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> now = e.timeStamp;  <span class="comment">//记录现在按下的时间戳</span></span><br><span class="line">      <span class="keyword">let</span> last = that.data.last;  <span class="comment">//取出上一个记录的时间戳</span></span><br><span class="line">      that.data.last = now; <span class="comment">//更新上一个的时间戳</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (now - last <  <span class="number">300</span>) {   <span class="comment">//如两次抬起的时间差小于300ms</span></span><br><span class="line">        clearTimeout(that.funC);  <span class="comment">//清除定时器</span></span><br><span class="line">        l(<span class="string">"double"</span>);  <span class="comment">//判断为双击，并输出提示</span></span><br><span class="line">      } <span class="keyword">else</span> {    </span><br><span class="line">        that.funC = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">          l(<span class="string">"single"</span>);  <span class="comment">//否则设置延时定时器，并在300ms之后输出单击</span></span><br><span class="line">        },<span class="number">300</span>)</span><br><span class="line">      }</span><br><span class="line">    } </span><br><span class="line">  },</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><p>这个是官方的，我这里记一些我觉得有用的<br><a href="https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html</a></p><ul><li>同步、异步，是要看项目的需求的，如果你的数据需要及时的读，那么就要同步</li><li>需要存储的内容。只支持原生类型、Date、及能够通过JSON.stringify序列化的对象</li><li>优化：存储数据的话以 id 为关键字来存储，例如 <code>"用户名",[{属性1},{属性2},{属性3}]</code>，用数组对象来放置属性，这样你在移除 id 的时候只需要移除用户名的 value 就圆满了，尽量避免碎片化的存储记录</li></ul><hr><h2 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h2><blockquote><p>提出问题：我是否可以在页面wxml中更改input值，点击提交，同时 js 里也能获取到这个值</p></blockquote><p>数据绑定，原先都是js里些数据，然后绑定渲染到页面中，那么可不可以反过来呢?</p><p>分析问题的需求 ，给 <code>input</code> 绑定这个事件最好不过了，<code>bindblur</code>，input 失焦就会触发这个事件（我原先是绑定的bindinput，这个事件每次输入值的话就会触发，这样事件就会触发很多次，然而 <strong>触发事件是消耗内存的</strong>）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/12-10/demo6/input.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发事件会消耗内存的，所以尽量少一些触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一下这些写在page里錒！！</span></span><br><span class="line">  data: {</span><br><span class="line">    valueInput:<span class="literal">null</span></span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  inputBox(e){</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(e.detail.value);<span class="comment">//好奇的话可以打印e事件因子看看里面都有啥</span></span><br><span class="line">    that.setData({</span><br><span class="line">      valueInput: e.detail.value</span><br><span class="line">    })</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><p>网页如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">input</span> <span class="attr">bindblur</span>=<span class="string">"inputBox"</span> <span class="attr">placeholder</span>=<span class="string">"输入密码"</span> <span class="attr">id</span>=<span class="string">"inputId"</span> <span class="attr">value</span>=<span class="string">"{{valueInput}}"</span>></span><span class="tag">< /<span class="attr">input</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="图片选择、预览"><a href="#图片选择、预览" class="headerlink" title="图片选择、预览"></a>图片选择、预览</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择图片</span></span><br><span class="line"><span class="comment">//你可以把这段程序放在按钮的点击事件上</span></span><br><span class="line">wx.chooseImage({  <span class="comment">//选择照片</span></span><br><span class="line">      count: <span class="number">9</span>,   <span class="comment">//能选照片的最多数量，最大是9</span></span><br><span class="line">      sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>],    <span class="comment">//选择照片的方式</span></span><br><span class="line">      success(res) {</span><br><span class="line">        <span class="comment">// tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class="line">        <span class="keyword">const</span> tempFilePaths = res.tempFilePaths;</span><br><span class="line">        that.setData({</span><br><span class="line">          imgSrc: tempFilePaths</span><br><span class="line">        })</span><br><span class="line">      }</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//预览图片</span></span><br><span class="line">previewImage(e){</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 全屏显示图片</span></span><br><span class="line">    wx:wx.previewImage({</span><br><span class="line">      urls: that.data.imgSrc, <span class="comment">//当前显示图片的http链接数组，</span></span><br><span class="line">      current: that.data.imgSrc[e.currentTarget.dataset.id] <span class="comment">//需要预览的图片地址</span></span><br><span class="line">    })</span><br><span class="line">  },</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="wxml-模板"><a href="#wxml-模板" class="headerlink" title="wxml 模板"></a>wxml 模板</h2><blockquote><p>WXML提供模板（template），可以在模板中定义代码片段，然后在不同的地方调用。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< !<span class="attr">--</span> 以<span class="attr">name</span>名字定义 <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">template</span> <span class="attr">name</span>=<span class="string">"msgItem"</span>></span></span><br><span class="line">  <span class="tag">< <span class="attr">view</span>></span></span><br><span class="line">    这是一个模板</span><br><span class="line">  <span class="tag">< /<span class="attr">view</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">template</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">< !<span class="attr">--</span> 用<span class="attr">is</span>来调用<span class="attr">html</span> 的模板 </span></span><br><span class="line"><span class="tag"><span class="attr">is</span>里可以使用{{三目运算符}} <span class="attr">--</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">template</span> <span class="attr">is</span>=<span class="string">"msgItem"</span> <span class="attr">data</span>=<span class="string">""</span>/></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="对外暴露并引用"><a href="#对外暴露并引用" class="headerlink" title="对外暴露并引用"></a>对外暴露并引用</h2><p>如果你想在 js 中调用别的 js 文件中的函数或者属性，那么你就需要把要调用的属性 <strong>对外暴露</strong></p><ul><li>关键语句 <code>module.exports.testA = testA;</code>  这里前面的 <code>testA</code> 你可以起任何名字，后面的 <code>testA</code> 是你要暴露的函数/属性名字</li><li></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比方说我要暴露这个 testA 的函数，让他在别的 js 中也能调用</span></span><br><span class="line"><span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testA</span>(<span class="params"></span>)</span>{</span><br><span class="line">  l(<span class="string">"testA()"</span>,<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//对外暴露方法 module.exports.给对外暴露的方法起名字 = 想要调用的方法</span></span><br><span class="line"><span class="built_in">module</span>.exports.testA = testA;</span><br></pre></td></tr></tbody></table></figure></div><p>引用的方法如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个写在Page外面</span></span><br><span class="line"><span class="keyword">let</span> container = <span class="built_in">require</span>(<span class="string">"a.js"</span>);  <span class="comment">//先写引用的路径，把模块保存到container里</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这个可以写在 onLoad 里测试一下</span></span><br><span class="line">container.testA();  <span class="comment">//调用这样调用，模块.函数名</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>模块化思想：    依赖关系，如果你想封装百度地图的天气信息，你先把百度功能的天气提取然后封装到一个对象中，然后暴露这个对象</li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端19_JS】ES 6：Proxy 过滤器、遍历器接口、function_</title>
      <link href="p/47759.html"/>
      <url>p/47759.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="过滤器-Proxy"><a href="#过滤器-Proxy" class="headerlink" title="过滤器 Proxy"></a>过滤器 Proxy</h1><blockquote><p>修改某些操作的默认行为，比方说a标签的跳转<br>又叫元编程</p></blockquote><ul><li>作用：拦截操作，类似过滤器、代理器</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立过滤器</span></span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(target,handler);</span><br></pre></td></tr></tbody></table></figure></div><p>它有两个属性，分别是 <code>target</code> 目标， <code>handler</code> 处理方法</p><h2 id="target"><a href="#target" class="headerlink" title="target"></a>target</h2><blockquote><p>就是过滤器的目标</p></blockquote><p>目标是什么类型的，那么过滤器就是什么类型的</p><h2 id="handler"><a href="#handler" class="headerlink" title="handler"></a>handler</h2><blockquote><p>他是过滤器的处理方法，就是要告诉过滤器，你咋过滤的？<br>它本身是个对象</p></blockquote><p>以下是 handler 中的几个方法</p><h3 id="get：改变“读取”操作"><a href="#get：改变“读取”操作" class="headerlink" title="get：改变“读取”操作"></a>get：改变“读取”操作</h3><p>你的所有获取属性的方法都叫 <strong>读取</strong> 方法</p><ul><li>比方说 <code>arr[0]</code>，这是用 <strong>中括号</strong> 来读取 arr 中下标为零的元素</li><li><code>console.log()</code> <strong>点方法</strong> 获取 <code>console</code> 对象中的 <code>log</code> 方法</li><li>get 有 三个参数，分别是<br><code>target</code> 目标，比方说 <code>obj.name</code>，目标就是 <code>obj</code><br><code>key</code> 就是你点之后的东西，比方说 <code>obj.name</code> ，<code>key</code> 就是 <code>name</code><br>第三个不咋用</li></ul><blockquote><p>而过滤器中的 get 会改变你读取 target 的方法</p></blockquote><ul><li>没有 get ，输出如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">       name :<span class="string">"霍金"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="comment">//建立 关于目标 obj 的 Proxy 过滤器</span></span><br><span class="line">   <span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(obj,{</span><br><span class="line">       <span class="comment">//首先这里什么都没干</span></span><br><span class="line">   });</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//通过代理来访问obj中的name属性</span></span><br><span class="line">   <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">   <span class="comment">//霍金</span></span><br><span class="line">   <span class="comment">//什么都没干的时候过滤器就是 target 本身</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>有 get 方法，输出如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">       name :<span class="string">"霍金"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="comment">//建立 Proxy 过滤器</span></span><br><span class="line">   <span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(obj,{</span><br><span class="line">       <span class="comment">//当你在这里写了get的时候，就已经开始修改读取的方法了</span></span><br><span class="line">       <span class="comment">//所有的读取都走get语句，现在语句里啥都没有，所以 proxy.name 是 undefined</span></span><br><span class="line">       <span class="keyword">get</span>() {</span><br><span class="line"></span><br><span class="line">       }</span><br><span class="line">   });</span><br><span class="line"></span><br><span class="line">   <span class="comment">//通过代理来访问obj中的name属性</span></span><br><span class="line">   <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立过滤器</span></span><br><span class="line">   <span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>({<span class="attr">name</span>:<span class="string">"name的val"</span>},{</span><br><span class="line">       <span class="comment">//get 封掉了读方法</span></span><br><span class="line">       <span class="keyword">get</span>(target,key){</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">"我拦截了读取操作"</span>);</span><br><span class="line">           <span class="keyword">if</span> (key == <span class="string">"prototype"</span>) {</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"dont touch me"</span>);</span><br><span class="line">           }</span><br><span class="line">           <span class="keyword">return</span> target[key];</span><br><span class="line">       },</span><br><span class="line">   });</span><br><span class="line">   <span class="comment">//你的所有点方法啊，[]什么的都是get方法</span></span><br><span class="line">   <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">   <span class="comment">//我拦截了读取操作</span></span><br><span class="line">   <span class="comment">//name的val</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(proxy.prototype);</span><br><span class="line">   <span class="comment">//Uncaught Error: dont touch me</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="读对象，找不到抛出错误"><a href="#读对象，找不到抛出错误" class="headerlink" title="读对象，找不到抛出错误"></a>读对象，找不到抛出错误</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = <span class="string">"xiaopang"</span></span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</span><br><span class="line">   <span class="keyword">var</span> handler = {</span><br><span class="line">       <span class="keyword">get</span>(target,key){</span><br><span class="line">           <span class="keyword">if</span>(key <span class="keyword">in</span> target){</span><br><span class="line">               <span class="keyword">return</span> target[key];</span><br><span class="line">           }<span class="keyword">else</span>{</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`Cant find <span class="subst">${key}</span> in <span class="subst">${target}</span>`</span>);</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(person1,handler);</span><br><span class="line">   <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">   <span class="comment">//xiaopang</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(proxy.age);</span><br><span class="line">   <span class="comment">//Uncaught Error: Cant find age in [object Object]</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="数组填负的下标，倒着找元素"><a href="#数组填负的下标，倒着找元素" class="headerlink" title="数组填负的下标，倒着找元素"></a>数组填负的下标，倒着找元素</h4><blockquote><p>问题描述：<br>有个数组 array = [0,1,2,3,4,5,6,7]<br>我 console.log(array[-1])，就输出 7</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//rest参数，首先把传来的1,2,3,4,5,6,7压缩成数组，保存在rest中</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">searchF</span>(<span class="params">...rest</span>) </span>{</span><br><span class="line">       <span class="comment">//写处理方法</span></span><br><span class="line">       <span class="keyword">let</span> handle = {</span><br><span class="line">           <span class="comment">//修改 get 读取方法</span></span><br><span class="line">           <span class="keyword">get</span>(tar,key){</span><br><span class="line">               <span class="comment">//把要找的负数的下标变成数</span></span><br><span class="line">               <span class="comment">//因为 key 是字符串，需要转换成数字</span></span><br><span class="line">               <span class="keyword">let</span> index = <span class="built_in">Number</span>(key);</span><br><span class="line">               <span class="keyword">if</span>(key <  <span class="number">0</span>){</span><br><span class="line">                   <span class="comment">//如果下标小于零，那么就跟着我游戏规则完</span></span><br><span class="line">                   key = tar.length + index;</span><br><span class="line">               }</span><br><span class="line">               <span class="comment">//返回找到的元素，给 get 方法</span></span><br><span class="line">               <span class="keyword">return</span> tar[key];</span><br><span class="line">           }</span><br><span class="line">       };</span><br><span class="line">       <span class="comment">//这个 searchF 返回个过滤器</span></span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Proxy</span>(rest,handle)</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">//这时候的 array 已经是过滤器了</span></span><br><span class="line">   <span class="keyword">var</span> array = searchF(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//读取，走get方法</span></span><br><span class="line">   <span class="built_in">console</span>.log(array[<span class="number">-1</span>]);</span><br><span class="line">   <span class="comment">//7</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="创建-key-类型的标签"><a href="#创建-key-类型的标签" class="headerlink" title="创建 key 类型的标签"></a>创建 key 类型的标签</h4><blockquote><p>问题描述：<br>通过过滤器在页面中添加节点，key 为 啥类型的标签，并且可以为标签添加属性和内容</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> creatDom = <span class="keyword">new</span> <span class="built_in">Proxy</span>({},{</span><br><span class="line">        <span class="keyword">get</span>(target,key) {</span><br><span class="line">            <span class="comment">//这里的attrs承接创建标签的属性，other是标签的其他数据</span></span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">attrs = {},...other</span>) </span>{</span><br><span class="line"></span><br><span class="line">                <span class="comment">//创建游离标签元素，key值是你想要创建啥标签</span></span><br><span class="line">                <span class="comment">// 比方说 creatDom.a，key 就是 a</span></span><br><span class="line">                <span class="keyword">let</span> ele = <span class="built_in">document</span>.createElement(key);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//循环设置标签属性</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> x <span class="keyword">of</span> <span class="built_in">Object</span>.keys(attrs)) {</span><br><span class="line">                    ele.setAttribute(x,attrs[x]);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="comment">//这里用forin是不对的，forin 是取key的，这里的话就是下标了</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> oth <span class="keyword">of</span> other) {</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">typeof</span> oth === <span class="string">"string"</span>){</span><br><span class="line">                        <span class="comment">//创建文本节点</span></span><br><span class="line">                        oth = <span class="built_in">document</span>.createTextNode(oth);</span><br><span class="line">                    }</span><br><span class="line">                    ele.appendChild(oth);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">return</span> ele;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//a1承接过滤器返回的ele游离节点</span></span><br><span class="line">    <span class="keyword">var</span> a1 = creatDom.a({<span class="attr">href</span>:<span class="string">"123.html"</span>},<span class="string">"文本1"</span>,<span class="string">"我是个文本2"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//把节点插入到body中</span></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(a1);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//others 中可以接着往下写下一级的东西，比方说如下</span></span><br><span class="line">    <span class="keyword">var</span> a2 = creatDom.div({},creatDom.ul({},creatDom.li({},<span class="string">"这是第一个"</span>)));</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(a2);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20191114211908321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191114211908321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="不允许读取私有属性"><a href="#不允许读取私有属性" class="headerlink" title="不允许读取私有属性"></a>不允许读取私有属性</h4><blockquote><p>要求描述：<br>不允许读写对象属性中以 _ 下划线打头的属性<br>比方说<br>const obj = {_pro:1}; 中的 _pro 就不被允许读写</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> people = {</span><br><span class="line">       name:<span class="string">"Wangbaoqiang"</span>,</span><br><span class="line">       _nickname:<span class="string">"高冷男神"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">key,method</span>) </span>{</span><br><span class="line">   <span class="comment">//如果它前面有下划线，代表咱要处理它，不让外面的人来读写！</span></span><br><span class="line">       <span class="keyword">if</span>(key[<span class="number">0</span>] == <span class="string">"_"</span>){</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`<span class="subst">${method}</span> is not use _`</span>);</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">const</span> handler = {</span><br><span class="line">       <span class="keyword">get</span>(tar,key){</span><br><span class="line">           check(key,<span class="string">"get"</span>);</span><br><span class="line">           <span class="keyword">return</span> tar[key];</span><br><span class="line">       },</span><br><span class="line">       <span class="keyword">set</span>(tar, key, val) {</span><br><span class="line">           check(key,<span class="string">"set"</span>);</span><br><span class="line">           tar[key] = val;</span><br><span class="line">       }</span><br><span class="line">   };</span><br><span class="line">   <span class="comment">//设置过滤器</span></span><br><span class="line">   <span class="keyword">const</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(people,handler);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(proxy);</span><br><span class="line">   <span class="comment">//Proxy {name: "Wangbaoqiang", _nickname: "高冷男神"}</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//读取普通属性，No problem</span></span><br><span class="line">   <span class="built_in">console</span>.log(proxy.name);</span><br><span class="line">   <span class="comment">//Wangbaoqiang</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//尝试读取私有属性_nickname</span></span><br><span class="line">   <span class="built_in">console</span>.log(proxy._nickname);</span><br><span class="line">   <span class="comment">//Uncaught Error: get is not use _</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//尝试改写私有属性_nickname，死心吧~</span></span><br><span class="line">   proxy._nickname = <span class="string">"我就要改！！改不动md"</span>;</span><br><span class="line">   <span class="comment">//Uncaught Error: set is not use _</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="set-：改变“修改”操作"><a href="#set-：改变“修改”操作" class="headerlink" title="set ：改变“修改”操作"></a>set ：改变“修改”操作</h3><ul><li>set 和 get 很相似，set 多了一个参数 <code>value</code></li><li>修改操作就是赋值呗~，看看下面的例子叭</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> people = {</span><br><span class="line">       name:<span class="string">"xiaopang"</span></span><br><span class="line">   };</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(people,{</span><br><span class="line">   <span class="comment">//receiver 这参数蛮闲鱼的，有兴趣自己试试吧</span></span><br><span class="line">       <span class="keyword">set</span>(target, key, value, receiver) {</span><br><span class="line">           <span class="keyword">if</span> (key == <span class="string">"age"</span>) {</span><br><span class="line">               <span class="keyword">if</span> (value <  <span class="number">18</span>) {</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">`<span class="subst">${key}</span>太小了,送你一箱练习册`</span>);</span><br><span class="line">                   <span class="keyword">return</span>;</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">           <span class="comment">//set就不用返回值了，你直接设置就可以了</span></span><br><span class="line">           target[key] = value;</span><br><span class="line">       }</span><br><span class="line">   });</span><br><span class="line">   <span class="comment">//这里你开始了改写操作，所以走代理器中的set方法</span></span><br><span class="line">   proxy.age = <span class="number">17</span>;</span><br><span class="line">   <span class="comment">//age太小了,送你一箱练习册</span></span><br><span class="line"></span><br><span class="line">   proxy.habit = [<span class="string">"sing"</span>,<span class="string">"sang"</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(people);</span><br><span class="line">   <span class="comment">////{name: "xiaopang", habit: Array(2)}</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><p><del>我需要研究一下</del></p><h3 id="ownKeys-：封掉关键字的使用"><a href="#ownKeys-：封掉关键字的使用" class="headerlink" title="ownKeys ：封掉关键字的使用"></a>ownKeys ：封掉关键字的使用</h3><p><del>我需要研究一下</del></p><h2 id="Proxy-revocable"><a href="#Proxy-revocable" class="headerlink" title="Proxy.revocable();"></a>Proxy.revocable();</h2><hr><h1 id="遍历器接口"><a href="#遍历器接口" class="headerlink" title="遍历器接口"></a>遍历器接口</h1><h2 id="遍历原理"><a href="#遍历原理" class="headerlink" title="遍历原理"></a>遍历原理</h2><p>就是下标下移</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">traversing</span>(<span class="params">array</span>) </span>{</span><br><span class="line">       <span class="comment">//游标</span></span><br><span class="line">       <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">return</span> {</span><br><span class="line">           next:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">               <span class="comment">//三目运算符</span></span><br><span class="line">               <span class="keyword">return</span> index <  array.length ?</span><br><span class="line">                   {<span class="attr">val</span>:array[index++],<span class="attr">able</span>:<span class="literal">true</span>}:</span><br><span class="line">                   {<span class="attr">val</span>:<span class="literal">undefined</span>,<span class="attr">able</span>:<span class="literal">false</span>};</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> arr = traversing([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line">   <span class="built_in">console</span>.log(arr.next());</span><br><span class="line">   <span class="comment">//{val: 1, able: true}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(arr.next());</span><br><span class="line">   <span class="comment">//{val: 2, able: true}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(arr.next());</span><br><span class="line">   <span class="comment">//{val: 3, able: true}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(arr.next());</span><br><span class="line">   <span class="comment">//{val: 4, able: true}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(arr.next());</span><br><span class="line">   <span class="comment">//{val: undefined, able: false}</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="function"><a href="#function" class="headerlink" title="function*"></a>function*</h1><p>这玩意叫啥？</p><ul><li>这里新出了个关键词 <code>yield</code> ，类似一个暂停符，到底有啥用请看下面的例子，</li><li>这个星号放在哪里都行！</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">test</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">yield</span> <span class="string">"我是第一句"</span>;</span><br><span class="line">       <span class="comment">//yield相当于暂停符号，一步一步的执行，要用 next 手动执行这个玩意儿</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">yield</span> <span class="string">"我是第二句"</span>;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"yes"</span>;</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> t = test();</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(t);</span><br><span class="line">   <span class="comment">//test {< suspended>}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(t.next());</span><br><span class="line">   <span class="comment">//{value: "我是第一句", done: false}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(t.next());</span><br><span class="line">   <span class="comment">//{value: "我是第二句", done: false}</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//跟指针一样一直下移</span></span><br><span class="line">   <span class="built_in">console</span>.log(t.next());</span><br><span class="line">   <span class="comment">//{value: "yes", done: true}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(t.next());</span><br><span class="line">   <span class="comment">//{value: undefined, done: true}</span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端18_JS】ES 6：箭头函数、This指针、处理错误、数据结构 Set、WeakSet、数据类型 Symbol、魔术字符</title>
      <link href="p/12753.html"/>
      <url>p/12753.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li><p>最简单的箭头函数：一个形参可以不用括号</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="params">v</span> =></span> v;</span><br><span class="line">   <span class="built_in">console</span>.log(f(<span class="number">1</span>));</span><br><span class="line">   <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这就等同于</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(v)</span><br><span class="line">   };</span><br><span class="line">   f();</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>函数如果没有形参，需要加括号</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f1 = <span class="function"><span class="params">()</span> =></span> <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(f1());</span><br><span class="line"><span class="comment">//5</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>多参数也需要加括号</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f2 = <span class="function">(<span class="params">a,b</span>) =></span> a + b;</span><br><span class="line"><span class="built_in">console</span>.log(f2(<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line"><span class="comment">//7</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="用法-amp-问题"><a href="#用法-amp-问题" class="headerlink" title="用法 & 问题"></a>用法 & 问题</h2><ul><li>箭头函数不能直接返回对象,他会当作代码块去处理，解决方法：在对象外 <strong>套上圆括号</strong> 即可</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不能直接返回对象 </span></span><br><span class="line"><span class="comment">//解决：在对象外加 ()</span></span><br><span class="line">   <span class="keyword">var</span> f3 = <span class="function"><span class="params">hi</span> =></span> ({<span class="attr">name</span>:<span class="string">"小强"</span>,<span class="attr">age</span>:<span class="number">18</span>});</span><br><span class="line">   <span class="built_in">console</span>.log(f3(<span class="number">1</span>));</span><br><span class="line">   <span class="comment">//{name: "小强", age: 18}</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>函数如果没有返回值，打印的是 <code>undefined</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line"><span class="keyword">var</span> f4 = <span class="function"><span class="params">()</span> =></span> {};</span><br><span class="line">   l(f4());</span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>把很多实参捏到一起，变成真正的数组，用 <code>...arr</code> ，也叫做 <code>rest</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line"><span class="keyword">var</span> f5 = <span class="function">(<span class="params">...arr</span>) =></span> arr;</span><br><span class="line">   l(f5(<span class="number">1</span>,<span class="number">2</span>,<span class="string">'33'</span>,<span class="number">4</span>,<span class="string">"5"</span>));</span><br><span class="line">   <span class="comment">//(5) [1, 2, "33", 4, "5"]</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>和 <code>map</code> 映射结合,把数组中的每一项都加1</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">   <span class="keyword">var</span> arr_map = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>].map(<span class="function"><span class="params">items</span> =></span> items + <span class="number">1</span>);</span><br><span class="line">   l(arr_map);</span><br><span class="line">   <span class="comment">//(4) [2, 3, 4, 5]</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>和 <code>sort</code> 结合，进行从小到大排序</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr_sort = [<span class="number">100</span>,<span class="number">5</span>,<span class="number">74</span>,<span class="number">998</span>].sort(<span class="function">(<span class="params">a,b</span>) =></span> a-b);</span><br><span class="line">   l(arr_sort);</span><br><span class="line">   <span class="comment">//(4) [5, 74, 100, 998]</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="与-this-的联系"><a href="#与-this-的联系" class="headerlink" title="与 this 的联系"></a>与 this 的联系</h2><p>用了箭头函数，那么 this 指向的就是对象，而不是谁调用就指谁了</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//看这个例子</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f8</span>(<span class="params"></span>) </span>{</span><br><span class="line">       setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span><br><span class="line">       },<span class="number">1000</span>)</span><br><span class="line">   }</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f8_jiantou</span>(<span class="params"></span>) </span>{</span><br><span class="line">       setTimeout( <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span><br><span class="line">       },<span class="number">4000</span>)</span><br><span class="line">       <span class="comment">//当定时器的函数体扩回后，定时器又重新是windows的了</span></span><br><span class="line">       <span class="comment">//当定时器的函数体扩回前，定时器是一直指向obj_f8的</span></span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> obj_f8 = {</span><br><span class="line">       name:<span class="string">"f8Name"</span></span><br><span class="line">   };</span><br><span class="line">   f8.call(obj_f8);</span><br><span class="line">   <span class="comment">//Window {parent: Window, postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, …}</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//这里把 obj_f8 的指针给了f8_jiantou，那么定时器里的this 就指向obj_f8</span></span><br><span class="line">   f8_jiantou.call(obj_f8);</span><br><span class="line">   <span class="comment">//{name: "f8Name"}</span></span><br></pre></td></tr></tbody></table></figure></div><p>再来一个例子慢慢理解一下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span> (<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">           <span class="keyword">return</span> <span class="function"><span class="params">()</span> =></span>{</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> foo1 = foo.call({<span class="attr">id</span>:<span class="string">"一"</span>});</span><br><span class="line">   <span class="built_in">console</span>.log(foo1);</span><br><span class="line">   <span class="comment">/*() => {</span></span><br><span class="line"><span class="comment">           return () =>{</span></span><br><span class="line"><span class="comment">               console.log(this.id);</span></span><br><span class="line"><span class="comment">           }</span></span><br><span class="line"><span class="comment">       }*/</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> foo2 = fun1.call({<span class="attr">id</span>:<span class="string">"二"</span>});</span><br><span class="line">   <span class="built_in">console</span>.log(foo2);</span><br><span class="line">   <span class="comment">/*() =>{</span></span><br><span class="line"><span class="comment">               console.log(this.id);</span></span><br><span class="line"><span class="comment">           }*/</span></span><br><span class="line"></span><br><span class="line">   foo2();</span><br><span class="line">   <span class="comment">//一</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li><p>不能使用箭头函数实例化对象了</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> F = <span class="function"><span class="params">()</span> =></span>{</span><br><span class="line"></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> f = <span class="keyword">new</span> F;</span><br><span class="line">   f();</span><br><span class="line">   <span class="comment">//Uncaught TypeError: F is not a constructor</span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>不能用 arguments 获取传来的参数了</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*3.不能使用arguments*/</span></span><br><span class="line">   <span class="keyword">var</span> fun3 = <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">   };</span><br><span class="line">   fun3(<span class="number">123</span>);</span><br><span class="line">   <span class="comment">//Uncaught ReferenceError: arguments is not defined</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="处理错误"><a href="#处理错误" class="headerlink" title="处理错误"></a>处理错误</h1><ul><li>一般由 <code>try</code>、<code>catch</code>、<code>finally</code>、<code>throw</code> 几个构成</li><li><code>try</code>：尝试执行代码，这里遇到的第一个错误会带到 <code>catch</code> 中</li><li><code>catch</code>：处理错误，可以把错误吞并掉，从而避免卡住浏览器</li><li><code>finally</code>：无论 <code>try</code> 中出错与否，都会执行</li><li><code>throw</code>：抛尸，比方说 <code>throw new error("你输错了");</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">< body></span><br><span class="line">    < h3>请输入<span class="number">6</span>~<span class="number">100</span>< <span class="regexp">/h3></span></span><br><span class="line"><span class="regexp">    < input type="text" id="inp"></span></span><br><span class="line"><span class="regexp">    < button id="btn">这是一个测试< /</span>button></span><br><span class="line">< <span class="regexp">/body></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">< script></span></span><br><span class="line"><span class="regexp">    var btn = document.querySelector("#btn");</span></span><br><span class="line"><span class="regexp">    var inp = document.querySelector("#inp");</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/尝试执行代码</span></span><br><span class="line"><span class="regexp">    btn.onclick = function () {</span></span><br><span class="line"><span class="regexp">        try{</span></span><br><span class="line"><span class="regexp">            if(inp.value <  6){</span></span><br><span class="line"><span class="regexp">                throw new error("你输错了");</span></span><br><span class="line"><span class="regexp">            }</span></span><br><span class="line"><span class="regexp">        }catch (err) {</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/try里遇到第一个错误之后会携带错误信息跳到catch里</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/会把error吃掉，不会卡住浏览器，会继续渲染</span></span><br><span class="line"><span class="regexp">            console.log(err);</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/处理错误</span></span><br><span class="line"><span class="regexp">            inp.value = '';</span></span><br><span class="line"><span class="regexp">        }finally {</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/不管有没有错误都要执行</span></span><br><span class="line"><span class="regexp">            console.log("吃瓜群众")</span></span><br><span class="line"><span class="regexp">        }</span></span><br><span class="line"><span class="regexp">    }</span></span><br><span class="line"><span class="regexp">< /</span>script></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="数据结构：set"><a href="#数据结构：set" class="headerlink" title="数据结构：set"></a>数据结构：set</h1><p>这个数据结构的特点是：<strong>元素不会重复</strong><br>它没有下标，没有所谓的 length 长度</p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><ul><li>重复元素的判断跟 <code>===</code> 差不多，不同的是 <code>NaN</code>，如果有两个 <code>NaN</code>，他会认成一个，也就是书面一样</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([NaN,NaN]);</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(1) {<span class="literal">NaN</span>}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([0,-0]);</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(1) {<span class="number">0</span>}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([1,"1"]);</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(2) {<span class="number">1</span>, <span class="string">"1"</span>}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h2><ul><li>用 <code>set.size</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([1,1,1,2,2,3,3,3,4,5,6,"5",NaN,NaN]);</span><br><span class="line">   console.log(<span class="keyword">set</span>.size);</span><br><span class="line">   //8</span><br><span class="line">   </span><br><span class="line">   console.log(<span class="keyword">set</span>.length);</span><br><span class="line">   //undefined</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h2 id="增加元素"><a href="#增加元素" class="headerlink" title="增加元素"></a>增加元素</h2><ul><li>用 <code>set.add()</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([]);</span><br><span class="line">   <span class="keyword">set</span>.add("8848钛金手机");</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(1) {<span class="string">"8848钛金手机"</span>}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="删元素"><a href="#删元素" class="headerlink" title="删元素"></a>删元素</h2><ul><li>用 <code>set.delete()</code> 删除元素，返回布尔值，表示成功与否</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set(["8848钛金手机"]);</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(1) {<span class="string">"8848钛金手机"</span>}</span><br><span class="line"></span><br><span class="line">   <span class="keyword">set</span>.delete("8848钛金手机");</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(0) {}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h2><ul><li>用 <code>set.has("");</code> 查找元素，返回布尔值表示，true 为存在</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set(["8848钛金手机"]);</span><br><span class="line"></span><br><span class="line">   console.log(<span class="keyword">set</span>.has("8848钛金手机"));;</span><br><span class="line">   //true</span><br></pre></td></tr></tbody></table></figure></div><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><p>遍历可以用如下的方法</p><ul><li>用 <code>Array.from(set)</code></li><li>结构解析<code>[...set]</code></li><li><code>forEach</code> 循环</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> set1 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])</span><br><span class="line">   <span class="comment">/*只要有遍历器接口的都可以用forOf遍历*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(set1));</span><br><span class="line">   <span class="comment">//(4) [1, 2, 3, 4]</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log([...set1]);</span><br><span class="line">   <span class="comment">//(4) [1, 2, 3, 4]</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set(["甲","乙","丙","丁"]);</span><br><span class="line">   <span class="keyword">set</span>.forEach((item) => console.log(item));</span><br><span class="line">   //甲</span><br><span class="line">   //乙</span><br><span class="line">   //丙</span><br><span class="line">   //丁</span><br></pre></td></tr></tbody></table></figure></div><h2 id="清空"><a href="#清空" class="headerlink" title="清空"></a>清空</h2><ul><li>用 <code>set.clear();</code> 来清空</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set(["8848钛金手机"]);</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(1) {<span class="string">"8848钛金手机"</span>}</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">set</span>.clear();</span><br><span class="line">   console.log(<span class="keyword">set</span>);</span><br><span class="line">   //Set(0) {}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="曲线救国实现-map-方法"><a href="#曲线救国实现-map-方法" class="headerlink" title="曲线救国实现 map 方法"></a>曲线救国实现 map 方法</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">set</span> = new Set([1,1,2,2,3,3,4,4,5,5]);</span><br><span class="line">   //先把<span class="keyword">set</span>结构解析成数组，然后用数组的map</span><br><span class="line">   var map = new Set([...<span class="keyword">set</span>].map(item => item + 10));</span><br><span class="line">   console.log(map);</span><br><span class="line">   //Set(5) {<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><p>用 set 的特性啊，没有重复的元素<br>想得到么小伙子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log([...new <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])]);</span><br><span class="line">   <span class="comment">//(3) [1, 2, 3]</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="求两个-set-元素的交集"><a href="#求两个-set-元素的交集" class="headerlink" title="求两个 set 元素的交集"></a>求两个 set 元素的交集</h2><p>关键，用过滤器 <code>filter</code>，他会保留返回值是 <code>true</code> 的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> set1 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>]);</span><br><span class="line">   <span class="keyword">let</span> set2 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,]);</span><br><span class="line">   <span class="keyword">let</span> result_jiaoji = [...set1].filter(<span class="function"><span class="params">items</span> =></span> set2.has(items));</span><br><span class="line">   <span class="built_in">console</span>.log(result_jiaoji);</span><br><span class="line">   <span class="comment">//(4) [1, 2, 5, 9]</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="WeakSet"><a href="#WeakSet" class="headerlink" title="WeakSet"></a>WeakSet</h1><ul><li><p>只能添加 Object 的 set</p></li><li><p>WeakSet 不允许被循环</p></li><li><p>WeakSet 里面放节点-防止内存泄露-JC</p></li><li><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weakset = <span class="keyword">new</span> <span class="built_in">WeakSet</span>();</span><br><span class="line">   <span class="keyword">var</span> <span class="keyword">set</span> = new Set([1]);</span><br><span class="line">   var obj = {</span><br><span class="line">       name:<span class="string">'1'</span></span><br><span class="line">   };</span><br><span class="line">   <span class="comment">//添加一个对象</span></span><br><span class="line">   weakset.add(obj);</span><br><span class="line">   <span class="built_in">console</span>.log(weakset);</span><br><span class="line">   <span class="comment">//WeakSet {{…}}</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果想要添加一个数字，他会报错</span></span><br><span class="line">   weakset.add(<span class="number">1</span>);</span><br><span class="line">   <span class="comment">//Uncaught TypeError: Invalid value used in weak set</span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>如果想添加个数组</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weakset = <span class="keyword">new</span> <span class="built_in">WeakSet</span>();</span><br><span class="line">   weakset.add([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">2</span>]]);</span><br><span class="line">   <span class="built_in">console</span>.log(weakset);</span><br><span class="line">   <span class="comment">//WeakSet {Array(2)}</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="数据类型-Symbol"><a href="#数据类型-Symbol" class="headerlink" title="数据类型 Symbol"></a>数据类型 Symbol</h1><p>ES 6 中又新添加了个数据类型</p><ul><li>他的值 <strong>独一无二</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>(<span class="string">"这里是描述s1"</span>);</span><br><span class="line">   <span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>(<span class="string">"这里是描述s2"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log((s1 == s2));</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log((<span class="keyword">typeof</span> s1));</span><br><span class="line">   <span class="comment">//symbol</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//console.log(s1 + "1");</span></span><br><span class="line">   <span class="comment">//Uncaught TypeError: Cannot convert a Symbol value to a string</span></span><br><span class="line">   <span class="comment">//不能隐式转换，能显示转换</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log((s1.toString() + <span class="string">'1'</span>));</span><br><span class="line">   <span class="comment">//Symbol(这里是描述s1)1</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>建议放在对象中做属性名（因为它的特性–永远不会重复）</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">const</span> obj = {</span><br><span class="line">       [s1]:<span class="string">"string1"</span>,</span><br><span class="line">       [s2]:<span class="string">"string2"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="built_in">console</span>.log(obj[s1]);</span><br><span class="line">   <span class="comment">//string1</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(obj[s2]);</span><br><span class="line">   <span class="comment">//string2</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>用 <code>Object.keys()</code> 是拿不出来 Symbol 的，根据这个特性，可以伪装成私有属性，<code>for in</code> 循环更是白扯，啥都不输出</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">const</span> obj = {</span><br><span class="line">       [s1]:<span class="string">"string1"</span>,</span><br><span class="line">       [s2]:<span class="string">"string2"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">let</span> x <span class="keyword">in</span> obj){</span><br><span class="line">       <span class="built_in">console</span>.log(x);</span><br><span class="line">       <span class="comment">//没用，啥都不输出</span></span><br><span class="line">   }</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(obj));</span><br><span class="line">   <span class="comment">//(2) [Symbol(), Symbol()]</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h2><p>它有自己的方法 <code>Object.getOwnPropertySymbols(obj)</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>();</span><br><span class="line">   <span class="keyword">const</span> obj = {</span><br><span class="line">       [s1]:<span class="string">"string1"</span>,</span><br><span class="line">       [s2]:<span class="string">"string2"</span></span><br><span class="line">   };</span><br><span class="line"></span><br><span class="line">   <span class="comment">//这个可以拿出来以Symbol为key的</span></span><br><span class="line">   <span class="built_in">console</span>.log(obj[<span class="built_in">Object</span>.getOwnPropertySymbols(obj)[<span class="number">0</span>]]);</span><br><span class="line">   <span class="comment">//string1</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="Symbol-for"><a href="#Symbol-for" class="headerlink" title="Symbol.for()"></a>Symbol.for()</h2><blockquote><p>Q:有人就想问，Symbol 既然是独一无二的，真的就不能重用么？</p></blockquote><p>引进新的方法：<code>Symbol.for();</code> 只要描述相同的话，那么他俩就是相同的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="built_in">Symbol</span>(<span class="string">"a"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//重用,第一个Symbol.for("b")相当于注册</span></span><br><span class="line">   <span class="keyword">let</span> b = <span class="built_in">Symbol</span>.for(<span class="string">"b"</span>);</span><br><span class="line">   <span class="comment">//之后Symbol.for("b")是寻找，并且把b的指针给c</span></span><br><span class="line">   <span class="keyword">let</span> c = <span class="built_in">Symbol</span>.for(<span class="string">"b"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log((a == b));</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log((b == c));</span><br><span class="line">   <span class="comment">//true</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="取-‘-描述-’"><a href="#取-‘-描述-’" class="headerlink" title="取 ‘ 描述 ’"></a>取 ‘ 描述 ’</h2><ul><li><code>symbol.description</code> 可以拿出属性</li><li><code>Symbol.keyFor(b)</code> 只能拿出 <code>Symbol.for("")</code> 设定的属性</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="built_in">Symbol</span>(<span class="string">"a"</span>);</span><br><span class="line">   <span class="keyword">let</span> b = <span class="built_in">Symbol</span>.for(<span class="string">"b"</span>);</span><br><span class="line">   <span class="keyword">let</span> c = <span class="built_in">Symbol</span>.for(<span class="string">"b"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(a.description);</span><br><span class="line">   <span class="comment">//a</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(b.description);</span><br><span class="line">   <span class="comment">//b</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//主要拿Symbol.for的description的</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.keyFor(b));</span><br><span class="line">   <span class="comment">//b</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Symbol</span>.keyFor(a));</span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="魔术字符"><a href="#魔术字符" class="headerlink" title="魔术字符"></a>魔术字符</h1><p>就是出现频率贼 JB 高，改起来贼 JB 费劲，一改就要改一大堆的的字符串就叫做魔术字符</p><blockquote><p>官方说法：我们把 <strong>耦合性极强，复用性极差，出现频率极高</strong> 的字符串成为魔术字符</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例子</span></span><br><span class="line"><span class="comment">//这里的字符串'6'  就称之为魔术字符</span></span><br><span class="line"><span class="comment">//这是判断语句少的情况，多了的话改起来就费劲了</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">mon</span>) </span>{</span><br><span class="line">       <span class="keyword">if</span>(mon == <span class="string">"6"</span>){</span><br><span class="line"></span><br><span class="line">       }<span class="keyword">else</span> <span class="keyword">if</span>(mon > <span class="string">"6"</span>){</span><br><span class="line"></span><br><span class="line">       }<span class="keyword">else</span> <span class="keyword">if</span>(mon <  <span class="string">"6"</span>){</span><br><span class="line"></span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>那解决的方法蛮多的，用个变量代替它不就好了。要改的话，就改变量的值就好了</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这样改呗</span></span><br><span class="line"><span class="keyword">const</span> obj = {</span><br><span class="line">       key:<span class="string">"value"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">mon</span>) </span>{</span><br><span class="line">       <span class="keyword">if</span>(mon == obj.key){</span><br><span class="line"></span><br><span class="line">       }<span class="keyword">else</span> <span class="keyword">if</span>(mon > obj.key){</span><br><span class="line"></span><br><span class="line">       }<span class="keyword">else</span> <span class="keyword">if</span>(mon <  obj.key){</span><br><span class="line"></span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure></div><h1 id="深入理解-Object-和-Map"><a href="#深入理解-Object-和-Map" class="headerlink" title="深入理解 Object 和 Map"></a>深入理解 Object 和 Map</h1><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><ul><li>对象结构来源于：hash 结构</li><li>对象的 key 是会自动 <code>toString</code> 的</li><li>是 <strong>string - value</strong> 的组合<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2></li><li>map 的 key 值没有 toString，很自由，想放什么放什么</li><li>是 <strong>value - value</strong> 的组合</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">   map.set({<span class="attr">name</span>:<span class="number">1</span>},<span class="number">2</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(map.get({<span class="attr">name</span>:<span class="number">1</span>}));</span><br><span class="line">   <span class="comment">//undefined</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//这里的undefined是因为 </span></span><br><span class="line">   <span class="comment">//map.get({name:1}) 中，又新建了一个{name:1}</span></span><br><span class="line">   <span class="comment">//这个跟set里的对象，虽然内容一样，但是指针不同</span></span><br><span class="line"><span class="comment">//相当于</span></span><br><span class="line"><span class="keyword">var</span> obj_kong = {};</span><br><span class="line">   <span class="built_in">console</span>.log((obj_kong == {}));</span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端17_JS】ES 6：新的变量声明 let 、对象冻结、解构赋值、暂时性死区 TDZ、惰性求值、模板字符串</title>
      <link href="p/43290.html"/>
      <url>p/43290.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>2015年6月17日，ECMAScript 6发布正式版本，即ECMAScript 2015。</li><li>ES6 是继 ES5 之后的一次主要改进，ES6 增添了许多必要的特性，例如：模块和类，以及一些实用特性，例如Maps、Sets、Promises、生成器（Generators）等。</li><li>尽管 ES6 做了大量的更新，但是它依旧完全向后兼容以前的版本，标准化委员会决定避免由不兼容版本语言导致的“web体验破碎”。结果是，所有老代码都可以正常运行，整个过渡也显得更为平滑，但随之而来的问题是，开发者们抱怨了多年的老问题依然存在。</li></ul><hr><h1 id="let-声明变量"><a href="#let-声明变量" class="headerlink" title="let 声明变量"></a>let 声明变量</h1><p>let 是新的变量声明</p><ul><li>如果声明的位置是在代码块中，那么变量只能在代码块里有用</li><li>代码块，类似于 <code>if</code>、<code>for 循环</code> 等等。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>){</span><br><span class="line">       <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">   }</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Uncaught ReferenceError: a is not defined</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="变量不提升"><a href="#变量不提升" class="headerlink" title="变量不提升"></a>变量不提升</h2><p>不像 <code>var</code> ，这个没有变量提升<br>所以，必须先声明，再使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line">   <span class="keyword">let</span> b;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Uncaught ReferenceError: Cannot access 'b' before initialization</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="暂时性死区-TDZ"><a href="#暂时性死区-TDZ" class="headerlink" title="暂时性死区 TDZ"></a>暂时性死区 TDZ</h2><p>全称：temporal dead zone</p><p>声明变量之前不允许使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>){</span><br><span class="line">       <span class="comment">/*TDZ start*/</span></span><br><span class="line">       <span class="keyword">typeof</span> temp;</span><br><span class="line">       <span class="keyword">let</span> temp;<span class="comment">/* TDZ end*/</span></span><br><span class="line"></span><br><span class="line">       <span class="built_in">console</span>.log(temp);</span><br><span class="line">   }</span><br><span class="line">   </span><br><span class="line"><span class="comment">//Uncaught ReferenceError: Cannot access 'temp' before initialization</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>注意 TDZ 的区域，从代码块开始，到定义完变量之后，这一小段是 TDZ，</li><li>引申：在 es6 中 <code>typeof</code> 不是绝对安全了</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多看代码，加深理解</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">1</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(c);</span><br><span class="line">       <span class="keyword">if</span>(<span class="literal">true</span>){</span><br><span class="line">           <span class="comment">//这个c只是在if中有效</span></span><br><span class="line">           <span class="keyword">let</span> c = <span class="number">10</span>;</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   test()</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跟上一个对比</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">1</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(c);</span><br><span class="line">       <span class="keyword">if</span>(<span class="literal">true</span>){</span><br><span class="line">           <span class="comment">//这里有变量提升</span></span><br><span class="line">          <span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   test()</span><br><span class="line"></span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个要注意一下</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//条件是false</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="literal">false</span>){</span><br><span class="line">           <span class="comment">/*先进去if中探索一下是否有 var 声明，然后再去判断语句*/</span></span><br><span class="line">           <span class="comment">/*这个if在刚开始还是进去的，遇到var也还会提升，只是语句在执行的时候，没有进入if*/</span></span><br><span class="line">           <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   test();</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>这里有个情况</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x;</span><br><span class="line"><span class="comment">//这把{x}当作了代码块，解决这个问题的话，整体加圆括号</span></span><br><span class="line">   {x} = {<span class="attr">x</span>:<span class="number">1</span>}</span><br><span class="line">   <span class="built_in">console</span>.log(x);</span><br><span class="line">   <span class="comment">//Uncaught SyntaxError: Unexpected token '='</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解决方法</span></span><br><span class="line"><span class="keyword">let</span> x;</span><br><span class="line">   <span class="comment">//{x} = {x:1}</span></span><br><span class="line">   ({x} = {<span class="attr">x</span>:<span class="number">1</span>});</span><br><span class="line">   <span class="built_in">console</span>.log(x);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="const-静态变量-（常量-）"><a href="#const-静态变量-（常量-）" class="headerlink" title="const 静态变量 （常量*）"></a>const 静态变量 （常量*）</h2><p>有如下属性</p><ul><li>不允许重复声明</li><li>声明的时候赋值</li><li>声明之后不允许修改</li><li>跟 <code>let</code> 的作用域一个德行，都是代码块里有效</li></ul><h3 id="实质"><a href="#实质" class="headerlink" title="实质"></a>实质</h3><ul><li>const 实际上保证的并不是变量的值不得改动，而是变量指向的那个内存地址不得改动</li><li>对于 <strong>简单类型</strong> 的数据（数值，字符串，布尔值），存在 <strong>栈</strong> 中，值就保存在变量指向的那个内存地址。</li><li>对于 <strong>复杂对象</strong>（主要是对象和数组），变量指向的内存地址存在 <strong>堆</strong> 中，<strong>保存的是指向</strong>，指向的数据怎么变，它管不到<h3 id="引申"><a href="#引申" class="headerlink" title="引申"></a>引申</h3></li><li>栈：大小固定，自动分配，能由系统自动释放掉</li><li>堆：可变大小，不能自动释放掉</li></ul><hr><h1 id="对象冻结"><a href="#对象冻结" class="headerlink" title="对象冻结"></a>对象冻结</h1><p>用到了 <code>Object.freeze();</code> 方法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = <span class="built_in">Object</span>.freeze(</span><br><span class="line">       {<span class="attr">name</span>:<span class="string">"张三"</span>}</span><br><span class="line">   );</span><br></pre></td></tr></tbody></table></figure></div><ul><li>建议前面写上 <code>const</code>，因为如果你这样，之后也能改变指向，如果你用了 <code>const</code>，就改变不了了</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用var，声明不变的量，也不安全</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.freeze(</span><br><span class="line">       {<span class="attr">name</span>:<span class="string">"张三"</span>}</span><br><span class="line">   );</span><br><span class="line">   obj = {};</span><br><span class="line">   <span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//{}</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用const声明</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="built_in">Object</span>.freeze(</span><br><span class="line">       {<span class="attr">name</span>:<span class="string">"张三"</span>}</span><br><span class="line">   );</span><br><span class="line">   obj = {};</span><br><span class="line">   <span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Uncaught TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>冻结之后，如果修改的话，是不会报错的，但是也不会修改</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = <span class="built_in">Object</span>.freeze(</span><br><span class="line">        {<span class="attr">name</span>:<span class="string">"张三"</span>}</span><br><span class="line">    );</span><br><span class="line">    obj[<span class="string">"name"</span>] = <span class="string">"小子"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//{name: "张三"}</span></span><br></pre></td></tr></tbody></table></figure></div><hr><hr><h1 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h1><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul><li>简单的解构赋值如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a,b,c] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(b);</span><br><span class="line">   <span class="built_in">console</span>.log(c);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1</span></span><br><span class="line">   <span class="comment">//2</span></span><br><span class="line">   <span class="comment">//3</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>也可以用来当作函数的实参、形参，而且 <strong>解构赋值</strong> 有个好处，<strong>可以传 <code>""</code>，<code>undefined</code>，<code>null</code>，<code>false</code> 这些东西。</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例子1：普通给默认值的方法</span></span><br><span class="line"><span class="comment">//如果你传的值是undefined等，他是走默认值0的，而我们希望走的是undefined</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_bad</span>(<span class="params">val</span>) </span>{</span><br><span class="line">       val = val || <span class="number">0</span>;</span><br><span class="line">       <span class="built_in">console</span>.log(val);</span><br><span class="line">   }</span><br><span class="line">   test_bad(<span class="string">""</span>);</span><br><span class="line">   test_bad(<span class="literal">undefined</span>);</span><br><span class="line">   test_bad(<span class="literal">null</span>);</span><br><span class="line">   test_bad(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//0</span></span><br><span class="line">   <span class="comment">//0</span></span><br><span class="line">   <span class="comment">//0</span></span><br><span class="line">   <span class="comment">//0</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例子1的对比，优化</span></span><br><span class="line"><span class="comment">//如果你传来的不是严格的 undefined，那么就会走默认值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_good</span>(<span class="params">[a,b,c = <span class="number">0</span>,d = <span class="number">4</span>,e]</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br><span class="line">       <span class="built_in">console</span>.log(b);</span><br><span class="line">       <span class="built_in">console</span>.log(c);</span><br><span class="line">       <span class="built_in">console</span>.log(d);</span><br><span class="line">       <span class="built_in">console</span>.log(e);</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   test_good([<span class="literal">false</span>,<span class="literal">null</span>,<span class="string">""</span>,<span class="literal">undefined</span>,<span class="string">"undefined"</span>]);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   <span class="comment">//null</span></span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   <span class="comment">//4</span></span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="…arr"><a href="#…arr" class="headerlink" title="…arr"></a>…arr</h2><p>先来一个例子，慢慢理解一下</p><ul><li><code>...arr</code> 一定要保证是在后面，因为它只能解析从某个地方到 <strong>数组尾部</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不能这样：let[...arr,a] = ["ar",2,3,4];</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span>[a,...arr] = [<span class="string">"ar"</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(arr);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//ar</span></span><br><span class="line">   <span class="comment">//(3) [2, 3, 4]</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>如果没有值得话，就会生成一个空数组</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span>[a,b,...arr] = [<span class="string">"ar"</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(arr)</span><br><span class="line">    <span class="comment">//Array(0)</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>也可以遍历字符串</li><li>可以设置默认值，如果严格等于undefined，那么就走默认值（底层是 <code>===</code> ）</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//严格等于 undefined，走默认的值</span></span><br><span class="line"><span class="keyword">let</span> [a = <span class="number">100</span>,b = <span class="string">"poi"</span>] = [<span class="literal">undefined</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(b);</span><br><span class="line">   <span class="comment">//100</span></span><br><span class="line">   <span class="comment">//poi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//不严格等于 undefined ，走赋值</span></span><br><span class="line"><span class="keyword">let</span> [a = <span class="number">100</span>,b = <span class="string">"poi"</span>] = [<span class="string">"undefined"</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(b);</span><br><span class="line">   <span class="comment">//undefined</span></span><br><span class="line">   <span class="comment">//poi</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//再来一个引申</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">undefined</span>;</span><br><span class="line">   <span class="keyword">var</span> b = <span class="string">"undefined"</span>;</span><br><span class="line">   <span class="comment">//0 == 1</span></span><br><span class="line">   <span class="built_in">console</span>.log(a == b);</span><br><span class="line">   <span class="comment">//两等都不行了，三等就更没戏了</span></span><br><span class="line">   <span class="built_in">console</span>.log(a === b);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>还能承接传来的参数，这个叫做 <code>rest</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">...arr</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(arr);</span><br><span class="line">   }</span><br><span class="line">   test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//(4) [1, 2, 3, 4]</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="…-数组拓展运算符"><a href="#…-数组拓展运算符" class="headerlink" title="…[] 数组拓展运算符"></a>…[] 数组拓展运算符</h2><ul><li>这个就相当于 <code>rest</code> 的逆运算，一个是聚合，一个是拆散，<code>...[1,2,3]</code> 会被拆成 <code>1 2 3</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f1 = <span class="function">(<span class="params">a,b,c,d</span>) =></span> {</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br><span class="line">       <span class="built_in">console</span>.log(b);</span><br><span class="line">       <span class="built_in">console</span>.log(c);</span><br><span class="line">       <span class="built_in">console</span>.log(d);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//1</span></span><br><span class="line">       <span class="comment">//2</span></span><br><span class="line">       <span class="comment">//3</span></span><br><span class="line">       <span class="comment">//4</span></span><br><span class="line">   };</span><br><span class="line">   f1(<span class="number">1</span>,...[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]);</span><br></pre></td></tr></tbody></table></figure></div><ul><li>这个功能就很强大了，可以跟选择器结合使用</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span>></span>1<span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span>></span>2<span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span>></span>3<span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    console.log(...document.querySelectorAll("div"));</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><ul><li>而且与 <code>rest</code> 不同的是，<strong>可以不用放到最后</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.解析的时候和rest不同的是，可以不用放到最后</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">a,b,c,d,e</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(a,b,c,d,e);</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">//[2,3,4]放到了参数们的中间，而rest必须放到后面才能正常使用</span></span><br><span class="line">   arr1 = [<span class="number">1</span>,...[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],<span class="number">5</span>];</span><br><span class="line">   <span class="comment">//es5传参</span></span><br><span class="line">   f1.apply(<span class="literal">null</span>,arr1);</span><br><span class="line">   <span class="comment">//1,2,3,4,5</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">//es6</span></span><br><span class="line">   f1(...arr1);</span><br><span class="line">   <span class="comment">//1,2,3,4,5</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="找最大值"><a href="#找最大值" class="headerlink" title="找最大值"></a>找最大值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1_1 = [<span class="number">10</span>,<span class="number">2</span>,<span class="number">4654</span>,<span class="number">789</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">131</span>,<span class="number">32</span>,];</span><br><span class="line"></span><br><span class="line">   <span class="comment">//es5的写法</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,arr1_1));</span><br><span class="line">   <span class="comment">//4654</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//es6的写法</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(...arr1_1));</span><br><span class="line">   <span class="comment">//4654</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="与三目运算符结合"><a href="#与三目运算符结合" class="headerlink" title="与三目运算符结合"></a>与三目运算符结合</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">2</span>;</span><br><span class="line">   <span class="keyword">var</span> arr2 = [</span><br><span class="line">       ...(x == <span class="number">1</span>?[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]),</span><br><span class="line">       <span class="string">"x"</span></span><br><span class="line">   ];</span><br><span class="line">   <span class="built_in">console</span>.log(arr2);</span><br><span class="line">   <span class="comment">//(4) [4, 5, 6, "x"]</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="空"><a href="#空" class="headerlink" title="空"></a>空</h3><p>空的话，不会报错，控制台里就没有它的打印信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr3 = [];</span><br><span class="line">   <span class="built_in">console</span>.log(...arr3);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="模拟深复制"><a href="#模拟深复制" class="headerlink" title="模拟深复制"></a>模拟深复制</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a3 = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">   <span class="comment">//2.模拟深复制</span></span><br><span class="line">   <span class="keyword">const</span> a4 = [...a3];</span><br><span class="line">   <span class="built_in">console</span>.log(a4);</span><br><span class="line">   <span class="comment">//(3) [3, 4, 5]</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="模拟-concat"><a href="#模拟-concat" class="headerlink" title="模拟 concat"></a>模拟 concat</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr3_1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">   <span class="keyword">var</span> arr3_2 = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(arr3_1.concat(arr3_2));</span><br><span class="line">   <span class="comment">//(6) [1, 2, 3, 4, 5, 6]</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log([...arr3_1,...arr3_2]);</span><br><span class="line">   <span class="comment">//(6) [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="结构解析"><a href="#结构解析" class="headerlink" title="结构解析"></a>结构解析</h2><ul><li>对象解析当中根据 <code>key</code> 来解析</li><li>let {匹配模式：变量}</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> {c,a}  = {<span class="attr">b</span>:<span class="string">"6666"</span>,<span class="attr">a</span>:<span class="string">"555"</span>};</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(c);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//555</span></span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>数组相当于一个特殊的对象，可以用 <strong>下标</strong> 当作 key 值去解析</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*数组的结构解析*/</span></span><br><span class="line">   <span class="keyword">var</span> arr = [<span class="string">"dsada"</span>,<span class="string">"ewq"</span>,<span class="string">'zxcvc'</span>,<span class="number">16</span>,<span class="number">18</span>,<span class="string">"135"</span>];</span><br><span class="line">   <span class="keyword">let</span> {<span class="number">1</span>:fir,[arr.length<span class="number">-1</span>]:last} =  arr;</span><br><span class="line">   <span class="built_in">console</span>.log(fir);</span><br><span class="line">   <span class="built_in">console</span>.log(last);</span><br><span class="line">   <span class="comment">//ewq</span></span><br><span class="line">   <span class="comment">//135</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//目的：我想解析shuai</span></span><br><span class="line">   <span class="keyword">var</span> obj = {</span><br><span class="line">       foo:[<span class="string">'ufo'</span>,{<span class="attr">sss</span>:<span class="string">"shuai"</span>}]</span><br><span class="line">   };</span><br><span class="line">   <span class="comment">/*结构解析*/</span></span><br><span class="line">   <span class="comment">/*第一步:等号左右类型要一样*/</span></span><br><span class="line">   <span class="keyword">let</span> {} = obj;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*第二步：添加匹配模式foo*/</span></span><br><span class="line">   <span class="keyword">let</span> {foo} = obj;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*第三步,这个时候b就代表了对象，数组的话就不需要匹配模式，随便一个符号占着茅坑找位置就行*/</span></span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">foo</span>:[a,b]} = obj</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*第四步：把b变成括号，然后再用匹配模式sss，来进入对象中*/</span></span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">foo</span>:[a,{sss}]} = obj;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*第五步：你可以给sss赋值变量l，然后输出l就可以了*/</span></span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">foo</span>:[a,{<span class="attr">sss</span>:l}]} = obj;</span><br><span class="line">   <span class="built_in">console</span>.log(l);</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//觉得你行了？来试试这个，少年，解析girl</span></span><br><span class="line"><span class="keyword">var</span> sister = [{<span class="attr">age</span>:[<span class="number">18</span>,{<span class="attr">sex</span>:<span class="string">"girl"</span>}]}];</span><br></pre></td></tr></tbody></table></figure></div><ul><li>加深理解接着玩 ，console 也能解析</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*console是个对象，他有log方法，我把log方法解析出来*/</span></span><br><span class="line">   <span class="keyword">let</span> {log} = <span class="built_in">console</span>;</span><br><span class="line">   log(<span class="string">"111"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//111</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*对象 = 对象，把 math 对象中的属性承接出来，放到 PI 中，因为 PI 是属性值，所以打印就好</span></span><br><span class="line"><span class="comment">   * 如果是函数体的话就给参数调用*/</span></span><br><span class="line">   <span class="keyword">const</span> {PI} = <span class="built_in">Math</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(PI);</span><br><span class="line"></span><br><span class="line"><span class="comment">////3.141592653589793</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//let {匹配模式：变量}</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//默认是let {foo:foo} = {foo:"cszsdad"};</span></span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">foo</span>:fooValue} = {<span class="attr">foo</span>:<span class="string">"cszsdad"</span>};</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(fooValue);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//cszsdad</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>结构解析也能分析继承的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Person.prototype.name = <span class="string">"lsl"</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">name</span>:n} = p;</span><br><span class="line">   <span class="built_in">console</span>.log(n);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//lsl</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>理解了之后自己玩了一个比较瑟琴的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给你们答案，不唯一</span></span><br><span class="line"><span class="keyword">var</span> sister = [{<span class="attr">age</span>:[<span class="number">18</span>,{<span class="attr">sex</span>:<span class="string">"girl"</span>}]}];   </span><br><span class="line"><span class="keyword">let</span> [{<span class="attr">age</span>:[a,{<span class="attr">sex</span>:x}]}] = sister;</span><br><span class="line">   <span class="built_in">console</span>.log(x);</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="惰性求值"><a href="#惰性求值" class="headerlink" title="惰性求值"></a>惰性求值</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"this is error"</span>);</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">/*惰性求值*/</span></span><br><span class="line">   <span class="comment">/*如果有值得话，除了undefined，就一直不走默认的*/</span></span><br><span class="line">   <span class="keyword">let</span> [x = f()] = [<span class="number">1</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(x);</span><br><span class="line">   <span class="comment">//1</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"this is error"</span>);</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">//这样就走了默认的</span></span><br><span class="line">   <span class="keyword">let</span> [x = f()] = [<span class="literal">undefined</span>];</span><br><span class="line">   <span class="comment">/*let [x = f()] = [1];*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(x);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//Uncaught Error: this is error</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h1><ul><li>优点：不需要我们拼接变量（原生的不是得用 <code>+</code> 来拼接成很长的句子嘛）</li><li>符号：<code>``</code> (< kbd>TAB< /kbd>上面的那个< kbd>~< /kbd>) </li><li>想在模板字符串中插入变量的话用 <code>${}</code></li><li>还是函数调用的另一种形式</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数调用，括号变成``也可以</span></span><br><span class="line">alert <span class="string">`4`</span>;</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模板字符串的简单使用</span></span><br><span class="line"><span class="keyword">const</span> obj = {</span><br><span class="line">      name:<span class="number">18</span>,</span><br><span class="line">      age:<span class="string">"xiaopang"</span>,</span><br><span class="line">      habit:<span class="string">"sing"</span>,</span><br><span class="line">  };</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">`my name is <span class="subst">${obj.name}</span> ,age is <span class="subst">${a}</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//my name is 18 ,age is xiaopang</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>如果你非要在模板字符串中打出 <code>``</code> 这个符号，那么可以用转义字符 <code>\</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转移字符</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">`\`\``</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(str1);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//``</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>这个还可以插标签，可以进行变量的运算，注意写法、还可以插入方法，而且还会 <strong>解析换行</strong>，你怎样写，就会在页面上解析成相应的样子，包括换行，空格。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//综合应用</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">   <span class="comment">//插入标签，运算，arr.reverse()方法，对象引用</span></span><br><span class="line">   $(<span class="string">"#test"</span>).html(<span class="string">`</span></span><br><span class="line"><span class="string">       < ul></span></span><br><span class="line"><span class="string">           < li style="font-size: <span class="subst">${x + <span class="number">40</span>}</span>px;">1< /li></span></span><br><span class="line"><span class="string">           < li>22\`\`< /li></span></span><br><span class="line"><span class="string">           < li><span class="subst">${arr.reverse()}</span>< /li></span></span><br><span class="line"><span class="string">           < li><span class="subst">${obj.name + x}</span>< /li></span></span><br><span class="line"><span class="string">       < /ul></span></span><br><span class="line"><span class="string">   `</span>)</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20191106212623426.png" data-fancybox="group" data-caption="网页里是这样的" class="fancybox"><img alt="网页里是这样的" title="网页里是这样的" data-src="https://img-blog.csdnimg.cn/20191106212623426.png" src="/img/loading.gif" class="lazyload"></a></p><ul><li>如果当作实参的话，字符串里穿插变量，那么形参中可以接到如下的东西</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xx = <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">var</span> yy = <span class="number">2</span>;</span><br><span class="line">   <span class="keyword">var</span> zz = <span class="number">3</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">show</span> (<span class="params">a,b,c,d,e</span>) </span>{</span><br><span class="line">       <span class="comment">/*这个a是实参中所有字符串的字段，并放到数组中*/</span></span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br><span class="line">       <span class="built_in">console</span>.log(b);</span><br><span class="line">       <span class="built_in">console</span>.log(c);</span><br><span class="line">       <span class="built_in">console</span>.log(d);</span><br><span class="line">       <span class="built_in">console</span>.log(e);</span><br><span class="line">   }</span><br><span class="line">   show <span class="string">`this  <span class="subst">${xx}</span>  is  <span class="subst">${yy}</span> a <span class="subst">${zz}</span>  iu`</span>;</span><br><span class="line">   <span class="comment">//(4) ["this  ", "  is  ", " a ", "  iu", raw: Array(4)]</span></span><br><span class="line">   <span class="comment">//1</span></span><br><span class="line">   <span class="comment">//2</span></span><br><span class="line">   <span class="comment">//3</span></span><br><span class="line">   <span class="comment">//undefined</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">show1</span> (<span class="params">a,...arr</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(a);</span><br><span class="line">       <span class="built_in">console</span>.log(arr);</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">/*如果变量放到了第一个，前面没有字符串，那么a[0]会被解析成空字符串*/</span></span><br><span class="line">   show1 <span class="string">`<span class="subst">${xx}</span>  is  <span class="subst">${yy}</span> a <span class="subst">${zz}</span> this`</span>;</span><br><span class="line">   <span class="comment">//["", "  is  ", " a ", " this", raw: Array(4)]</span></span><br><span class="line">   <span class="comment">//(3) [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解释：</span></span><br><span class="line">   <span class="comment">/*最前面的和最后面的变量，在这里是${xx}和${zz}*/</span></span><br><span class="line">   <span class="comment">//最前面的变量${xx},看它的前面，有字符串那么就拿，如果没有就会拿空</span></span><br><span class="line">   <span class="comment">//最后面的变量${zz},看他的后面，有字符串那么就拿，如果没有就会拿空</span></span><br></pre></td></tr></tbody></table></figure></div><hr></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端16_辅助知识】颜色编译、色彩、网页配色技巧、PS 快捷键</title>
      <link href="p/16128.html"/>
      <url>p/16128.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="颜色编译"><a href="#颜色编译" class="headerlink" title="颜色编译"></a>颜色编译</h1><p>颜色有几种表达方式，分别是</p><ul><li>RGBA:红绿蓝透明度，透明度的值是0~1，0为透明：<code>background-color: rgba(0,0,0,.1);</code></li><li>十六进制 ：<code>#eee</code></li><li>直接写颜色的姓名：<code>background-color: skyblue;</code></li><li>透明 ：<code>opacity: 1;/*透明度，默认是1，ie浏览器不支持*/</code></li></ul><hr><h1 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h1><p>是能引起我们共同的审美愉悦的、最为敏感的形式要素。色彩是最有表现力的要素之一，因为它的性质直接 <strong>影响人们的感情</strong>。丰富多样的颜色可以分成两个大类无彩色系和有彩色系，有彩色系的颜色具有三个基本特性：色相、明度、饱和度。在色彩学上也称为色彩的三大要素或色彩的三属性。</p><h2 id="无彩色系"><a href="#无彩色系" class="headerlink" title="无彩色系"></a>无彩色系</h2><p>无彩色系是指白色、黑色和由白色黑色调合形成的各种深浅不同的灰色<br>无彩色按照一定的变化规律，可以排成一个系列，由白色渐变到浅灰、中灰、深灰到黑色，色度学上称此为黑白系列。</p><h2 id="有彩色系"><a href="#有彩色系" class="headerlink" title="有彩色系"></a>有彩色系</h2><p>三大属性</p><ul><li>色相：色相是指色彩的相貌,是色彩最显著的特征,是不同波长的色彩被感觉的结果。光谱上的红、橙、黄、绿、青、蓝、紫就是七种不同的基本色相。</li><li>明度：明度是指色彩的明暗、深浅程度的差别,它取决于反射光的强弱。它包括两个含义:一是指一种颜色本身的明与暗,二是指不同色相之间存在着明与暗的差别。</li><li>饱和度：也称彩度、艳度、浓度、纯度度，是指 <strong>色彩的纯净程度。</strong></li></ul><hr><h1 id="色彩名词解释"><a href="#色彩名词解释" class="headerlink" title="色彩名词解释"></a>色彩名词解释</h1><h2 id="三原色"><a href="#三原色" class="headerlink" title="三原色"></a>三原色</h2><p><strong>洋红、黄、青</strong>,称之为原色<br>这三种原色颜色纯正、鲜明、强烈，而且这三种原色本身是调不出的,但是它们可以调配出多种色相的色彩。</p><h2 id="间色"><a href="#间色" class="headerlink" title="间色"></a>间色</h2><p>有两个原色相混合得出的色彩，如黄调蓝得绿、蓝调红得紫。</p><h2 id="复色"><a href="#复色" class="headerlink" title="复色"></a>复色</h2><p>将两个间色(如橙与绿、绿与紫)或一个原色与相对应的间色(如红与绿、黄与紫)相混合得出的色彩。复合色包含了三原色的成分,成为色彩纯度较低的含灰色彩。</p><h2 id="对比色"><a href="#对比色" class="headerlink" title="对比色"></a>对比色</h2><p>色相环中相隔120度至150度的任何三种颜色。</p><h2 id="同类色"><a href="#同类色" class="headerlink" title="同类色"></a>同类色</h2><p>同一色相中不同倾向的系列颜色被称为同类色。如黄色中可分为柠檬黄、中黄、橘黄、土黄等,都称之为同类色。</p><h2 id="互补色"><a href="#互补色" class="headerlink" title="互补色"></a>互补色</h2><p>色相环中相隔180度的颜色,被称为互补色。如:红与绿,蓝与橙,黄与紫互为补色。补色相减(如演练配色时,将两种补色颜料涂在白纸的同一点上)时,就成为黑色;补色并列时,会引起强烈对比的色觉,会感到红的更红、绿的更绿,如将补色的饱和度减弱,即能趋向调和。<br>< img width = 80% src = “<a href="https://img-blog.csdnimg.cn/20191031202342607.jpg">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20191031202342607.jpg"></a></p><hr><h1 id="网页配色技巧"><a href="#网页配色技巧" class="headerlink" title="网页配色技巧"></a>网页配色技巧</h1><ul><li>主体色<br>主体色是占网页面积最大的一块颜色，就是你眯起眼睛看到的那块颜色（面积占整体网页的40%-70%）</li><li>辅助色<br>辅助色一般是主体色在色轮的90%以内的近似色，起到变化的作用</li><li>点睛色<br>点睛色一般取主色和辅助色色轮的120%-180%的对比或补色，起到点睛作用</li><li>背景色<br>就是DW中软件的Background，就是在网页上什么也没有的情况下显示的背景的颜色</li></ul><hr><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul><li>< kbd>Ctrl< /kbd> + < kbd>J< /kbd>  复制选取内的内容为新图层</li><li>< kbd>Ctrl< /kbd> + < kbd>D< /kbd> 取消选取</li><li>< kbd>Ctrl< /kbd> + < kbd>ENTER< /kbd> 路径变为选区  </li><li><code>按住空格，拖动鼠标</code>  抓手工具</li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端15_JS】BOM 操作：获取属性、跳转、刷新、前进后退、关闭页面</title>
      <link href="p/52192.html"/>
      <url>p/52192.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="BOM-Window"><a href="#BOM-Window" class="headerlink" title="BOM - Window"></a>BOM - Window</h1><h2 id="获取宽高"><a href="#获取宽高" class="headerlink" title="获取宽高"></a>获取宽高</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.screen.width;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"window.screen.availHeight:"</span> + <span class="built_in">window</span>.screen.availHeight);</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"window.screen.availWidth:"</span> + <span class="built_in">window</span>.screen.availWidth);</span><br></pre></td></tr></tbody></table></figure></div><h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><ul><li><code>assign</code> 可以退回</li><li><code>replace</code> 不可以退回</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">"button"</span>);</span><br><span class="line">   btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>{</span><br><span class="line">       <span class="built_in">window</span>.location.assign(<span class="string">"https://www.bilibili.com/"</span>);</span><br><span class="line">       <span class="comment">/*window.location.replace("https://www.bilibili.com/");*/</span></span><br><span class="line">   };</span><br></pre></td></tr></tbody></table></figure></div><h2 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h2><p>如果参数是 true ，那么就不走缓存</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.reload();</span><br></pre></td></tr></tbody></table></figure></div><h2 id="前进-amp-后退"><a href="#前进-amp-后退" class="headerlink" title="前进 & 后退"></a>前进 & 后退</h2><p> 默认是0，可以添加整数，正数表示前进多少页，负数表示后退多少页</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.history.forward();</span><br><span class="line">   <span class="built_in">window</span>.history.back();</span><br><span class="line">   <span class="built_in">window</span>.history.go();</span><br></pre></td></tr></tbody></table></figure></div><h2 id="关闭页面"><a href="#关闭页面" class="headerlink" title="关闭页面"></a>关闭页面</h2><p>关键字  <code>window.close()</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">"button"</span>);</span><br><span class="line">   btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">window</span>.close();</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端14_存储】保存文件：Cookie、LocalStorage、SessionStorage &amp; 数据库</title>
      <link href="p/8471.html"/>
      <url>p/8471.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="文件保存"><a href="#文件保存" class="headerlink" title="文件保存"></a>文件保存</h1><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><ul><li>特点：占用小，由服务端产生</li><li>大小：均值为 <code>4kb</code> 左右</li><li>用途：用来保存简单的 id 之类的</li><li>生命周期：可设置，不设置的话浏览器生成，而且关闭浏览器就用不了了</li></ul><h2 id="LocalStorage"><a href="#LocalStorage" class="headerlink" title="LocalStorage"></a>LocalStorage</h2><ul><li>特点：</li><li>大小：5mb~10mb</li><li>用法：<br><code>window.localStorage.removeItem(key)</code> 根据关键字删除<br><code>window.localStorage.clear()</code> 删除所有</li><li>用途：京东广告（就是第一次弹出广告，之后就没有了）</li><li>故事：ie6 以前提起过这个概念</li><li>生命周期：存在本地，不手动删除的话就不会没有</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> loc = localStorage;</span><br><span class="line">   <span class="comment">//存储键值对</span></span><br><span class="line">   loc.setItem(<span class="string">"key1"</span>,<span class="string">"value1"</span>);</span><br><span class="line">   <span class="comment">//通过关键字打印值</span></span><br><span class="line">   <span class="built_in">console</span>.log(loc.getItem(<span class="string">"key1"</span>));</span><br></pre></td></tr></tbody></table></figure></div><h2 id="SessionStorage"><a href="#SessionStorage" class="headerlink" title="SessionStorage"></a>SessionStorage</h2><ul><li>特点：session 后台叫“会话”</li><li>大小：5mb左右</li><li>声明周期：保存在一次会话当中，页面打开到关闭，称作一次会话，关闭页面自动销毁</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sessionStorage1 = sessionStorage;</span><br><span class="line">   <span class="comment">//存储键值对</span></span><br><span class="line">   sessionStorage1.setItem(<span class="string">"key2"</span>,<span class="string">"value2"</span>);</span><br><span class="line">   <span class="comment">//通过关键字打印值</span></span><br><span class="line">   <span class="built_in">console</span>.log(sessionStorage1.getItem(<span class="string">"key2"</span>));</span><br></pre></td></tr></tbody></table></figure></div><h2 id="扩展知识"><a href="#扩展知识" class="headerlink" title="扩展知识"></a>扩展知识</h2><ul><li><code>indexDB</code> 非关系型数据库，key-value 型</li><li><code>B/S</code> 浏览器/服务</li><li><code>C/S</code> 客户端/服务 做成产品</li></ul><hr><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="indexedDB"><a href="#indexedDB" class="headerlink" title="indexedDB"></a>indexedDB</h2><p>它是非关系型数据库 </p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端13_JS】对象及操作、ES5中的“类”的创建、‘类’方法、继承</title>
      <link href="p/8921.html"/>
      <url>p/8921.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Object-对象操作"><a href="#Object-对象操作" class="headerlink" title="Object 对象操作"></a>Object 对象操作</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>面向对象的三大特征：<code>封装</code>、<code>继承</code>、<code>多态</code>，但是 js 没有多态，所以它不是纯面向对象的语言</p><h2 id="增、删、减、改"><a href="#增、删、减、改" class="headerlink" title="增、删、减、改"></a>增、删、减、改</h2><ul><li><p>增加就是赋值 <code>obj.属性 = 属性值</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES6 的对象简写模式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">simpleWrite</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> name = <span class="string">"斯蒂芬库里"</span>;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">"string"</span>;</span><br><span class="line">        <span class="keyword">let</span> functionName = <span class="string">"realFunName"</span>;</span><br><span class="line">        <span class="keyword">let</span> obj = {</span><br><span class="line">            name,</span><br><span class="line">            <span class="comment">//简写，key为name，value为斯蒂芬库里</span></span><br><span class="line"></span><br><span class="line">            [str]:<span class="string">"key值放变量"</span>,</span><br><span class="line">            <span class="comment">//这里的key可以放个变量了</span></span><br><span class="line"></span><br><span class="line">            [<span class="string">"a"</span> + <span class="string">"bc"</span>]:<span class="string">"key值放运算"</span>,</span><br><span class="line">            <span class="comment">//key值很自由了，可以运算，所以可以通过循环生成一组key了</span></span><br><span class="line"></span><br><span class="line">            [functionName](){}</span><br><span class="line">            <span class="comment">//函数名字也可以用变量</span></span><br><span class="line">        };</span><br><span class="line">        <span class="built_in">console</span>.log(obj[<span class="string">"name"</span>]);</span><br><span class="line">        <span class="comment">//斯蒂芬库里</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(obj[<span class="string">"string"</span>]);</span><br><span class="line">        <span class="comment">//调用的时候用字符串</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(obj[functionName].name);</span><br><span class="line">        <span class="comment">//realFunName</span></span><br><span class="line">        <span class="comment">//拿出真实名字</span></span><br><span class="line">        <span class="comment">//没啥屁用</span></span><br><span class="line">    }</span><br><span class="line">    simpleWrite();</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>删减用关键字 <code>delete</code>，<code>delete.对象名.对象中的属性名</code>，只能删关键字</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> obj.name;</span><br></pre></td></tr></tbody></table></figure></div><p> 这个方法不可以 <strong>把对象给删了</strong>，比方说</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">        <span class="number">0</span>:<span class="string">"ass"</span>,</span><br><span class="line">        <span class="comment">/*在obj中先转换成字符串*/</span></span><br><span class="line">        name:<span class="string">"xiaoming"</span>,</span><br><span class="line">        hab:[],</span><br><span class="line">        show:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    <span class="comment">//对象这样删除是删不掉的</span></span><br><span class="line">    <span class="keyword">delete</span> obj;</span><br><span class="line">    obj.show();</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>同名才需要修改，修改也就是重新赋值，比方说我要修改 <code>obj.name</code> 直接再次赋值即可</p></li><li><p>查询属性的话就是输出，<code>console.log(obj.name);</code>，查询函数的话就是调用，<code>obj.show();</code></p><h2 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign()"></a>Object.assign()</h2><h3 id="两个对象拼接"><a href="#两个对象拼接" class="headerlink" title="两个对象拼接"></a>两个对象拼接</h3></li><li><p>类方法：<code>Object.assign(obj1,obj2);</code></p></li><li><p>浅拷贝：继承的不会被拷贝，只会拷贝自己的</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj1 = {</span><br><span class="line">       a:<span class="number">1</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">const</span> obj2 = {</span><br><span class="line">       b:<span class="number">2</span></span><br><span class="line">   };</span><br><span class="line"><span class="keyword">var</span> obj3 = <span class="built_in">Object</span>.assign(obj1,obj2);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(obj1);</span><br><span class="line">   <span class="comment">//{a: 1, b: 2}</span></span><br><span class="line">   <span class="comment">//这里 obj1 也发生了变化</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(obj2);</span><br><span class="line">   <span class="comment">//{b: 2}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(obj3);</span><br><span class="line">   <span class="comment">//{a: 1, b: 2}</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="数字转对象"><a href="#数字转对象" class="headerlink" title="数字转对象"></a>数字转对象</h3><ul><li>相当于 <code>new Number(1);</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj4 = <span class="built_in">Object</span>.assign(<span class="number">1</span>);</span><br><span class="line">   <span class="comment">//数字转对象</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(obj4);</span><br><span class="line">   <span class="comment">//Number {1}</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>));</span><br><span class="line">   <span class="comment">//Number {1}</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="多个数组捏在一起"><a href="#多个数组捏在一起" class="headerlink" title="多个数组捏在一起"></a>多个数组捏在一起</h3><ul><li>继承的不会被拷贝，只会拷贝自己的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = {</span><br><span class="line">       a:<span class="number">1</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> obj2 = {</span><br><span class="line">       b:<span class="number">2</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> obj3 = {</span><br><span class="line">       c:<span class="number">3</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> tar = {</span><br><span class="line"></span><br><span class="line">   };</span><br><span class="line">   <span class="comment">//想要把obj1、2、3整理到tar里</span></span><br><span class="line">   <span class="keyword">const</span> sors1 = <span class="function">(<span class="params">tar,...arr</span>) =></span> <span class="built_in">Object</span>.assign(tar,...arr);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//也可以</span></span><br><span class="line">   <span class="comment">//新建一个空数组{}，然后后把...arr放到新的{}中</span></span><br><span class="line">   <span class="keyword">const</span> sors2 = <span class="function">(<span class="params">...arr</span>) =></span> <span class="built_in">Object</span>.assign({},...arr);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(sors1(tar, obj1, obj2, obj3));</span><br><span class="line">   <span class="comment">//{a: 1, b: 2, c: 3}</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(tar);</span><br><span class="line">   <span class="comment">//{a: 1, b: 2, c: 3}</span></span><br><span class="line">   <span class="comment">//原先 tar 不是空的么，用了sors1方法，就会改变它</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//想要不改变tar，那么就新开一个变量</span></span><br><span class="line">   <span class="built_in">console</span>.log(sors2(obj1,obj2,obj3));</span><br><span class="line">   <span class="comment">//{a: 1, b: 2, c: 3}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="提取键、值、键值对"><a href="#提取键、值、键值对" class="headerlink" title="提取键、值、键值对"></a>提取键、值、键值对</h2><ul><li>提取键：用 <code>Object.keys(obj)</code> 来提取，返回数组，并且每个值都是 <strong>?字符串</strong></li></ul><ul><li><p>提取值：用 <code>obj[Object.keys(obj)[1]];</code> 来取值，实质是用关键字来取值，也就是 <code>obj[key]</code></p><p> 注意：<br> 一般 <code>obj[key]</code> 的 <code>key</code> 必须是 <code>string</code>，然而如果是数字的话，obj 他会强制转换成 string</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">        <span class="number">125</span>:<span class="string">"ass"</span></span><br><span class="line">    };</span><br><span class="line">    <span class="comment">//这样也是可以的，但是要注意强转</span></span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="number">125</span>]);</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>提取键值对：用    <code>Object.entries(obj)</code>来提取键值对，返回的是个二维数组</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">       name:<span class="string">"斯蒂芬库里"</span>,</span><br><span class="line">       elName:<span class="string">"终极牛逼三分球"</span>,</span><br><span class="line">       age:<span class="number">30</span>,</span><br><span class="line">       say:<span class="string">"yes"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Object</span>.entries(obj));</span><br><span class="line">   <span class="comment">//(4) [Array(2), Array(2), Array(2), Array(2)]</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="二维数组-对象互相转化"><a href="#二维数组-对象互相转化" class="headerlink" title="二维数组 / 对象互相转化"></a>二维数组 / 对象互相转化</h2><ul><li>用 <code>Object.fromEntries</code>，可以将二维数组转化成对象</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">       name:<span class="string">"斯蒂芬库里"</span>,</span><br><span class="line">       elName:<span class="string">"终极牛逼三分球"</span>,</span><br><span class="line">       age:<span class="number">30</span>,</span><br><span class="line">       say:<span class="string">"yes"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">keys</span>:k,<span class="attr">values</span>:v,<span class="attr">entries</span>:e} = <span class="built_in">Object</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> fE = <span class="built_in">Object</span>.fromEntries([</span><br><span class="line">       [<span class="string">"a"</span>,<span class="number">1</span>],</span><br><span class="line">       [<span class="string">"b"</span>,<span class="number">2</span>]</span><br><span class="line">   ]);</span><br><span class="line">   <span class="built_in">console</span>.log(fE);</span><br><span class="line">   <span class="comment">//{a: 1, b: 2}</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> fE1 = <span class="built_in">Object</span>.fromEntries([e(obj)]);</span><br><span class="line">   <span class="comment">//二位数组变成对象</span></span><br><span class="line">   <span class="built_in">console</span>.log(fE1);</span><br><span class="line">   <span class="comment">//{name,斯蒂芬库里: Array(2)}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="对象中的循环"><a href="#对象中的循环" class="headerlink" title="对象中的循环"></a>对象中的循环</h2><h3 id="for-in-循环"><a href="#for-in-循环" class="headerlink" title="for in 循环"></a>for in 循环</h3><p>对象中有专门的循环 <code>for(var x in obj)</code></p><ul><li>这个是能拿到 <code>prototype</code> 继承来的属性</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = <span class="string">"Stephen Curry"</span>;</span><br><span class="line">       <span class="keyword">this</span>.habit = [<span class="string">"sing"</span>,<span class="string">'dance'</span>,<span class="string">"rap"</span>];</span><br><span class="line">       <span class="keyword">this</span>.age = <span class="number">18</span>;</span><br><span class="line">   }</span><br><span class="line">   Person.prototype.string = <span class="string">"i'm superStart！"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">var</span> items <span class="keyword">in</span> p) {</span><br><span class="line">       <span class="built_in">console</span>.log(items);</span><br><span class="line">       <span class="comment">//name</span></span><br><span class="line">       <span class="comment">//habit</span></span><br><span class="line">       <span class="comment">//age</span></span><br><span class="line">       <span class="comment">//string</span></span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys()"></a>Object.keys()</h3><ul><li>这个循环的时候是拿不到 <code>prototype</code> 继承来的。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = <span class="string">"Stephen Curry"</span>;</span><br><span class="line">       <span class="keyword">this</span>.habit = [<span class="string">"sing"</span>,<span class="string">'dance'</span>,<span class="string">"rap"</span>];</span><br><span class="line">       <span class="keyword">this</span>.age = <span class="number">18</span>;</span><br><span class="line">   }</span><br><span class="line">   Person.prototype.string = <span class="string">"i'm superStart！"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(p));</span><br><span class="line">   <span class="comment">//(3) ["name", "habit", "age"]</span></span><br><span class="line">   <span class="comment">//没有string</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h2><p>用 key 值的长度间接的测出 对象的长度 ：<code>Object.keys(obj).length</code></p><h2 id="判断具体对象"><a href="#判断具体对象" class="headerlink" title="判断具体对象 *"></a>判断具体对象 *</h2><p>关键字 <code>instanceof</code> 前后都要有值，返回布尔变量，相当于 “ 谁 是不是 啥类型的 ”</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">   <span class="comment">/*判断具体的对象*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">String</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   <span class="comment">//true</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="“类”-的创建"><a href="#“类”-的创建" class="headerlink" title="“类” 的创建"></a>“类” 的创建</h1><p>es5中没有 <strong>类</strong> 的具体实现，行规是在 <code>function</code> 后 <strong>首字母大写</strong> 类的单词名</p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.构造函数*/</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>{</span><br><span class="line">       <span class="comment">/*关键点是this*/</span></span><br><span class="line">       <span class="keyword">this</span>.name = name;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*私有属性*/</span></span><br><span class="line">       <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">/*要new 实例化*/</span></span><br><span class="line">   <span class="keyword">var</span> james = <span class="keyword">new</span> Person(<span class="string">"james"</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(james.name);</span><br></pre></td></tr></tbody></table></figure></div><h2 id="原型-prototype"><a href="#原型-prototype" class="headerlink" title="原型 prototype"></a>原型 prototype</h2><p>作用：向对象中添加属性<br>原型其实也是个对象，在实例化之后，就会生出来，相当于 <code>爹</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="comment">//向 Person 类中添加 show 方法</span></span><br><span class="line">Person.prototype.show = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">};</span><br><span class="line"><span class="comment">//实例化 詹姆斯 对象</span></span><br><span class="line"><span class="keyword">var</span> james = <span class="keyword">new</span> Person;</span><br><span class="line"></span><br><span class="line"><span class="comment">//展示詹姆斯的方法</span></span><br><span class="line">james.show();</span><br></pre></td></tr></tbody></table></figure></div><p>以下是新写的一个冒泡排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>];</span><br><span class="line">   <span class="built_in">Array</span>.prototype.newSort = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">var</span> len = <span class="keyword">this</span>.length;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i <  len; i++) {</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j <  len - i + <span class="number">1</span>; j++) {</span><br><span class="line">               <span class="keyword">if</span>(arr[j] > arr[j + <span class="number">1</span>]){</span><br><span class="line">                   <span class="keyword">var</span> temp = arr[j + <span class="number">1</span>];</span><br><span class="line">                   arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                   arr[j] = temp;</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">   };</span><br><span class="line">   arr.newSort();</span><br><span class="line">   <span class="built_in">console</span>.log(arr);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// [1,2,3,4,5,6,7,8,9]</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是一个小栗子</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HuaZP</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">       obj.name = <span class="string">"眼影"</span>;</span><br><span class="line">       obj.price = <span class="number">1000</span>;</span><br><span class="line">       obj.describe = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>{</span><br><span class="line">           <span class="built_in">console</span>.log(data);</span><br><span class="line">       };</span><br><span class="line">       <span class="keyword">return</span> obj;</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> hzp = <span class="keyword">new</span> HuaZP();</span><br><span class="line">   hzp.describe(<span class="string">"2019-10-10"</span>);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="例子：原版"><a href="#例子：原版" class="headerlink" title="例子：原版"></a>例子：原版</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">< script></span><br><span class="line">    <span class="comment">/*工厂*/</span></span><br><span class="line">    <span class="keyword">var</span> Factory = <span class="function"><span class="keyword">function</span>(<span class="params">account</span>)</span>{</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">superAdmin</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.name = <span class="string">"超级管理员"</span>;</span><br><span class="line">            <span class="keyword">this</span>.array = [<span class="string">"首页"</span>,<span class="string">"商品"</span>,<span class="string">"管理"</span>,<span class="string">"购物车"</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">admin</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.name = <span class="string">"管理员"</span>;</span><br><span class="line">            <span class="keyword">this</span>.array = [<span class="string">"首页"</span>,<span class="string">"商品"</span>,<span class="string">"管理"</span>];</span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.name = <span class="string">"用户"</span>;</span><br><span class="line">            <span class="keyword">this</span>.array = [<span class="string">"首页"</span>,<span class="string">"商品"</span>];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(account){</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"superAdmin"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> superAdmin();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"admin"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> admin();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"user"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> user();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"类型错误！！"</span>);</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ele = Factory(<span class="string">"user"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(ele.name + <span class="string">':'</span> + ele.array);</span><br><span class="line">< <span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="例子优化：提取类"><a href="#例子优化：提取类" class="headerlink" title="例子优化：提取类"></a>例子优化：提取类</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 优化</span></span><br><span class="line">< script></span><br><span class="line">    <span class="keyword">var</span> Factory = <span class="function"><span class="keyword">function</span> (<span class="params">account</span>) </span>{</span><br><span class="line">        <span class="comment">/*优化点在这里，提取出类来！*/</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">User</span>(<span class="params">opt</span>) </span>{</span><br><span class="line">            <span class="keyword">this</span>.name = opt.name;</span><br><span class="line">            <span class="keyword">this</span>.array = opt.array;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(account){</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"superAdmin"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> User({<span class="attr">name</span>:<span class="string">"烧鸡管理员"</span>,<span class="attr">array</span>:[<span class="string">"卤蛋"</span>,<span class="string">"麻辣烫"</span>,<span class="string">"烧花鸭"</span>,<span class="string">"烧子鹅"</span>]});</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"admin"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> User({<span class="attr">name</span>:<span class="string">"垃圾管理员"</span>,<span class="attr">array</span>:[<span class="string">"卤蛋"</span>,<span class="string">"麻辣烫"</span>,<span class="string">"烧花鸭"</span>]});</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"user"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> User({<span class="attr">name</span>:<span class="string">"调料管理员"</span>,<span class="attr">array</span>:[<span class="string">"卤蛋"</span>,<span class="string">"麻辣烫"</span>]});</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"类型错误！！"</span>);</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">    <span class="comment">/*实例化对象*/</span></span><br><span class="line">    <span class="keyword">var</span> people = Factory(<span class="string">"superAdmin"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(people.name + <span class="string">":"</span> + people.array);</span><br><span class="line">< <span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="‘类’-方法"><a href="#‘类’-方法" class="headerlink" title="‘类’ 方法"></a>‘类’ 方法</h1><blockquote><p>类方法只能用类去调用<br>通过类实例化的对象，是不能调用类方法的</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   Person.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">       alert(<span class="number">1</span>);</span><br><span class="line">   };</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Person.show();</span><br><span class="line">   <span class="comment">//类方法只能用类调用</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><h2 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h2><blockquote><p>原型的继承，就是，如果我实例化的对象有这个属性，就用实例化的，没有的话就去找他爹，也就是原型的</p></blockquote><p><code>Object.prototype = {}</code>  这个是爹<br>每次实例化一个对象，都会自动生成个 <code>Object.prototype = {}</code><br>自己有找自己的，没有找原型（他爹的）,这也相当于一个继承<br>在找不到就继续往上层 Object 中找方法（原型链）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比方说我给Person，通过原型，添加个name属性</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   Person.prototype.name = <span class="string">"father"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化一个p，类型为Person</span></span><br><span class="line">   <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">   </span><br><span class="line">   p.name = <span class="string">"son"</span>;</span><br><span class="line">   <span class="comment">//当我给实例化的对象的name 赋值时，输出的就是son</span></span><br><span class="line">   <span class="comment">//而我不给实例化对象p的name赋值时，它首先会找自己里面有没有，没有的话找他的原型Person</span></span><br><span class="line">   <span class="comment">//还没有的话接着往上找Object</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(p.name)</span><br><span class="line">   <span class="comment">//son</span></span><br></pre></td></tr></tbody></table></figure></div><p>对比</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个是取消实例化的复制之后</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params"></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   Person.prototype.name = <span class="string">"father"</span>;</span><br><span class="line">   <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">   <span class="built_in">console</span>.log(p.name)</span><br><span class="line">   <span class="comment">//father</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="Call-amp-Apply-方法"><a href="#Call-amp-Apply-方法" class="headerlink" title="Call & Apply 方法"></a>Call & Apply 方法</h2><p>二者都可以实现继承,都是<strong>一次性的</strong>，区别在于：</p><ul><li><code>call</code> 传参是逗号分开</li><li><code>apply</code> 传参是用数组</li></ul><p>实质是在 ==操作指针==</p><p>建议使用 <code>方法.call(对象);</code> 目的是让这个方法指向对象</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//call 和 apply的使用例子</span></span><br><span class="line">< script></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"xiaopang"</span>,</span><br><span class="line">        <span class="keyword">this</span>.age = <span class="number">19</span></span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">str1,str2</span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="keyword">this</span>.age + <span class="string">"hahhaa"</span> + str1 + str2);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">    <span class="comment">/*show继承了p*/</span></span><br><span class="line">    <span class="comment">/*call方法直接用逗号隔开*/</span></span><br><span class="line">    show.call(p,<span class="string">"政府"</span>,<span class="string">"你妹妹"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*apply方法是用数组*/</span></span><br><span class="line">    show.apply(p,[<span class="string">"string1"</span>,<span class="string">"string2"</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="comment">//xiaopang19hahhaa政府你妹妹</span></span><br><span class="line">    <span class="comment">//xiaopang19hahhaastring1string2</span></span><br><span class="line">< <span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="Creat"><a href="#Creat" class="headerlink" title="Creat"></a>Creat</h2><p>这玩意也可以继承，但是只能继承属性（2019-11-14）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = {</span><br><span class="line">       name:<span class="string">"库里"</span></span><br><span class="line">   };</span><br><span class="line">   <span class="keyword">var</span> obj2 = <span class="built_in">Object</span>.create(obj1);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(obj2.name);</span><br><span class="line">   <span class="comment">//库里</span></span><br><span class="line">   </span><br><span class="line"><span class="built_in">console</span>.log(obj2);</span><br><span class="line">   <span class="comment">//{}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="模拟继承"><a href="#模拟继承" class="headerlink" title="模拟继承"></a>模拟继承</h2><p>思想：把要继承的属性都 <strong>复制</strong> 到想要继承的人的身上，实质上类似于复制🤖</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.jicheng = <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>{</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">in</span> obj){</span><br><span class="line">           <span class="comment">/*追加*/</span></span><br><span class="line">           <span class="comment">//this指的是调用的对象，obj就是从它身上扒属性，复制给this。</span></span><br><span class="line">           <span class="keyword">this</span>[x] = obj[x];</span><br><span class="line">       }</span><br><span class="line">   };</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = <span class="string">"Father"</span>;</span><br><span class="line">       <span class="keyword">this</span>.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">"我爱洗澡"</span>)</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.age = <span class="string">'18'</span></span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> fa = <span class="keyword">new</span> Father();</span><br><span class="line">   <span class="keyword">var</span> son = <span class="keyword">new</span> Son();</span><br><span class="line"></span><br><span class="line">   son.jicheng(fa);</span><br><span class="line">   <span class="built_in">console</span>.log(son);</span><br><span class="line">   <span class="comment">//Son {age: "18", name: "Father", show: ƒ, jicheng: ƒ}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="举例理解实例化-和-类"><a href="#举例理解实例化-和-类" class="headerlink" title="举例理解实例化 和 类"></a>举例理解实例化 和 类</h2><p>比方说我 new 出来一个电脑（电脑是‘类’），你一台，我一台，（这就是实例化），我给我的电脑安装个软件（实例化对象的属性），但是你没有（另一个实例化对象），你就不能用这个软件</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端12_CSS】Ruby：下载 &amp; 安装 Sass &amp; WebStorm 的适配 &amp; Sass 基础语法</title>
      <link href="p/39157.html"/>
      <url>p/39157.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Ruby-引入"><a href="#Ruby-引入" class="headerlink" title="Ruby 引入"></a>Ruby 引入</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>去官网 <a href="https://rubyinstaller.org/downloads/" target="_blank" rel="noopener">https://rubyinstaller.org/downloads/</a><br><a href="https://img-blog.csdnimg.cn/20191021094956682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191021094956682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>可能会比较慢，国外的</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>然后安装(尽量不要安装在系统盘)，注意选择第一项</p><h2 id="安装-sass"><a href="#安装-sass" class="headerlink" title="安装 sass"></a>安装 sass</h2><p>打开 cmd,快捷键 < kbd>window< /kbd> + < kbd>R< /kbd>，然后输入 <code>cmd</code><br>检查是否安装好 Ruby：输入 <code>ruby -v</code>，如果你成功安装好 Ruby 的话，就会在下面弹出版本号<br>在 cmd 中输入<code>gem install sass</code> 等待几分钟</p><hr><h1 id="WebStorm-环境的配置"><a href="#WebStorm-环境的配置" class="headerlink" title="WebStorm 环境的配置"></a>WebStorm 环境的配置</h1><p><a href="https://img-blog.csdnimg.cn/20191021101142658.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191021101142658.gif" src="/img/loading.gif" class="lazyload"></a></p><h1 id="Sass-操作"><a href="#Sass-操作" class="headerlink" title="Sass 操作"></a>Sass 操作</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li><code>Sass</code> 是一种 <strong>预处理语言</strong><br> 官网上给的是这样的：“世界上最成熟、最稳定、最强大的专业级CSS扩展语言！”</li><li>Less 也是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。</li></ul><p>这里我用的是 Sass</p><h2 id="声明-amp-使用变量"><a href="#声明-amp-使用变量" class="headerlink" title="声明 & 使用变量"></a>声明 & 使用变量</h2><p>用 <code>$变量名:值;</code> 来写变量</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/<span class="regexp">/示例</span></span><br><span class="line"><span class="regexp">$pink:hotpink;</span></span><br><span class="line"><span class="regexp">div{</span></span><br><span class="line"><span class="regexp">  color:$pink;</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="值的运算"><a href="#值的运算" class="headerlink" title="值的运算"></a>值的运算</h2><p>Sass 中的编译可以使用运算了！！</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.box{</span><br><span class="line">  margin:(<span class="number">14</span>px)/<span class="number">2</span>;</span><br><span class="line">  top:<span class="number">20</span>px + <span class="number">50</span>px;</span><br><span class="line">  left: $num * <span class="number">3</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>在 <code>Scss.scss</code> 中写完之后，其子元素中的 <code>Scss.css</code> 就会自动算好值，然后渲染到页面上，如下图所示<br><a href="https://img-blog.csdnimg.cn/20191025085448980.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191025085448980.gif" src="/img/loading.gif" class="lazyload"></a></p><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>scss 中的乘法，如果你这样乘 <code>height: 100px * 10%;</code> 他就会报错，错误如下</p><blockquote><p>height: 100px * 10%;<br>//报错信息如下：<br>Error: 1000%*px isn’t a valid CSS value.</p></blockquote><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p>除法要带着圆括号，不带括号的话就不会计算</p><h2 id="判断-if"><a href="#判断-if" class="headerlink" title="判断 if"></a>判断 if</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p{</span><br><span class="line">  @if(<span class="number">1</span> + <span class="number">1</span> == <span class="number">2</span>){</span><br><span class="line">    <span class="symbol">border:</span> <span class="number">1</span>px skyblue solid;</span><br><span class="line">  }@else <span class="keyword">if</span>(){</span><br><span class="line"></span><br><span class="line">  }@else{</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> skyblue solid; }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="后代"><a href="#后代" class="headerlink" title="后代"></a>后代</h2><p>Sass 中的后代，可以跟 body 中的书写格式类似，如果你想写 div 下 h1 的属性，下面有几种方法可以实现</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/*Descendants*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">/</span>*can write like this*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">div h1{</span></span><br><span class="line"><span class="regexp">  color: beige;</span></span><br><span class="line"><span class="regexp">}</span></span><br><span class="line"><span class="regexp">/</span>*also this*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">div{</span></span><br><span class="line"><span class="regexp">  h1{</span></span><br><span class="line"><span class="regexp">    color:beige;</span></span><br><span class="line"><span class="regexp">  }</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></tbody></table></figure></div><p>这是第二个例子：如果你用层级关系去写的话，那么你也可以设置 fa 的属性，如果你写成后代的，纳尼只能设置 fa 中的 div 的属性</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.fa div{}</span><br><span class="line"></span><br><span class="line">.fa{</span><br><span class="line">  /* that called nest,this is called element nest*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">  background-color: yellow;</span></span><br><span class="line"><span class="regexp">  div{</span></span><br><span class="line"><span class="regexp">    /</span>* attribute can also nest*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    background:{</span></span><br><span class="line"><span class="regexp">      color: skyblue;</span></span><br><span class="line"><span class="regexp">      repeat: no-repeat;</span></span><br><span class="line"><span class="regexp">    };</span></span><br><span class="line"><span class="regexp">  }</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="父元素（可设置伪类）"><a href="#父元素（可设置伪类）" class="headerlink" title="父元素（可设置伪类）"></a>父元素（可设置伪类）</h2><p>比方说想给 a 标签加个 hover 属性，可以这么写</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*a hover use <span class="string">'&'</span>,this sign means father element*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">a{</span></span><br><span class="line"><span class="regexp">  color:skyblue;</span></span><br><span class="line"><span class="regexp">  &:hover{</span></span><br><span class="line"><span class="regexp">    color: pink;</span></span><br><span class="line"><span class="regexp">  }</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></tbody></table></figure></div><p>其相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> {</span><br><span class="line">  <span class="attribute">color</span>: skyblue; }</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">    <span class="attribute">color</span>: pink; </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承用关键字 <code>@extend</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.class1{</span><br><span class="line">  <span class="symbol">border:</span><span class="number">1</span>px solid deepskyblue;</span><br><span class="line">}</span><br><span class="line">.class3{</span><br><span class="line">  <span class="symbol">margin:</span> <span class="number">22</span>px <span class="number">20</span>px <span class="number">30</span>px <span class="number">40</span>px;</span><br><span class="line">}</span><br><span class="line">.class2{</span><br><span class="line">  /*inherit*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">  @extend .class1,.class3;</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class1</span>, <span class="selector-class">.class2</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid deepskyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class3</span>, <span class="selector-class">.class2</span> {</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">22px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>; }</span><br></pre></td></tr></tbody></table></figure></div><p>原理：它用的并集选择器</p><h2 id="宏（代码块）"><a href="#宏（代码块）" class="headerlink" title="宏（代码块）"></a>宏（代码块）</h2><ul><li>宏定义 用关键字 <code>@mixin 函数名(形参){函数体}</code></li><li>宏调用 用关键字 <code>@include 函数名(实参)</code></li></ul><p>这是第一个例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/*write a function*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/the default value's statement is like that    $val : 10px</span></span><br><span class="line"><span class="regexp">@mixin test_plu($val:10px){</span></span><br><span class="line"><span class="regexp">          width:$val;</span></span><br><span class="line"><span class="regexp">       }</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">div{</span></span><br><span class="line"><span class="regexp">  /</span>*@include + function<span class="string">'s name()*/</span></span><br><span class="line"><span class="string">  @include test_plu(20px);</span></span><br><span class="line"><span class="string">}</span></span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> {</span><br><span class="line">  <span class="comment">/*include + function's name()*/</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>; }</span><br></pre></td></tr></tbody></table></figure></div><p>这是第二个例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@mixin routed($fon,$hon,$rad<span class="symbol">:</span><span class="number">10</span>px){</span><br><span class="line">  border-<span class="comment">#{$fon}-#{$hon}-radius:$rad;</span></span><br><span class="line">  -webkit-border-<span class="comment">#{$fon}-#{$hon}-radius:$rad;</span></span><br><span class="line">  -moz-border-<span class="comment">#{$fon}-#{$hon}-radius:$rad;</span></span><br><span class="line">}</span><br><span class="line">div{</span><br><span class="line">  @include routed(left,top,<span class="number">200</span>px);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> {</span><br><span class="line">  <span class="attribute">border-left-top-radius</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-left-top-radius</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-left-top-radius</span>: <span class="number">200px</span>; }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@function double($x<span class="symbol">:</span><span class="number">100</span>px){</span><br><span class="line">  @return $x * <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.div1<span class="number">0</span>{</span><br><span class="line">  width : double(<span class="number">20</span>px);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div10</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>; }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>引入外部文件需要写 <code>@import</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import <span class="string">"demo1.css"</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(demo1.css);</span><br></pre></td></tr></tbody></table></figure></div><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>单行注释 <code>//</code></li><li>多行注释 <code>/*</code></li><li>版本注释<code>/*!</code> ：这个就是在发布的时候需要一个精简的版本，用这个注释来写版本号</li></ul><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@for $i from <span class="number">1</span> to <span class="number">9</span>{</span><br><span class="line">  .border<span class="comment">#{$i} {</span></span><br><span class="line">      <span class="symbol">border:</span> <span class="comment">#{$i * 10}px solid skyblue;</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>编译之后的 css 文件如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.border1</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">10px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border2</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">20px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border3</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">30px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border4</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">40px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border5</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">50px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border6</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">60px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border7</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">70px</span> solid skyblue; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.border8</span> {</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">80px</span> solid skyblue; }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$x : <span class="number">6</span>;</span><br><span class="line">@while($x > <span class="number">0</span>){</span><br><span class="line">    .item<span class="comment">#{$x}{</span></span><br><span class="line">      <span class="symbol">width:</span> <span class="number">2</span>px * $x;</span><br><span class="line">    }</span><br><span class="line">  $x<span class="symbol">:</span>$x - <span class="number">3</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item6</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">12px</span>; }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item3</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">6px</span>; }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="each-循环"><a href="#each-循环" class="headerlink" title="each 循环"></a>each 循环</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ruby</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@each $y <span class="keyword">in</span> q,w,e,r{</span><br><span class="line">  .<span class="comment">#{$y}{</span></span><br><span class="line">    background-<span class="symbol">image:</span> url(<span class="string">"../img/<span class="subst">#{$y}</span>.png"</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>相应的 css 如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.q</span> {</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../img/q.png"</span>); }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> {</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../img/w.png"</span>); }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.e</span> {</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../img/e.png"</span>); }</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.r</span> {</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../img/r.png"</span>); }</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端11】国庆后的复习：两个数的置换、浮点数取整、表格插入、内嵌页、旋转</title>
      <link href="p/5660.html"/>
      <url>p/5660.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="国庆后的复习"><a href="#国庆后的复习" class="headerlink" title="国庆后的复习"></a>国庆后的复习</h1><h2 id="两个数的置换"><a href="#两个数的置换" class="headerlink" title="两个数的置换"></a>两个数的置换</h2><p>在算法里呢！</p><hr><h2 id="取整-（骚操作）"><a href="#取整-（骚操作）" class="headerlink" title="取整 （骚操作）"></a>取整 （骚操作）</h2><p>取反取反</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1.999</span>;</span><br><span class="line">    <span class="comment">/*取整*/</span></span><br><span class="line"><span class="built_in">console</span>.log(~~a);</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="表格中插入"><a href="#表格中插入" class="headerlink" title="表格中插入"></a>表格中插入</h2><p>前提：body 中已经写好了 tr 和 td<br>重要知识点：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">< script></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i <  $(<span class="string">"tr"</span>).length;i++){</span><br><span class="line">        <span class="keyword">var</span> obj = <span class="built_in">Object</span>.keys(arr[i]);</span><br><span class="line">        <span class="comment">/*tr[0].children.length();这个是找到此节点中的所有元素*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j <  $(<span class="string">"tr"</span>)[i].children.length;j++){</span><br><span class="line">            <span class="comment">/*这个是Object.keys(obj) 这个是提取出来所有 key 并且是数组*/</span></span><br><span class="line">            $(<span class="string">"tr"</span>)[i].children[j].innerText = arr[i][obj[j]];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">< <span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="iframe内嵌页"><a href="#iframe内嵌页" class="headerlink" title="iframe内嵌页"></a>iframe内嵌页</h2><p>跟 <code>a</code> 标签相类似，最重要的属性还是 <code>src</code><br><code>frameborder</code>  规定是否显示框架周围的边框，值为 1 或 0</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//这里做几个按钮切换网页的效果</span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"one"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">button</span>></span>change0<span class="tag">< /<span class="attr">button</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">button</span>></span>change1<span class="tag">< /<span class="attr">button</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">button</span>></span>change2<span class="tag">< /<span class="attr">button</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"560"</span>></span><span class="tag">< /<span class="attr">iframe</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"two"</span>></span><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    var btn = document.querySelectorAll("button");</span><br><span class="line">    var ifr = document.querySelector("iframe");</span><br><span class="line">    var arr = ["demo1.html","demo2.html","https://www.baidu.com"];</span><br><span class="line">    btn[0].onclick = function () {</span><br><span class="line">        ifr.src = arr[0];</span><br><span class="line">    };</span><br><span class="line">    btn[1].onclick = function () {</span><br><span class="line">        ifr.src = arr[1];</span><br><span class="line">    };</span><br><span class="line">    btn[2].onclick = function () {</span><br><span class="line">        ifr.src = arr[2];</span><br><span class="line">    }</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h2><p>有几个    </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">title</span>></span>旋转<span class="tag">< /<span class="attr">title</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">        .box{</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            transform: translate(-50%,-50%);</span><br><span class="line">        }</span><br><span class="line">        .item{</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            /*背面隐藏*/</span><br><span class="line">            backface-visibility: hidden;</span><br><span class="line"></span><br><span class="line">            cursor: pointer;</span><br><span class="line">            /*只要变化的就能设置，比如：宽高透明度等</span><br><span class="line">            设置多个就用all*/</span><br><span class="line">            transition: transform 3s;</span><br><span class="line">        }</span><br><span class="line">        .div1{</span><br><span class="line">            background:-webkit-linear-gradient(orange,red) no-repeat;</span><br><span class="line">            transform: rotateY(180deg);</span><br><span class="line">        }</span><br><span class="line">        .div2{</span><br><span class="line">            background:-webkit-linear-gradient(#6441A5,#2a0845) no-repeat;</span><br><span class="line">        }</span><br><span class="line">    <span class="tag">< /<span class="attr">style</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">head</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"box"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"div1 item"</span>></span><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"div2 item"</span>></span><span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">div</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line"></span><br><span class="line">    var div1 = document.querySelector(".div1");</span><br><span class="line">    var div2 = document.querySelector(".div2");</span><br><span class="line">    div1.onclick = function () {</span><br><span class="line">        div1.style.transform = "rotateY(180deg)";</span><br><span class="line">        div2.style.transform = "rotateY(0deg)";</span><br><span class="line">    };</span><br><span class="line">    div2.onclick = function () {</span><br><span class="line"></span><br><span class="line">        div2.style.transform = "rotateY(180deg)";</span><br><span class="line">        div1.style.transform = "rotateY(0deg)";</span><br><span class="line">    }</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端10_JQ】隐式迭代、JQ 相关操作：样式修改、类操作、添加属性、克隆、移除_创建节点、插入节点、获取盒子模型的四个值、JQ 动画</title>
      <link href="p/59740.html"/>
      <url>p/59740.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="初步！"><a href="#初步！" class="headerlink" title="初步！"></a>初步！</h1><ul><li><a href="https://jquery.com/" target="_blank" rel="noopener">https://jquery.com/</a> 来这个网站，下载好之后放到你的项目中，和 Bootstrap 的导入原理是一样的哦?(在你的项目中新建一个JS文件夹，然后把你的JQ 导入到程序中，注意做好文件的分类！)</li></ul><hr><h1 id="重要理念"><a href="#重要理念" class="headerlink" title="重要理念"></a>重要理念</h1><p><strong>JQuery 对象要用 JQuery 方法</strong> ！！！ 一定是 <strong>方法</strong><br><strong>Dom 对象 要用 Dom 方法</strong></p><h1 id="隐式迭代"><a href="#隐式迭代" class="headerlink" title="隐式迭代"></a>隐式迭代</h1><p>意思 ：在方法的内部会为匹配到的所有元素进行循环遍历，执行相应的方法，而不用我们再进行循环，简化我们的操作，方便我们调用</p><p>jQuery 中会帮我们做好 <strong>循环</strong> 的工作</p><p>比方说我想给很多 li 增加点击事件，如果用原生的话，就要用循环 (例如 for) 给所有的 li 增加点击事件。<br>然而 JQuery 源码中已经帮我们干好了这类 <strong>循环</strong> ，直接用 <code>$("li").click()</code> 就可以把所有的 li 增加点击事件了</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><  <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag"><  <span class="attr">div</span>></span></span><br><span class="line">        <span class="tag"><  <span class="attr">ul</span>></span></span><br><span class="line">            <span class="tag"><  <span class="attr">li</span>></span>这是1<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag"><  <span class="attr">li</span>></span>这是2<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag"><  <span class="attr">li</span>></span>这是3<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag"><  <span class="attr">li</span>></span>这是4<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag"><  <span class="attr">li</span>></span>这是5<span class="symbol"><</span>/li></span><br><span class="line">        <span class="symbol"><</span>/ul></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    $("li").click(function () {</span><br><span class="line">        alert($(this).text());</span><br><span class="line">    })</span><br><span class="line"><span class="symbol"><</span>/script></span><br></pre></td></tr></tbody></table></figure></div><p>展示如下：<br>< img width = 70% src = “<a href="https://img-blog.csdnimg.cn/20190921143331242.gif">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921143331242.gif"></a></p><p>细节：隐式迭代只发生在设置（set）的阶段，如果是 <strong>获取</strong>（get）的时候，<strong>只能拿到第一个值</strong>，也就是你如果拿的是个数组，只能拿到 array[0] 的属性。?</p><p>理念这类的先记住，操作的时候慢慢理解</p><hr><h1 id="JQ-基本操作"><a href="#JQ-基本操作" class="headerlink" title="JQ 基本操作"></a>JQ 基本操作</h1><h2 id="Dom、JQ-对象互相转换"><a href="#Dom、JQ-对象互相转换" class="headerlink" title="Dom、JQ 对象互相转换"></a>Dom、JQ 对象互相转换</h2><ul><li>Dom 文件转换成 JQuery :<code>$(dom对象)</code>，只需要把想要转换的 Dom 放到 括号里就好</li><li>JQuery 文件转换成 Dom :<code>$("div")[0]</code> ，（把 Div 改成你想要转的 JQuery 对象） <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">        这是1</span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">        这是2</span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    /*JQuery对象 转 Dom 对象方法，加下标！*/</span><br><span class="line">    console.log($("div")[0].innerText);</span><br><span class="line">    console.log($("div")[1].innerText);</span><br><span class="line"><span class="symbol"><</span>/script></span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h2 id="each-循环"><a href="#each-循环" class="headerlink" title="each 循环"></a>each 循环</h2><p>JQuery中有each循环，其用法如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'你'</span>,<span class="string">'好'</span>,<span class="string">'啊'</span>];</span><br><span class="line">    $.each(arr,<span class="function"><span class="keyword">function</span> (<span class="params">index,elements</span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(index,elements);</span><br><span class="line">    })</span><br><span class="line">    <span class="comment">//0 "你"</span></span><br><span class="line">    <span class="comment">//1 "好"</span></span><br><span class="line">    <span class="comment">//2 "啊"</span></span><br></pre></td></tr></tbody></table></figure></div><p>或者是</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'你'</span>,<span class="string">'好'</span>,<span class="string">'啊'</span>];</span><br><span class="line">    $(arr).each(<span class="function"><span class="keyword">function</span> (<span class="params">index,elements</span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(index,elements);</span><br><span class="line">    })</span><br><span class="line">    <span class="comment">//0 "你"</span></span><br><span class="line">    <span class="comment">//1 "好"</span></span><br><span class="line">    <span class="comment">//2 "啊"</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h2><ul><li><p>单个样式修改的格式如下：<code>$("li").css("color","red");</code></p></li><li><p>如果要修改多个，那么 可以用对象（对象前面是 key，后面是 value）</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$("li").css({</span><br><span class="line">        <span class="selector-tag">color</span><span class="selector-pseudo">:"red"</span>,</span><br><span class="line">        <span class="selector-tag">fontSize</span><span class="selector-pseudo">:30</span>,</span><br><span class="line">        "<span class="selector-tag">font-size</span>"<span class="selector-pseudo">:60</span></span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div><p>如果属性名字是类似 <code>font-size</code> 这样中间有 <code>-</code> 的，注意有两种写法</p></li><li><p>第一种 ：驼峰命名法 <code>fontSize:30</code> </p></li><li><p>第二种：套上引号 <code>"font-size":60</code></p></li></ul><hr><h2 id="类操作"><a href="#类操作" class="headerlink" title="类操作"></a>类操作</h2><h3 id="添加类"><a href="#添加类" class="headerlink" title="添加类"></a>添加类</h3><p>关键词：<code>addClass();</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).addClass(<span class="string">"colorSkyblue"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>< img  width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190923095447920.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190923095447920.png"></a></p><h3 id="移除类"><a href="#移除类" class="headerlink" title="移除类"></a>移除类</h3><p>关键字：<code>removeClass()</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).removeClass(<span class="string">"colorSkyblue"</span>);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="判断存在"><a href="#判断存在" class="headerlink" title="判断存在"></a>判断存在</h3><p>关键字：<code>hasClass("类名")</code>，返回布尔值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">"#div1"</span>).hasClass(<span class="string">"colorSkyblue"</span>));</span><br></pre></td></tr></tbody></table></figure></div><h3 id="切换类"><a href="#切换类" class="headerlink" title="切换类"></a>切换类</h3><p>关键字：<code>toggleClass()</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        $(<span class="string">"#div1"</span>).toggleClass(<span class="string">"colorRed"</span>);</span><br><span class="line">    })</span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 80% src = “<a href="https://img-blog.csdnimg.cn/20190923102739901.gif">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190923102739901.gif"></a></p><p>可以看到 <code>toggle</code> 方法是用的 <strong>类的交集</strong>，来实现切换的?</p><hr><h2 id="添加-amp-获取属性"><a href="#添加-amp-获取属性" class="headerlink" title="添加 & 获取属性"></a>添加 & 获取属性</h2><h3 id="添加属性"><a href="#添加属性" class="headerlink" title="添加属性"></a>添加属性</h3><p>有两种方法，关键字分别是 <code>attr</code> 和 <code>prop</code></p><p>他们两个的效果都一样，区别是 <strong>底层代码实现的方法不同</strong></p><ul><li><code>attr</code> 是用的 <strong>set attribute</strong> 方法添加属性</li><li><code>prop</code> 是用的点方法，返回的值可能是 <strong>布尔变量</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用法</span></span><br><span class="line">$(<span class="string">"img"</span>).attr(<span class="string">"src"</span>,<span class="string">"../img/beauty.png"</span>)</span><br></pre></td></tr></tbody></table></figure></div><p>所以对于值是布尔变量的属性的话，最好选用 <code>prop</code> 方法</p><h3 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.target.getAttribute()</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="移除节点"><a href="#移除节点" class="headerlink" title="移除节点"></a>移除节点</h2><p>关键词：<code>remove()</code></p><ul><li>原生方法移除节点： <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*原生删除方法:找到父元素，remove child 就可以了*/</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="built_in">document</span>.body.removeChild(box);</span><br></pre></td></tr></tbody></table></figure></div></li><li>JQuery 方法移除节点 <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#yichu"</span>).remove();</span><br></pre></td></tr></tbody></table></figure></div>弹幕：超出屏幕的部分建议 <code>remove</code></li></ul><hr><h2 id="克隆-（深复制）"><a href="#克隆-（深复制）" class="headerlink" title="克隆 （深复制）"></a>克隆 （深复制）</h2><p>克隆完后是 <strong>游离元素</strong>，需要指定放在哪儿</p><p>引入两个新概念，深复制 和 浅复制</p><h3 id="深复制"><a href="#深复制" class="headerlink" title="深复制"></a>深复制</h3><p>深复制就是不依赖所复制的内容</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个例子并不是真正的深复制，而是形似！！！下面的浅复制同理</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">var</span> b = a;</span><br><span class="line">   b = <span class="number">20</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"(类似深复制)a:"</span> + a);</span><br><span class="line">   <span class="comment">//结果为1</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="浅复制"><a href="#浅复制" class="headerlink" title="浅复制"></a>浅复制</h3><p>浅复制相当于指针，复制的是 <strong>引导，是指向</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*浅复制：复制的变量，与，被复制的变量，有影响*/</span></span><br><span class="line">  <span class="comment">/*因为 arr1 复制的是 arr 的指向，就是那个数组*/</span></span><br><span class="line">  <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">  <span class="keyword">var</span> arr1 = arr;</span><br><span class="line"></span><br><span class="line">  arr1[<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"赋值之后的arr:"</span> +  arr);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//赋值之后的arr:4,2,3</span></span><br></pre></td></tr></tbody></table></figure></div><p>Q：我明明操作的是新的变量 arr1 里的数据啊，为什么 arr 还会变呢？<br>A：因为 <code>var arr1 = arr;</code> 这部操作复制的是 <strong>地址</strong>，是 <strong>指向</strong>，（尽量理解），<code>arr</code> 和  <code>arr1</code> 都指向数组 <code>[1,2,3];</code> 那么 <code>arr1[0] = 4;</code> 这部操作完之后，数组已经变了，所以 <code>arr</code> 和 <code>arr1</code> 指向的内容也都变了，变成了 <code>[4,2,3];</code></p><hr><h2 id="节点创建"><a href="#节点创建" class="headerlink" title="节点创建"></a>节点创建</h2><p>创建一个游离对象 <code>$("< p>nihao</p>")</code> ，然后插入</p><p>所谓的 <strong>游离对象</strong> 是：你已经创建好了，但是它不知道该去哪里，是个孤儿，在浏览器渲染的外面，你需要清楚的给他指定位置，告诉他该去哪里，这时候就可以用到指定位置的插入！</p><hr><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>==注意：图片中的顺序和代码中的顺序是不一样的，注意区别，再去理解！！！== </p><h3 id="Append"><a href="#Append" class="headerlink" title="Append()"></a>Append()</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"box"</span>></span></span><br><span class="line">        这是box</span><br><span class="line">        <span class="tag">< <span class="attr">div</span>></span>这是box的第一个孩子<span class="symbol"><</span>/div></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    /*append 是在 box 里面的最后一位插入*/</span><br><span class="line">    $("#box").append("<span class="tag">< <span class="attr">div</span>></span>append方法<span class="symbol"><</span>/div>");</span><br><span class="line"><span class="symbol"><</span>/script></span><br></pre></td></tr></tbody></table></figure></div><p>层级效果如下：<br>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921090304445.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921090304445.png"></a></p><h3 id="Append-to"><a href="#Append-to" class="headerlink" title="Append to()"></a>Append to()</h3><p>前面的东西插入到后面，并且插入到后面元素下的最后面</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"< p>append to 方法</p>"</span>).appendTo(<span class="string">"#box"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921090637107.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921090637107.png"></a></p><h3 id="Prepend"><a href="#Prepend" class="headerlink" title="Prepend()"></a>Prepend()</h3><p>把后面的东西插入到前面，并且成为前面标签内的 <strong>首个孩子元素</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"# box"</span>).prepend(<span class="string">"< div>prepend方法</div>"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921091344769.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921091344769.png"></a></p><h3 id="Prepend-to"><a href="#Prepend-to" class="headerlink" title="Prepend to()"></a>Prepend to()</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"< p>prependTo方法</p>"</span>).prependTo(<span class="string">"#box"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921091532339.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921091532339.png"></a></p><h3 id="Before"><a href="#Before" class="headerlink" title="Before()"></a>Before()</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">< body></span><br><span class="line">    < div>这是box外的一个元素<<span class="regexp">/div></span></span><br><span class="line"><span class="regexp">    < div id="box"></span></span><br><span class="line"><span class="regexp">        这是box</span></span><br><span class="line"><span class="regexp">        < div>这是box的第一个孩子</</span>div></span><br><span class="line">    <<span class="regexp">/div></span></span><br><span class="line"><span class="regexp"></</span>body></span><br><span class="line">< script></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*before是在前面元素，相邻的，上方加一个元素*/</span></span><br><span class="line">    $(<span class="string">"#box"</span>).before(<span class="string">"< div>before方法</div>"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*prependTo方法*/</span></span><br><span class="line">    <span class="comment">/*$("< p>prependTo方法</p>").prependTo("#box");*/</span></span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921092045170.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921092045170.png"></a></p><h3 id="After"><a href="#After" class="headerlink" title="After()"></a>After()</h3><p>这是插在跟选定元素同级之后的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">< body></span><br><span class="line">    < div>这是box外，上面的临近兄弟<<span class="regexp">/div></span></span><br><span class="line"><span class="regexp">    < div id="box"></span></span><br><span class="line"><span class="regexp">        这是box</span></span><br><span class="line"><span class="regexp">        < div>这是box的第一个孩子</</span>div></span><br><span class="line">    <<span class="regexp">/div></span></span><br><span class="line"><span class="regexp">    < div>这是box外，下面的临近兄弟</</span>div></span><br><span class="line"><<span class="regexp">/body></span></span><br><span class="line"><span class="regexp">< script></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span>*after 这是插在跟box同级，之后的*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    $("#box").after("< div>after方法</</span>div><span class="string">");</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /*prependTo方法*/</span></span><br><span class="line"><span class="string">    /*$("</span>< p>prependTo方法<<span class="regexp">/p>").prependTo("#box");*/</span></span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><p>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190921092750971.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190921092750971.png"></a></p><hr><h2 id="盒子模型的四个取值"><a href="#盒子模型的四个取值" class="headerlink" title="盒子模型的四个取值"></a>盒子模型的四个取值</h2><p>一个元素的盒子模型所有值都能通过运算来获取</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="built_in">window</span>).width());<span class="comment">/*获取可视的宽度*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="built_in">window</span>).innerWidth());<span class="comment">/*border里面的，padding + content*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="built_in">window</span>).outerWidth());<span class="comment">/*border里面的，padding + content + border*/</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="built_in">window</span>).outerWidth(<span class="literal">true</span>));<span class="comment">/*border里面的，padding + content + border + margin*/</span></span><br><span class="line"><span class="comment">/*默认是false*/</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="JQ-动画"><a href="#JQ-动画" class="headerlink" title="JQ 动画"></a>JQ 动画</h1><p>首先动画有几个重要的参数，分别是</p><ul><li><p>动画执行速度 <code>speed</code>：有三个初始的，分别是 <code>fast</code>、<code>normal</code>、<code>slow</code> ，时常分别是 <code>200</code>、<code>400</code>、<code>600</code> <strong>毫秒</strong>，默认是 <code>normal</code></p></li><li><p>过度效果 <code>easing</code>：一种是 <code>swing</code>，这个是有加速度的变化，先加速，在减速<br>另一种是 <code>linear</code>，就是线性变化，匀速变化</p></li><li><p>成功回调函数 <code>callback</code>：当动画执行 <strong>完毕</strong> 之后才执行这个函数<br>多的知识点：还有一种函数叫做 <code>handler 处理函数</code>，这个只要发生了，就开始执行，比方说点击事件</p><p> callback：<br> < img width = 80% src = “<a href="https://img-blog.csdnimg.cn/20190923121250360.gif">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190923121250360.gif"></a></p></li></ul><h2 id="隐藏"><a href="#隐藏" class="headerlink" title="隐藏"></a>隐藏</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).hide(<span class="number">5000</span>,<span class="string">"linear"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div><p>演示如下<br>< img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190923115720956.gif">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190923115720956.gif"></a><br>可以看到 hide 的变换是 <strong>宽和高</strong>都在变小，最后！！自动给他个 <code>display:none;</code><br>如果hide里边没有参数，那么就是直接给他个 <code>display:none;</code></p><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#div1"</span>).show();</span><br></pre></td></tr></tbody></table></figure></div><h2 id="动画总结"><a href="#动画总结" class="headerlink" title="动画总结"></a>动画总结</h2><table><thead><tr><th>效果</th><th>方法</th></tr></thead><tbody><tr><td>隐藏</td><td>hide()</td></tr><tr><td>显示</td><td>show()</td></tr><tr><td>滑入</td><td>slideUp()</td></tr><tr><td>滑出</td><td>slideDown()</td></tr></tbody></table><h1 id="示例：select中的选项"><a href="#示例：select中的选项" class="headerlink" title="示例：select中的选项"></a>示例：select中的选项</h1><p>引入一个属性选择器，这样的话select中的值改变的话就会输出</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"sel"</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>></span>1<span class="tag"><!--<span class="name"-->option</span>></span><br><span class="line">        <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>></span>2<span class="tag"><!--<span class="name"-->option</span>></span><br><span class="line">        <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>></span>3<span class="tag"><!--<span class="name"-->option</span>></span><br><span class="line">        <span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>></span>4<span class="tag"><!--<span class="name"-->option</span>></span><br><span class="line">    <span class="tag"><!--<span class="name"-->select</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'.sel'</span>).on(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">".sel :selected"</span>).text());</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//console.log($("[class = sel] :selected").text());也可以写成这样</span></span></span><br><span class="line">    })</span><br><span class="line"><span class="tag"><!--<span class="name"-->script</span>></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端09_框架】Bootstrap、栅格系统、响应式、屏幕阅读器、和 JS 组合使用的插件</title>
      <link href="p/54679.html"/>
      <url>p/54679.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap *"></a>Bootstrap *</h1><ul><li>首先要知道，Bootstrap 相当于一个装潢公司，==他是 CSS 框架==，样式他们已经写好了，你只需要会正确合理的调用他们写好的 <strong>类</strong> 就可以了</li><li>也叫 BS</li><li>这个工具的用法，官网解释的很清楚，这里我只写一些主要的点，和官网漏掉的点</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li><p>栅格系统 （同样是快速布局）</p></li><li><p>响应式工具（可以适应不同尺寸的屏幕）</p><h2 id="下载-amp-导入"><a href="#下载-amp-导入" class="headerlink" title="下载 & 导入"></a>下载 & 导入</h2></li><li><p><a href="https://www.bootcss.com/" target="_blank" rel="noopener">https://www.bootcss.com/</a>  这是官网</p></li><li><p>接着选用于生产环境的 BS </p><a href="https://img-blog.csdnimg.cn/20190824095703305.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="30%" data-src="https://img-blog.csdnimg.cn/20190824095703305.png" src="/img/loading.gif" class="lazyload"></a></li><li><p>将你下载好的文件解压，里面分别有 css、fonts、js 文件夹，把这三个文件夹 <strong>复制</strong> 到你的项目中即可</p>   <a href="https://img-blog.csdnimg.cn/20190824100040952.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="30%" data-src="https://img-blog.csdnimg.cn/20190824100040952.png" src="/img/loading.gif" class="lazyload"></a></li><li><p>要把装潢公司领进家，导入到页面中，方法很多，可以手打，也可以直接拖拽</p>  <a href="https://img-blog.csdnimg.cn/20190824100514772.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190824100514772.gif" src="/img/loading.gif" class="lazyload"></a>## 栅格系统https://v3.bootcss.com/css/#grid  这是官网教程，这里只记录我的心得</li><li><p>首先要导入 css 文件！！！</p></li><li><p>系统会自动分为最多12列</p></li><li><p>有四个等级的屏幕划分，由大到小分别是 lg、md、sm、xs</p><a href="https://img-blog.csdnimg.cn/2019082410580328.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/2019082410580328.png" src="/img/loading.gif" class="lazyload"></a>## 响应式响应式的出现也是为了适应不同大小屏幕的，以前会根据屏幕大小写4个不同的样式，这样工作量太大了，响应式因解决这个问题而诞生</li><li><p><code>hidden-xs</code> 对 xs 大小隐藏 ，其他大小（分辨率）显示</p></li><li><p><code>visible-xs</code> 对 xs 大小显示，其他大小（分辨率）隐藏</p></li></ul><h2 id="屏幕阅读器"><a href="#屏幕阅读器" class="headerlink" title="屏幕阅读器"></a>屏幕阅读器</h2><p> <code>sr-only</code> 类可以对屏幕阅读器以外的设备隐藏内容。方面特殊人群使用，类似的 <code>aria</code> 打头的类也是</p><hr><h2 id="组件"><a href="#组件" class="headerlink" title="组件 *"></a>组件 *</h2><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>官网上标签页的介绍缺东西</p><p>想要实现的样式如下：<br><a href="https://img-blog.csdnimg.cn/20190904204903584.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190904204903584.gif" src="/img/loading.gif" class="lazyload"></a><br>程序如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol"><</span>!DOCTYPE html></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>标签页跳转<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/bootstrap.css"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.1.1.min.js"</span>></span><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/bootstrap.js"</span>></span><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/head></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span></span><br><span class="line"><span class="javascript">    < ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav nav-tabs"</span>></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">< !<span class="attr">--role</span>也是给盲人提示的 <span class="attr">--</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">< !<span class="attr">--data-toggle</span> 需要<span class="attr">js</span>，所以要加上这个文件<span class="attr">--</span>></span></span></span></span><br><span class="line"><span class="javascript">        < li role=<span class="string">"presentation"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"active"</span>><span class="xml"><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#fir"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>></span>Home<span class="symbol"><</span>/a></span><<span class="regexp">/li></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">< <span class="attr">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#sec"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>></span>Profile<span class="symbol"><</span>/a><span class="symbol"><</span>/li></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">< <span class="attr">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>></span><span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#tir"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>></span>Messages<span class="symbol"><</span>/a><span class="symbol"><</span>/li></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="symbol"><</span>/ul></span></span></span><br><span class="line"><span class="javascript">    < div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-content"</span>></span></span><br><span class="line"><span class="javascript">        < div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane fade in active"</span> id=<span class="string">"fir"</span>><span class="number">12313</span><<span class="regexp">/div></span></span></span><br><span class="line"><span class="javascript">        < div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane fade"</span> id=<span class="string">"sec"</span>><span class="number">456456</span><<span class="regexp">/div></span></span></span><br><span class="line"><span class="javascript">        < div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane fade"</span> id=<span class="string">"tir"</span>><span class="number">789789</span><<span class="regexp">/div></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="symbol"><</span>/div></span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">< !<span class="attr">--</span>结构话<span class="attr">header</span>   <span class="attr">nav</span> <span class="attr">--</span>></span></span></span></span><br><span class="line">    < !--正确的层级结构</span><br><span class="line">    tab-content 和 active 一定是父子结构</span><br><span class="line">    active--></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/body></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/html></span></span></span><br></pre></td></tr></tbody></table></figure></div><p>注意三点：</p><ul><li><code>active</code> 这个类你可以理解为 <strong>默认显示</strong> 的意思，切换标签也就是切换类，给要显示的标签加上 active</li><li><code>a</code> 标签的 <code>herf</code> 属性放对应内容的 id，来让内容显示</li><li><code>data-toggle="tab"</code> 这个是必不可少的！要用这个来切换<h2 id="JavaScript-插件"><a href="#JavaScript-插件" class="headerlink" title="JavaScript 插件"></a>JavaScript 插件</h2><h3 id="手风琴"><a href="#手风琴" class="headerlink" title="手风琴"></a>手风琴</h3>样式如下：<a href="https://img-blog.csdnimg.cn/20190906121732918.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190906121732918.gif" src="/img/loading.gif" class="lazyload"></a><br>还有这个样子的：<a href="https://img-blog.csdnimg.cn/2019090612204740.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019090612204740.gif" src="/img/loading.gif" class="lazyload"></a></li></ul><p>注意点：</p><ul><li><code>data-parent="#accordion"</code> 这个必须要有的，这个是控制 <strong>组里的元素类，点击这个元素，这个元素显示，其他隐藏</strong></li></ul><h3 id="弹出框-amp-工具提示"><a href="#弹出框-amp-工具提示" class="headerlink" title="弹出框 & 工具提示"></a>弹出框 & 工具提示</h3><p>样式如下<br><a href="https://img-blog.csdnimg.cn/20190906122908539.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190906122908539.gif" src="/img/loading.gif" class="lazyload"></a><br>想要使用弹出框的话 script 中必须要激活，加下面的语句就行(不加这个的话，会不好使的)</p><p>激活的工具不同，代码也不同，找相应的。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        $(<span class="string">'[data-toggle="tooltip"]'</span>).tooltip()</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        $(<span class="string">'[data-toggle="popover"]'</span>).popover()</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="良心进度条"><a href="#良心进度条" class="headerlink" title="良心进度条"></a><del>良心</del>进度条</h3><p>样式如下：<br><a href="https://img-blog.csdnimg.cn/20190906132328348.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190906132328348.gif" src="/img/loading.gif" class="lazyload"></a></p><p>注意点：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/*这个地方的顺序要注意一下*/</span></span><br><span class="line">pro.innerHTML =  <span class="built_in">parseInt</span>(pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span><br><span class="line">pro.style.width = <span class="built_in">parseInt</span>(pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>整体代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"progress-bar   progress-bar-striped active"</span> <span class="attr">role</span>=<span class="string">"progressbar"</span> <span class="attr">id</span>=<span class="string">"pro"</span> <span class="attr">style</span>=<span class="string">"width: 2%;min-width: 2em"</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="symbol"><</span>/div></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"infos"</span>></span><span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> pro = <span class="built_in">document</span>.querySelector(<span class="string">"#pro"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> infos = <span class="built_in">document</span>.querySelector(<span class="string">".infos"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(changePro,<span class="number">100</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">changePro</span><span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">parseInt</span>(pro.style.width) < <span class="number">100</span>){</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">parseInt</span>(pro.style.width) === <span class="number">50</span>){</span></span><br><span class="line"><span class="actionscript">                infos.innerText = <span class="string">"您的网速有点慢，推荐使用1905会员 ，一个月只需$9.9"</span></span></span><br><span class="line"><span class="actionscript">                pro.className += <span class="string">" progress-bar-danger"</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">/*定时器即使清除，最后一遍也要执行完这个函数，不是截断！*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                <span class="comment">/*浏览器队列*/</span></span></span><br><span class="line">                /*clearInterval(timer);</span><br><span class="line"><span class="actionscript">                 setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> timer2 = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">                        pro.style.width = <span class="built_in">parseInt</span>( pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span></span><br><span class="line"><span class="javascript">                        pro.innerHTML =  <span class="built_in">parseInt</span>( pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span></span><br><span class="line">                    },500)</span><br><span class="line">                 },3000)*/</span><br><span class="line"><span class="actionscript">            }<span class="keyword">else</span>{</span></span><br><span class="line"><span class="actionscript">                <span class="comment">/*这个地方的顺序要注意一下*/</span></span></span><br><span class="line"><span class="javascript">                pro.innerHTML =  <span class="built_in">parseInt</span>(pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span></span><br><span class="line"><span class="javascript">                pro.style.width = <span class="built_in">parseInt</span>(pro.style.width) + <span class="number">1</span> + <span class="string">"%"</span>;</span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*  浏览器任务队列、定时器滞后，变量置前*/</span></span></span><br><span class="line">    /*  定时器里不要嵌套定时器，会出现问题</span><br><span class="line">    * */</span><br><span class="line"><span class="actionscript">    setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line">    },100);</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> x = <span class="string">"x"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(x);</span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端08_JS】Dom：监听 &amp; 冒泡与捕获、简单兼容处理、JS 内置对象_、异常抛出</title>
      <link href="p/18479.html"/>
      <url>p/18479.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Dom事件流"><a href="#Dom事件流" class="headerlink" title="Dom事件流"></a>Dom事件流</h1><p>dom 事件流分三个阶段</p><ul><li>事件捕获阶段</li><li>处于目标阶段</li><li>事件冒泡阶段</li></ul><p>参考文章 <a href="https://www.cnblogs.com/Leophen/p/11405579.html" target="_blank" rel="noopener">https://www.cnblogs.com/Leophen/p/11405579.html</a></p><hr><h1 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h1><p>首先这里不需要写 onclick，on代表执行,而后面的名字代表事件名<br>可以在元素上用监听来添加多个事件</p><p>第一种形式： <code>div.addEventListener("click",function () {});</code><br>IE 的是这个：<code>div.attachEvent("onclick",text);</code>     教育，学校，军工，必须要兼容ie6，7，8 </p><p>这里常用的有三个参数，分别是 <strong>什么事件</strong>，<strong>处理函数</strong>，    <strong>冒泡/捕捉</strong></p><h2 id="冒泡"><a href="#冒泡" class="headerlink" title="冒泡"></a>冒泡</h2><p>第三个参数 <strong>冒泡/捕捉</strong> 中，默认值为冒泡 <code>false</code>，从小到大，当父亲和儿子都有点击事件，点击儿子，会顺序触发儿子，父亲的监听事件</p><h2 id="捕获"><a href="#捕获" class="headerlink" title="捕获"></a>捕获</h2><p><code>true</code>  捕获，从大到小，当父亲和儿子都有点击事件，点击儿子，会触发父亲，儿子</p><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><p><strong>优先捕获</strong></p><blockquote><p>如果中间有个不一样的，比方说 body 和 son 是冒泡，而 fa 是捕获呢？参考优先级，答案是 <code>fa-son-body</code><br>一般是越是辈分越大的，优先级越高<br>IE 默认是冒泡</p></blockquote><p><strong>阻止冒泡用 <code>e.stopPropagation()</code></strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">son.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>{</span><br><span class="line">        e.stopPropagation()</span><br><span class="line">    },<span class="literal">false</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>第二种形式如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div.addEventListener(<span class="string">"click"</span>,text);<span class="comment">/*注意这里函数不要写括号*/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">text</span>(<span class="params"></span>) </span>{</span><br><span class="line">        </span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>写好的测试代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol"><</span>!DOCTYPE html></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>事件捕获<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">        <span class="selector-class">.grandfather</span>{</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:777px</span> ;</span></span><br><span class="line">            height: 777px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#7aff9b</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.father</span>{</span></span><br><span class="line">            width: 444px;</span><br><span class="line">            height: 444px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#0086ff</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.son</span>{</span></span><br><span class="line">            width: 111px;</span><br><span class="line">            height: 111px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ff1dc7</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/head></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grandfather"</span>></span></span></span><br><span class="line">        grandfather</span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>></span></span></span><br><span class="line">            father</span><br><span class="line"><span class="xml">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>></span></span></span><br><span class="line">                son</span><br><span class="line"><span class="xml">            <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/div></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">script</span>></span></span></span><br><span class="line">    //优先捕获</span><br><span class="line">    var father = document.querySelector(".father");</span><br><span class="line">    var grandfather = document.querySelector(".grandfather");</span><br><span class="line">    var son = document.querySelector(".son");</span><br><span class="line">    var body = document.body;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">son</span><span class="selector-class">.addEventListener</span>("<span class="selector-tag">click</span>",<span class="selector-tag">function</span> () {</span></span><br><span class="line">        alert("son");</span><br><span class="line">    },false);</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">father</span><span class="selector-class">.addEventListener</span>("<span class="selector-tag">click</span>",<span class="selector-tag">function</span> () {</span></span><br><span class="line">        alert("fa");</span><br><span class="line">    },false);</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">grandfather</span><span class="selector-class">.addEventListener</span>("<span class="selector-tag">click</span>",<span class="selector-tag">function</span> () {</span></span><br><span class="line">        alert("grandfather");</span><br><span class="line">    },true);</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span><span class="selector-class">.addEventListener</span>("<span class="selector-tag">click</span>", <span class="selector-tag">function</span> () {</span></span><br><span class="line">        alert("body");</span><br><span class="line">    });</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">window</span><span class="selector-class">.addEventListener</span>("<span class="selector-tag">click</span>",<span class="selector-tag">function</span> () {</span></span><br><span class="line">        alert("window");</span><br><span class="line">    },true);</span><br><span class="line"><span class="xml"><span class="symbol"><</span>/script></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/html></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="移除监听"><a href="#移除监听" class="headerlink" title="移除监听"></a>移除监听</h2><p> <code>div.removeEventListener()</code>        eg.垃圾广告弹出，办 vip 就可移出监听</p><hr><h1 id="简单兼容处理"><a href="#简单兼容处理" class="headerlink" title="简单兼容处理"></a>简单兼容处理</h1><p>注意 IE 的 <code>attachEvent</code>，还有他的第一个参数要加 <code>on</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span><br><span class="line">    <span class="keyword">if</span>(div.addEventListener){</span><br><span class="line">        div1.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            alert(<span class="string">"w3c"</span>);</span><br><span class="line">        })</span><br><span class="line">    }<span class="keyword">else</span> <span class="keyword">if</span>(div.attachEvent){</span><br><span class="line">    <span class="comment">//这里如果是谷歌浏览器，那么他就没有这个方法，返回的undefined</span></span><br><span class="line">    <span class="comment">//undefined 在 if 中相当于 false</span></span><br><span class="line">        div.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            alert(<span class="string">"我是ie6、7、8浏览器"</span>);</span><br><span class="line">        })</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="JS-内置对象-（-7个"><a href="#JS-内置对象-（-7个" class="headerlink" title="JS 内置对象 * （ 7个 )"></a>JS 内置对象 * （ 7个 )</h1><h2 id="Array-数组"><a href="#Array-数组" class="headerlink" title="Array 数组"></a>Array 数组</h2><p>数组中的所有元素可以是不同的数据类型</p><p>创建数组</p><ol><li><code>var arr = new Array();</code> 这里如果给一个值得话，代表数组长度，给一个以上的话，代表添加元素，这里使用到了函数重载</li><li><code>var arr1 = [1,'232','3'];</code></li></ol><p>获取元素：通过下标获取元素，如 arr1[2];<br>获取长度：通过 <code>length</code> 方法<br>只要是数组，包括伪数组，类数组，就会有下标和 length 方法</p><p>直接越界插入 <code>arr[2] = '3';  /*可以随便插入，但是前面的元素是empty*/</code><br>书写规范：<code>var arr= [1,2,3,4,]</code> 4 后面的逗号,不要写不要写！会有无法想象的错误<br>常用的使用方法</p><ul><li><code>join('-')</code> 把数组转换成字符串,用符号拼接在一起</li><li><code>concat</code>  (可以多个)数组拼接,例如 <code>var arr = arr.concat(arr1).concat(arr2);</code></li><li><code>push</code> 插入到数组末尾，一个或者多个元素，原数组改变，返回的是数组的长度</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">arr</span>) </span>{        <span class="comment">/*数组末尾添加元素*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);</span><br><span class="line">        <span class="comment">/*argument 会记录传递的所有参数*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i < <span class="built_in">arguments</span>.length;i++){</span><br><span class="line">            arr[arr.length] = <span class="built_in">arguments</span>[i];  <span class="comment">/*这里的下标操作不要加一*/</span></span><br><span class="line">            <span class="comment">/*加一之后的效果*/</span></span><br><span class="line">            <span class="comment">/*(11) [1, 2, 3, 4, 5, empty, 6, empty, 7, empty, 8]*/</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><ul><li><code>pop</code> 返回最后一位元素</li><li><code>arr.unshift('qwe');</code> 数组开头追加元素，返回值是添加完元素之后数组的长度 length</li><li><code>arr.shift();</code> 删除头元素，返回值是删掉的元素</li><li><code>slice</code> 左闭右开,原来的数组不会发生改变</li><li><code>reverse</code> 反转，自己本身也变了</li><li><code>sort</code>  会改变原先的数组，可以控制升序还是降序排序</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">100</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>];</span><br><span class="line">    <span class="comment">/*sort方法*/</span></span><br><span class="line">    arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>) </span>{   <span class="comment">/*原数组发生改变*/</span></span><br><span class="line">        <span class="keyword">return</span> a - b;       <span class="comment">/*升序*/</span></span><br><span class="line">        <span class="comment">/*return b - a;*/</span>   <span class="comment">/*降序*/</span></span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div> <br><ul><li><p>==ec负责规定有什么方法，然而方法的实现是交给不同的浏览器，也就是浏览器写算法 & 功能==</p></li><li><p>数组是传递地址，指引数据，不会开辟新空间，下面的例子，结果是 lihua 的数值也会变化</p> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lihua = [<span class="number">170</span>,<span class="number">80</span>];</span><br><span class="line"><span class="keyword">var</span> hanmm = lihua;</span><br><span class="line">hanmm[<span class="number">1</span>] = <span class="number">90</span>;</span><br><span class="line">hanmm[<span class="number">0</span>] = <span class="number">160</span>;</span><br><span class="line"><span class="built_in">console</span>.log(lihua);</span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h3 id="模拟数组中-push-方法-（ES-6）"><a href="#模拟数组中-push-方法-（ES-6）" class="headerlink" title="模拟数组中 push 方法 （ES 6）"></a>模拟数组中 push 方法 （ES 6）</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*rest参数必须放到最后（这里是..items）*/</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">arr, ...items</span>) </span>{</span><br><span class="line">       items.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>{</span><br><span class="line">           arr[index] = item;</span><br><span class="line">       });</span><br><span class="line">       <span class="built_in">console</span>.log(arr);</span><br><span class="line">   }</span><br><span class="line">   push([],<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>);</span><br><span class="line">   <span class="comment">//(7) [1, 2, 3, 4, 5, 6, 7]</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from()"></a>Array.from()</h3><ul><li>可以将伪数组变成数组</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.伪数组变成数组*/</span></span><br><span class="line">   <span class="comment">//这个例子中</span></span><br><span class="line">   <span class="comment">//伪数组的 key 是索引，纯数字</span></span><br><span class="line">   <span class="comment">//伪数组的 key 必须要有length</span></span><br><span class="line">   <span class="keyword">var</span> fakeArray = {</span><br><span class="line">       <span class="number">0</span>:<span class="string">'a'</span>,</span><br><span class="line">       <span class="number">1</span>:<span class="string">'b'</span>,</span><br><span class="line">       <span class="number">2</span>:<span class="string">'c'</span>,</span><br><span class="line">       <span class="number">4</span>:<span class="string">"e"</span>,</span><br><span class="line">       length:<span class="number">5</span></span><br><span class="line">   };</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> arr1_1 = <span class="built_in">Array</span>.from(fakeArray);</span><br><span class="line">   <span class="built_in">console</span>.log(arr1_1);</span><br><span class="line">   <span class="comment">// ["a", "b", "c", undefined, "e"]</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//slice()如果没有参数的话，会把每一项都隔开</span></span><br><span class="line">   <span class="keyword">var</span> arr1_2 = [].slice.call(fakeArray);</span><br><span class="line">   <span class="built_in">console</span>.log(arr1_2);</span><br><span class="line">   <span class="comment">//["a", "b", "c", empty, "e"]</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//[] 可以换成 Array.prototype </span></span><br><span class="line">   <span class="keyword">var</span> arr1_3 = <span class="built_in">Array</span>.prototype.slice.call(fakeArray);</span><br><span class="line">   <span class="built_in">console</span>.log(arr1_3);</span><br><span class="line">   <span class="comment">// ["a", "b", "c", empty, "e"]</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>事件委托</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">"ul"</span>);</span><br><span class="line">   <span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">"li"</span>);</span><br><span class="line">   ul.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>{</span><br><span class="line">       <span class="comment">//先找点击了谁</span></span><br><span class="line">       <span class="keyword">var</span> tar = e.target;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//然后转成数组</span></span><br><span class="line">       <span class="keyword">var</span> arr = <span class="built_in">Array</span>.from(lis);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//最后输出索引</span></span><br><span class="line">       <span class="built_in">console</span>.log(arr.indexOf(tar));</span><br><span class="line">   };</span><br></pre></td></tr></tbody></table></figure></div><ul><li>Array.from 相当于 map 映射</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">li</span>></span>1<span class="symbol"><</span> /li></span><br><span class="line">       <span class="tag">< <span class="attr">li</span>></span>2<span class="symbol"><</span> /li></span><br><span class="line">       <span class="tag">< <span class="attr">li</span>></span>3<span class="symbol"><</span> /li></span><br><span class="line">       <span class="tag">< <span class="attr">li</span>></span>4<span class="symbol"><</span> /li></span><br><span class="line">   <span class="symbol"><</span> /body></span><br><span class="line">   </span><br><span class="line">   var arr3 = Array.from(lis,item =>item.innerText + 'i');</span><br><span class="line">   console.log(arr3);</span><br><span class="line">   //["1i", "2i", "3i", "4i"]</span><br></pre></td></tr></tbody></table></figure></div><ul><li>补全数组中的空</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4.补全数组中空的东西</span></span><br><span class="line">   <span class="keyword">var</span> arr4 = [<span class="number">1</span>,,<span class="number">2</span>,,<span class="number">3</span>,,,,<span class="number">4</span>,,,,,<span class="number">5</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(arr4);</span><br><span class="line">   <span class="comment">//[1, empty, 2, empty, 3, empty × 3, 4, empty × 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//利用短路语句来把空的地方填补上，值为false的走默认值，这里的默认值是“我补位”</span></span><br><span class="line">   <span class="keyword">var</span> arr4_1 = <span class="built_in">Array</span>.from(arr4,n => n || <span class="string">"我补位"</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(arr4_1);</span><br><span class="line">   <span class="comment">//[1, "我补位", 2, "我补位", 3, "我补位", "我补位", "我补位", 4, "我补位", "我补位", "我补位", "我补位", 5]</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="n-维数组拍平"><a href="#n-维数组拍平" class="headerlink" title="n 维数组拍平"></a>n 维数组拍平</h3><ul><li>关键字 <code>arr.flat(Infinity);</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">44</span>,<span class="number">55</span>,[<span class="number">66</span>,<span class="number">7</span>]]];</span><br><span class="line"></span><br><span class="line">   <span class="comment">//拍平</span></span><br><span class="line">   <span class="built_in">console</span>.log(arr1.flat(<span class="literal">Infinity</span>));</span><br><span class="line">   <span class="comment">//(7) [1, 2, 3, 44, 55, 66, 7]</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h2><p>以下的值是 false</p><ul><li><code>0</code> 和 <code>-0</code></li><li><code>''</code> 空字符串</li><li>false</li><li><code>undefined</code> undefined 在 if 语句中也叫 false</li><li>NaN<br>undefind + 任意数 = NaN<br>“非数字的字符串” - 0 = NaN</li><li>null</li></ul><hr><h2 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h2><p>略</p><h3 id="ES-6-中的-Number"><a href="#ES-6-中的-Number" class="headerlink" title="ES 6 中的 Number"></a>ES 6 中的 Number</h3><ul><li>es6 中的思想：方法尽量和 window分离，isNaN 的方法也被归类在 Number上</li><li>二进制 <code>ob</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0b00010010</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(num);</span><br><span class="line">   <span class="comment">//18</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li><code>Number.parseInt();</code> 取整</li><li><code>Number.parseFloat();</code> 保证是小数</li><li><code>Number.isInteger();</code> 判断是否为整数</li><li><code>Math.trunc(50)</code> 取整</li><li><code>Math.sign(-50)</code> 判断正负数，返回布尔值</li><li><code>Math.hypot(3,4)</code> 勾股定理</li></ul><hr><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>基本方法如下：</p><ul><li><code>str.toLowerCase();</code> 转换成小写，对原先的字符串没有影响</li><li><code>str.toUpperCase();</code> 转换成大写，对原先的字符串没有影响</li><li><code>str.charAt(14);</code> 通过下标找元素，越界的话返回 <strong>空字符串</strong></li><li><code>str.indexOf("day",起始位置);</code> 通过元素找下标，找不到的话返回 -1,区分大小写，这个起始位置包括它本身，所以想要找下一个的话需要在这个位置加一</li><li><code>substring</code> 和 <strong><code>split</code></strong> 都是截取，原字符串不会发生变化，里面填一个数代表从哪里（角标）开始截取，要之后的东西，比方说 <code>str.substring(1);</code> str = “1234”,那么这个结果就是 234<br><code>console.log(str.substring(1,3))</code> <strong>左闭右开</strong></li><li><code>str.search("you"));</code> 这个返回下标，如果找不到的话返回 “-1”，<br>没有第二参数，跟 indexOf 有这个区别，indexOf 第二个参数是从那个下标开始</li><li><code>str.match(string,RegExp)</code> 返回数组，可以有两个参数<h3 id="内容查找"><a href="#内容查找" class="headerlink" title="内容查找"></a>内容查找</h3></li><li><code>str.includes()</code> 是否存在某个字符串，返回布尔值</li><li><code>str.indexOf()</code> 通过字符找下标</li><li><code>str.startsWith()</code> 从字符串头部寻找，返回布尔值</li><li><code>str.endsWith()</code> 从字符串尾部寻找，返回布尔值</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*查找的例子*/</span></span><br><span class="line">   <span class="keyword">var</span> str = <span class="string">"01234567"</span>;</span><br><span class="line">   <span class="comment">/*includes 返回Boolean*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(str.includes(<span class="string">"7"</span>,<span class="number">7</span>));</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   <span class="comment">//第二个参数是寻找的起始位置，如果改成8的话，就会输出false</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(str.indexOf(<span class="string">"7"</span>,<span class="number">7</span>));</span><br><span class="line">   <span class="comment">//7</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(str.indexOf(<span class="string">"7"</span>,<span class="number">8</span>));</span><br><span class="line">   <span class="comment">//-1</span></span><br><span class="line">   <span class="comment">//第二个参数是寻找的起始位置，从下标8开始肯定找不到"7"了，所以返回-1</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/*startsWith 判断头部是否存在*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(str.startsWith(<span class="string">"0123"</span>));</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/*endsWith 判断尾部是否存在，返回布尔值，*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(str.endsWith(<span class="string">"67"</span>));</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/*这个是判断字符串中前4个里有没有123，前四个是0123，所以有*/</span></span><br><span class="line">   <span class="built_in">console</span>.log(str.endsWith(<span class="string">"123"</span>,<span class="number">4</span>));</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(str.endsWith(<span class="string">"5"</span>,<span class="number">4</span>));</span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h3><ul><li><code>str.repeat(4);</code> 里面添加重复的次数，默认为0</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"abc"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> str2 = str.repeat(<span class="number">4</span>);</span><br><span class="line">   <span class="keyword">let</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">   </span><br><span class="line">   l(str2);</span><br><span class="line">   <span class="comment">//abcabcabcabc</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="补全位置"><a href="#补全位置" class="headerlink" title="补全位置"></a>补全位置</h3><ul><li><code>str.padStart(8,"xy");</code> ：默认给你补的是空格，把字符串顶长了</li><li>它前提还是保证原来的字符串不变的，不论你怎么不全，原来的 str 内容还是有的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"1"</span>;</span><br><span class="line">   <span class="keyword">var</span> test = str.padStart(<span class="number">8</span>,<span class="string">"xy"</span>);</span><br><span class="line">   <span class="keyword">var</span> test1 = str.padEnd(<span class="number">8</span>,<span class="string">"xy"</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(test);</span><br><span class="line">   <span class="built_in">console</span>.log(test1);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//xyxyxyx1</span></span><br><span class="line">   <span class="comment">//1xyxyxyx</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果原字符的长度超出了补的位数，那么补全就失效了</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"123456789"</span>;</span><br><span class="line">   <span class="keyword">var</span> test = str.padStart(<span class="number">8</span>,<span class="string">"xy"</span>);</span><br><span class="line">   <span class="keyword">var</span> test1 = str.padEnd(<span class="number">8</span>,<span class="string">"xy"</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(test);</span><br><span class="line">   <span class="built_in">console</span>.log(test1);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//123456789</span></span><br><span class="line">   <span class="comment">//123456789</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="去掉空格"><a href="#去掉空格" class="headerlink" title="去掉空格"></a>去掉空格</h3><ul><li><code>var str1 = str.trim();</code> 去掉前后的空格</li><li><code>var str2 = str.trimStart();</code> 去掉字符串前面的空格</li><li><code>var str3 = str.trimEnd();</code> 去掉字符串后面的空格</li><li>注意：字符串里的空格是不会去掉的<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例1</span></span><br><span class="line"><span class="keyword">var</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">   <span class="comment">//a前面一个空格，c后面两个空格</span></span><br><span class="line">   <span class="keyword">var</span> str = <span class="string">" abc  "</span>;</span><br><span class="line">   <span class="keyword">var</span> str1 = str.trim();</span><br><span class="line">   <span class="keyword">var</span> str2 = str.trimStart();</span><br><span class="line">   <span class="keyword">var</span> str3 = str.trimEnd();</span><br><span class="line">   l(str1);</span><br><span class="line">   <span class="comment">//abc</span></span><br><span class="line">   l(str2);</span><br><span class="line">   <span class="comment">//abc</span></span><br><span class="line">   l(str3);</span><br><span class="line">   <span class="comment">// abc</span></span><br><span class="line"></span><br><span class="line">   l(str1.length);</span><br><span class="line">   <span class="comment">//3</span></span><br><span class="line">   l(str2.length);</span><br><span class="line">   <span class="comment">//5</span></span><br><span class="line">   l(str3.length);</span><br><span class="line">   <span class="comment">//4</span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例2</span></span><br><span class="line"><span class="keyword">var</span> {<span class="attr">log</span>:l} = <span class="built_in">console</span>;</span><br><span class="line">   <span class="comment">//字符串中夹着空格</span></span><br><span class="line">   <span class="keyword">var</span> str = <span class="string">" ab c  "</span>;</span><br><span class="line">   <span class="keyword">var</span> str1 = str.trim();</span><br><span class="line">   <span class="keyword">var</span> str2 = str.trimStart();</span><br><span class="line">   <span class="keyword">var</span> str3 = str.trimEnd();</span><br><span class="line">   l(str1);</span><br><span class="line">   <span class="comment">//ab c</span></span><br><span class="line">   l(str2);</span><br><span class="line">   <span class="comment">//ab c</span></span><br><span class="line">   l(str3);</span><br><span class="line">   <span class="comment">// ab c</span></span><br><span class="line"></span><br><span class="line">   l(str1.length);</span><br><span class="line">   <span class="comment">//4</span></span><br><span class="line">   l(str2.length);</span><br><span class="line">   <span class="comment">//6</span></span><br><span class="line">   l(str3.length);</span><br><span class="line">   <span class="comment">//5</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><p>首先定义 <code>var date = new Date();</code><br>调用的方法如下</p><ul><li><code>date.getFullYear();</code> 年份</li><li><code>date.getMonth();</code> 月份</li><li><code>date.getDate();</code> 日</li><li><code>date.getHours();</code> 时</li><li><code>getMinutes();</code> 分</li><li><code>getSeconds();</code> 秒<h3 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h3>声明定时器如下，其中参数包括函数，和时间ms，通常一秒设成 1000</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        </span><br><span class="line">    },<span class="number">1000</span>);</span><br></pre></td></tr></tbody></table></figure></div><p><strong>一定要注意用完计时器后要移出</strong>，那么就要先给计时器一个名字</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">set</span> = setInterval(function () {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    },<span class="number">1000</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>然后在清除计时器 <code>clearInterval(set);</code></p><h4 id="轮播图制作要点-amp-思路"><a href="#轮播图制作要点-amp-思路" class="headerlink" title="轮播图制作要点 & 思路"></a>轮播图制作要点 & 思路</h4><ul><li><p>首先轮播图得轮播啊，所以需要一个计时器 <code>var timer = setInterval(func1,1000);</code>  ，来隔几秒换张图片</p></li><li><p>然后写功能函数，角标的处理，轮播到下一张图后角标加加，当角标大于你的图片数量时，我的方法是用图片数量取余，这里测试会遇到很多问题，一个一个解决</p></li><li><p>img 的路径切换，这里用到了字符串的拼接 <code>img.src = "../img/img" + flag +".jpg";</code> 其中 flag 是我设定的角标</p></li><li><p>清除定时器，你的鼠标移动到图片区域的时候，图片就不要动了，方法是清除定时器 `function func3(){</p><pre><code>clearInterval(timer);</code></pre><p> }` 都给我写在函数里，进行功能封装</p></li><li><p>然后鼠标离开图片区域的时候还要重启定时器，方法是在定义一遍定时器就好</p></li><li><p>左右轮播的按钮建议用背景颜色 RGBA，当鼠标悬浮到这个按钮上，改便 A 的值就可以了，例如 </p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn_left.addEventListener(<span class="string">"mouseover"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        btn_left.style.backgroundColor = <span class="string">"rgba(0,0,0,0.6)"</span>;</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h2><ul><li>没有 new 方法</li><li><code>var PI = Math.PI;</code> 不希望改的值一定要大写—ES5 的行规，但是值能改</li><li><code>var VERSION = "1.0";</code>  说明版本</li><li>随机数的产生：语法为 <code>Math.random()</code>，这个值是(0,1)，左开又开的，也就是说永远都不会取到 0 和 1</li></ul><hr><h2 id="RegExp-正则"><a href="#RegExp-正则" class="headerlink" title="RegExp 正则"></a>RegExp 正则</h2><p>RegExp 又称为 <strong>正则表达式</strong>，它是对字符串执行模式匹配的强大工具。</p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><ul><li>它也有 New 方法：<code>var rex = new RegExp();</code> （编译器会在括号下画波浪，没关系的）</li><li>直接声明： <code>var rex1 = /q/;</code> 用 <code>/语句/</code> ，（注意与单行注释的区别）</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><strong>test</strong>： <code>rex.test("we")</code> ，返回布尔值</li><li><strong>exec</strong>：返回 <strong>数组</strong>，里面有索引等内容</li></ul><h3 id="用法、模式修饰符"><a href="#用法、模式修饰符" class="headerlink" title="用法、模式修饰符"></a>用法、模式修饰符</h3><ul><li>声明的时候后面可以加参数，例如 <code>var rex1 = /q/i;</code> ，有三种模式修饰符，分别是  </li></ul><p> <strong><code>/g;</code> 全局匹配</strong> (即匹配所有的结果，而不是第一个找到的)<br> 下面是加全局匹配和不加的对比</p><pre><code>加全局：</code></pre><a href="https://img-blog.csdnimg.cn/20190821212047207.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="60%" data-src="https://img-blog.csdnimg.cn/20190821212047207.png" src="/img/loading.gif" class="lazyload"></a><a href="https://img-blog.csdnimg.cn/20190821212135739.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="60%" data-src="https://img-blog.csdnimg.cn/20190821212135739.png" src="/img/loading.gif" class="lazyload"></a><pre><code>不加全局匹配：</code></pre><a href="https://img-blog.csdnimg.cn/20190821212451534.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="60%" data-src="https://img-blog.csdnimg.cn/20190821212451534.png" src="/img/loading.gif" class="lazyload"></a>    <a href="https://img-blog.csdnimg.cn/20190821212505769.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="60%" data-src="https://img-blog.csdnimg.cn/20190821212505769.png" src="/img/loading.gif" class="lazyload"></a><p> <code>/i;</code>   <strong>区分大小写匹配</strong></p><p> <code>/m;</code> <strong>多行匹配</strong></p><ul><li>正则条件可以这样写 <code>var rex2 = /[1-3]{2}/;</code>  <strong>中括号</strong> 里的是数值筛选 <strong>条件</strong>，意思是找数据是 1~3 的，(只有0 到 9)，<strong>花括号</strong> 里的数是 <strong>长度</strong>，找字符串长度为 2 的子字符串，<strong>子字符串必须要连在一起</strong><br>如果是这样写 <code>var rex2 = /[13]{2}/;</code>  那么就是找数据 1 <strong>和</strong> 3 的，不包括 2。<br>用 <code>var rex2 = /[1-3]{2}/;</code> 举几个例子：<code>135</code> 中，<code>13</code> 就满足正则筛选条件，返回 true ，而 <code>192</code> 这个就不符合条件，因为 <code>1</code> 和 <code>2</code> 中间有个 <code>9</code> ，没有连在一起，长度不为2</li><li>还可以固定长度的查找：用 <code>^</code>  和 <code>$</code> 的组合，分别写在开头和结尾，例如下面这个，判断是否是电话号码 ：<code>var CheckIsPhoneNumber = /^1[34578]{1}[1-9]{1}[0-9]{8}$/;</code> 解释：第一位手机号都应该是 1，第二位手机号应该是在 3、4、5、7、8 中选一位，第三位手机号不会是 0(自己规定的条件，实际不考虑?) ，后八位可以是 0~9 的任意数。</li></ul><hr><h1 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h1><p>定义一个嵌入的对象</p><ul><li>后面会有更详细的介绍，现在就了解一下即可</li><li><strong>不算内置对象</strong></li></ul><p>声明有两种方法</p><ol><li><code>var obj = new Object();</code></li><li><code>var obj1 = {};</code> 实体化方法</li></ol><p>其中的内容叫做 <code>键值对</code>，也叫 <code>属性名-属性值</code><br>对象中的值可以是所有种类，包括布尔，字符串，<strong>函数</strong>?，变量，当然数组里也可以放对象，调用的时候先用角标找对象，然后用点方法调用对象中的键值，对象里面能放所有</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = {</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*键值对，属性名-属性值*/</span></span><br><span class="line">        <span class="comment">/*用逗号分割*/</span></span><br><span class="line">        name:<span class="string">"Zhangsan"</span>,</span><br><span class="line">        age:<span class="number">18</span>,</span><br><span class="line">        sex:<span class="string">"bunan"</span>,</span><br><span class="line">        show:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            alert(<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">/*后面没了就不要加逗号了*/</span></span><br><span class="line"></span><br><span class="line">    };</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h1><ul><li><code>throw new Error("a is hahah");</code> 用这个抛出异常，异常提示为括号中的字符串，浏览器里效果如下  <a href="https://img-blog.csdnimg.cn/20190824110826417.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="90%" data-src="https://img-blog.csdnimg.cn/20190824110826417.png" src="/img/loading.gif" class="lazyload"></a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端07_JS】Dom 文件对象：节点操作、创建、插入、替换、删除、克隆、获取及修改属性</title>
      <link href="p/24415.html"/>
      <url>p/24415.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>通过 Dom 可以找到 Html 里的所有内容，并实现相应的操作</p><h1 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>我们可以通过 <code>document.createElement("tagName");</code> 来创建一个 <strong>游离</strong> 的标签。<br>所谓的游离，是没有固定的位置，需要我们插入到页面中</p><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>插入分很多种位置</p><p>在指定节点之前插入 <code>insertBefore</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">ul</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>></span>0<span class="symbol"><</span>/li></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>></span>1<span class="symbol"><</span>/li></span><br><span class="line">    <span class="symbol"><</span>/ul></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> creat_li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">"ul"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> li1 = <span class="built_in">document</span>.querySelector(<span class="string">"#li1"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> li2 = <span class="built_in">document</span>.querySelector(<span class="string">"#li2"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    creat_li.innerText = <span class="string">"新插入"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//在指定节点之前插入</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//ul.insertBefore(creat_li,li1);</span></span></span><br><span class="line">    ul.insertBefore(creat_li,li2);</span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="替换、删除、克隆"><a href="#替换、删除、克隆" class="headerlink" title="替换、删除、克隆"></a>替换、删除、克隆</h2><ul><li>替换</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">ul</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>></span>0<span class="symbol"><</span>/li></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>></span>1<span class="symbol"><</span>/li></span><br><span class="line">    <span class="symbol"><</span>/ul></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> creat_li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">"ul"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> li1 = <span class="built_in">document</span>.querySelector(<span class="string">"#li1"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    creat_li.innerText =  <span class="string">"newLi"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//注意写法，ul的子元素包括creat_li和li1</span></span></span><br><span class="line">    ul.replaceChild(creat_li,li1);</span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>删除</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">ul</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>></span>0<span class="symbol"><</span>/li></span><br><span class="line">        <span class="tag"><<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>></span>1<span class="symbol"><</span>/li></span><br><span class="line">    <span class="symbol"><</span>/ul></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> creat_li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">"ul"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> li1 = <span class="built_in">document</span>.querySelector(<span class="string">"#li1"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//页面中只剩1了</span></span></span><br><span class="line">    ul.removeChild(li1);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//document.body.removeChild(li1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//Uncaught DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.</span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="symbol"><</span>/script></span></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>克隆有参数的，默认为 false，代表不克隆标签里面的内容，如果参数为 true ，那么就克隆标签种的内容</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(li1.cloneNode());</span><br><span class="line"><span class="comment">//< li id="li1"> < /li>空格我连不上，链接上就转义</span></span><br><span class="line"><span class="built_in">console</span>.log(li1.cloneNode(<span class="literal">true</span>));</span><br><span class="line"><span class="comment">//< li id="li1"> < /li></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><table><thead><tr><th align="center">描述</th><th align="center">关键字</th><th align="center">实例</th><th align="center">补充</th></tr></thead><tbody><tr><td align="center">创建：节点</td><td align="center">createElement()</td><td align="center"><code>var div = document.createElement("div");</code></td><td align="center">创建一个游离节点，需要你指定插入位置</td></tr><tr><td align="center">插入：末尾追加</td><td align="center">appendChild()</td><td align="center"><code>document.body.appendChild(div);</code></td><td align="center">向末尾追加元素</td></tr><tr><td align="center">插入：在指定结点之前</td><td align="center">insertBefore()</td><td align="center"><code>ul.insertBefore(creat_li,li2);</code></td><td align="center">在 <code>li2</code> 前面插入 <code>creat_li</code>，注意 <code>ul</code> 和 <code>cerat_li</code>是 <strong>父子关系</strong></td></tr><tr><td align="center">克隆</td><td align="center">cloneNode()</td><td align="center"><code>ul.appendChild(li1.cloneNode(true));</code></td><td align="center">克隆有参数，true的话标签内容也会克隆，克隆的元素是游离的</td></tr><tr><td align="center">替换</td><td align="center">replaceChild()</td><td align="center"><code>ul.replaceChild(creat_li,li1);</code></td><td align="center">层级关系跟 <code>insertBefore</code>类似</td></tr><tr><td align="center">删除</td><td align="center">removeChild()</td><td align="center"><code>ul.removeChild(li1);</code></td><td align="center">—</td></tr></tbody></table><h2 id="指定节点"><a href="#指定节点" class="headerlink" title="指定节点"></a>指定节点</h2><p>指定节点的方法如下</p><ul><li>通过 ID：<code>document.getElementById();</code></li><li>通过类名：<code>document.getElementsByClassName();</code></li><li>通过标签名：<code>document.getElementsByTagName();</code></li><li>通过 Name ：<code>document.getElementsByName();</code> 比方说 input 框里就有 Name</li><li><code>var div1 = document.querySelector(".div");</code>  这个只找body中第一个出现的 <code>div</code>，里面可以写选择器，写啥找啥</li><li><code>document.querySelectorAll("")[]</code> 这个是找所有的</li></ul><h2 id="节点查找-amp-选择"><a href="#节点查找-amp-选择" class="headerlink" title="节点查找 & 选择"></a>节点查找 & 选择</h2><p> 优点：可以不用频繁的给id，和类名</p><ol><li>找子节点 <code>ul.firstChild</code><br>这个是找 ul 的子节点，包括空格，如果是空格或者换行符的话就会返回 #text ，没有空格的话就是标签元素    <code>< li> < /li></code><br>如果想跳过空格直接找标签元素的话用 <strong><code>ul.firstElementChild</code></strong><br>在前端中，有 First 就会有 Last<br>如果想找 所有子节点的列表，就用 <code>ul.childNodes[]</code>(伪数组)</li><li>找父节点 <code>ul.parentNode</code> (因为父亲只有一个)</li><li>找同级的下一个兄弟节点 <code>ul.nextSibling</code> 可能找的还是空格 #text，同上，找下一个标签应该找元素，加上单词 Element <code>ul.nextElementSibling</code>；如果想找上一个兄弟节点就这样写 <code>ul.previousElementSibling</code> ，如果上一个找不到元素的话会返回 NULL</li></ol><hr><h2 id="获取及修改标签内容、属性"><a href="#获取及修改标签内容、属性" class="headerlink" title="获取及修改标签内容、属性"></a>获取及修改标签内容、属性</h2><ul><li>提取标签中的文本：<code>div1.innerText = 1;</code>  这个是提取对象 div1 中的文本 ，并把 1 赋值给他，div1 中原来的东西将会被覆盖</li><li>提取标签中的所有(包括标签) ：<code>div1.innerHTML = "< ul> < li> < /li> < / ul>"</code> 这个是把一个 ul 无需列表也放到了 div1 里了，可以用这个做聊天框</li><li>修改属性：用 <code>setAttribute();</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">li1.setAttribute(<span class="string">"style"</span>,<span class="string">"color:red"</span>);</span><br></pre></td></tr></tbody></table></figure></div><ul><li>获取属性用 <code>getAttribute();</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">< script></span><br><span class="line">    <span class="keyword">var</span> li1 = <span class="built_in">document</span>.querySelector(<span class="string">"#l i1"</span>);</span><br><span class="line">    li1.setAttribute(<span class="string">"style"</span>,<span class="string">"color:red"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(li1.getAttribute(<span class="string">"style"</span>));</span><br><span class="line">    <span class="comment">//color:red</span></span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="样式改变"><a href="#样式改变" class="headerlink" title="样式改变"></a>样式改变</h2><ul><li><p>如果想用 JS 改 CSS 中的属性，其中原先 CSS 的属性名字内有 <code>-</code> (中间杠杠的)，在 JS 中，后面单词的首字母就要大写，比方说css中的 <code>font-size</code>,在 JS 中就要写成 <code>div.style.fontSize</code> (单词Size首字母大写)</p></li><li><p><strong>组合属性</strong> <code>cssText</code> ，用这个可以一次改很多 style 样式用法如下：<code>div.style.cssText="height:111px;width:111px</code></p><p>  注意： </p><ul><li>没有代码提示，注意英语单词的拼写</li><li>这个 <strong>会替换掉原来的行内样式</strong>，所以原先有行内样式的话就会被抹去</li><li>如果想保留原来的样式，只需换成加等 <code>div.style.cssText += "height:111px;width:111px"</code></li><li>频繁的操作 dom 可能引起重排，重绘，<strong>追求效率</strong> 的话用 cssText  </li></ul></li><li><p>JS 切换类 class<br><code>div.className = "div2"</code> div2是个类名，里面规定了样式</p></li><li><p>如果想保留两个类的属性，只需换成加等 <code>div.className += " div2"</code> (个人感觉跟字符串的操做差不多)</p></li></ul><h3 id="批量修改样式"><a href="#批量修改样式" class="headerlink" title="批量修改样式"></a>批量修改样式</h3><p>比方我想修改如下 ul 中每个 li 的样式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">ul</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>1<span class="symbol"><</span> /li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>22<span class="symbol"><</span> /li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>3<span class="symbol"><</span> /li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>4<span class="symbol"><</span> /li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>5<span class="symbol"><</span> / li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>16<span class="symbol"><</span> / li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>17<span class="symbol"><</span> / li></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>18<span class="symbol"><</span> / li></span><br><span class="line">    <span class="symbol"><</span> /ul></span><br></pre></td></tr></tbody></table></figure></div><p>有如下方法，第一种 直接改 ul 的属性 ，因为很多属性都是可继承的，color 就是个可继承的属性，所以我改 ul color 的属性，li 的 color 属性也会变 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ul1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"ul"</span>)[<span class="number">0</span>];</span><br><span class="line">    ul1.style.color = <span class="string">"red"</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>另一个办法，通过循环处理所有的 li，引入了 for 循环，和检测数组长度 <code>li.length</code>,声明：li1是个数组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ;i < li1.length ;i++){</span><br><span class="line">        li1[i].style.color = <span class="string">"red"</span>;  <span class="comment">/*下标7，长度8*/</span></span><br><span class="line">        <span class="comment">/*批量处理，设置事件等等操作*/</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="动态添加点击事件"><a href="#动态添加点击事件" class="headerlink" title="动态添加点击事件"></a>动态添加点击事件</h2><p>在想要发生点击事件的元素上添加 onclick 和 事件函数，使用 <strong>匿名函数</strong>，比如点击 div 就会弹出 1,代码片如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"div"</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">/*行内js，内部js，外部js，语法规范*/</span></span><br><span class="line">    <span class="comment">/*动态添加点击事件*/</span></span><br><span class="line">    div.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{     <span class="comment">/*这个函数没有函数名，是个匿名函数*/</span></span><br><span class="line">        alert(<span class="number">1</span>);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端06_JS】ECMA 语法标准：声明变量、数据类型_、tupeof返回值、输入输出、运算、循环、条件、函数_、事件_</title>
      <link href="p/59368.html"/>
      <url>p/59368.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>以下简称 JS，首先 JS 跟 java 是两个东西，JS 是专门用来做 <strong>功能</strong> 的，有如下功能：</p><ul><li>表单验证，减轻服务端的压力</li><li>添加页面动画效果，等等</li></ul><p>在 body 外建立 <code><script></script></code> 所有的 JS 代码都写在这里。</p><p>js 是一种 <strong>弱</strong> 类型语言，语句之后是否加分号都不影响运行，==但是要养成加分号的习惯==</p><p>它由以下三个内容构成： </p><ul><li><strong>ECMAScript 语法标准</strong></li><li><strong>Dom 文档对象模型</strong></li><li><strong>Bom 浏览器对象</strong></li></ul><hr><h1 id="ECMA-语法标准"><a href="#ECMA-语法标准" class="headerlink" title="ECMA 语法标准"></a>ECMA 语法标准</h1><p>现在学的版本是 ECMA 5，南方开始用 ECMA 6</p><h2 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h2><ul><li>声明变量，用来 <strong>保存数据</strong></li><li>变量名可以由 <strong>字母、数字、下划线、$符号</strong> 组成</li><li>变量名必须以 <strong>字母、下划线或 $ 开头</strong></li><li>不可以用中文起名字</li><li><strong>严格区分大小写</strong>，也就是大小写起的变量名字，变量都是不一样的</li><li>int    它也可以做变量名字，在别的语言里 int 是关键字，但是在 JS 里没事，但是 var 不行。</li><li>这里编辑器可能会在声明变量的单词 var 下有下划线，解决方法如下：<br><a href="https://blog.csdn.net/u010263423/article/details/97968925" target="_blank" rel="noopener">https://blog.csdn.net/u010263423/article/details/97968925</a></li><li>NaN 是非数值，它是个 number 类型的</li><li>isNaN 是判断这个数是不是NaN， 也是 number</li></ul><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">text</span>(<span class="params"></span>) </span>{</span><br><span class="line">       a = <span class="number">1</span>;<span class="comment">/*这个是全局变量,es5的引擎就是这样实现的</span></span><br><span class="line"><span class="comment">       等价于window.a*/</span></span><br><span class="line">       <span class="built_in">window</span>.b = <span class="number">2</span>;</span><br><span class="line">       <span class="comment">/*为什么要加var：因为他们有本质上的区别，不加var 是追加在windows下的子空间</span></span><br><span class="line"><span class="comment">       * 加了var 就是开辟新的空间*/</span></span><br><span class="line">   }</span><br><span class="line">   text();</span><br></pre></td></tr></tbody></table></figure></div><h2 id="注释方法"><a href="#注释方法" class="headerlink" title="注释方法"></a>注释方法</h2><ul><li><p>在代码中有 <strong>双斜杠</strong> <code>//单行注释</code> 来单行注释</p></li><li><p>也可以使用快捷键 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>/</kbd> 来多行注释</p>   <br></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型 *"></a>数据类型 *</h2><p>数据类型有 6 大类 （ECMA5 版本的）    </p><ul><li>undefined：未定义</li><li>object 复杂数据模型</li><li>boolean：布尔运算</li><li>string：字符串</li><li>number：数，包括整数+浮点</li><li>null：空值</li></ul><p>ECMA6 中添加新的数据类型 symbol</p><h2 id="typeOf"><a href="#typeOf" class="headerlink" title="typeOf"></a>typeOf</h2><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>在ECMA5中是绝对安全的</p><p>而在ECMA6，用错typeof是会报错的</p><h3 id="能返回的值"><a href="#能返回的值" class="headerlink" title="能返回的值 *"></a>能返回的值 *</h3><p>检查数据类型用 <strong>typeof</strong> ，用法如下：<code>typeof (sum);</code></p><ul><li>undefined</li><li>object</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="literal">null</span>));</span><br><span class="line">   <span class="comment">//object</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>boolean</li><li>string</li><li>number</li><li>function （就这个是跟数据类型不一样的）</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="built_in">Date</span>));</span><br><span class="line">   <span class="comment">//function</span></span><br></pre></td></tr></tbody></table></figure></div><table><thead><tr><th>数据类型（7个）</th><th>typeof 返回值</th><th>解释</th></tr></thead><tbody><tr><td>number</td><td>number</td><td>数</td></tr><tr><td>string</td><td>string</td><td>字符串</td></tr><tr><td>boolean</td><td>boolean</td><td>布尔值</td></tr><tr><td>null</td><td>==object==</td><td>空</td></tr><tr><td>undefined</td><td>undefined</td><td>未定义</td></tr><tr><td>object</td><td>object</td><td>对象</td></tr><tr><td>symbol (ES6)</td><td>symbol</td><td>新来的</td></tr><tr><td>—</td><td>==function==</td><td>typeof 的特殊返回值</td></tr><tr><td>## 输入与输出</td><td></td><td></td></tr><tr><td>>输入会在浏览器中弹出会话框 ，语句这样： <code>var num = prompt('请输入');</code></td><td></td><td></td></tr><tr><td>括号内是提示语序，语气要委婉些</td><td></td><td></td></tr><tr><td>- 确定的话 <strong>返回字符串</strong>，取消的话会返回 <strong>null</strong></td><td></td><td></td></tr></tbody></table><pre><code>Chrome 弹出框是这个亚子的：<a href="https://img-blog.csdnimg.cn/20190801153143442.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190801153143442.png" src="/img/loading.gif" class="lazyload"></a>Edge的话弹出这个亚子：<a href="https://img-blog.csdnimg.cn/20190801153231142.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190801153231142.png" src="/img/loading.gif" class="lazyload"></a></code></pre><p>输出的话有以下常用的方法</p><ul><li><p><strong>弹出框:</strong> <code>alert(1);</code> </p><p>  给开发人员看的，用户看的太丑了</p><pre><code>不同浏览器的弹出框样式都不一样，会有专门的 UI 组去设计弹出框的。</code></pre><p>  优点：直观，明显<br>  缺点：<strong>会卡住线程</strong></p></li><li><p><strong>控制台打印:</strong> <code>console.log(1);</code></p>  <br>## 运算运算有：算数运算，赋值运算，关系运算，三目运算，逻辑运算符，指数运算符</li></ul><h3 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h3><ol><li>加法 <code>+</code>：数 + 字符串中，数会自动转换成字符串，这是隐式转换，<br><code>num1 + ""</code>   这样就会转换成字符串，这也是隐式转换*，对其结果没影响</li><li>减法 <code>-</code>：<strong>字符串-0</strong>  结果是 Number 类型的,这个隐式转换只能转纯数字的，比方说 “1qwe” - 0 中，1qwe他就不是纯数字，它会被转成 NaN</li><li>乘法 <code>*</code>：不说了，字符串玩不了 </li><li>除法 <code>/</code>：比如123 取十位的数的话，123 先除以 10，然后取余 %10</li><li>取余 <code>%</code>：取个位，比如取10的余数：<code>123 % 10 = 3</code></li><li>自加 <code>++</code>：<br><code>num3 = num1++</code>     先赋值，后自己加加<br><code>num4 = ++num1</code> 先自增，后赋值</li><li>自减 <code>--</code></li></ol><h3 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h3><ul><li>加等 <code>+=</code></li><li>减等 <code>-=</code></li><li>乘等 <code>*=</code></li><li>除等 <code>/=</code></li><li>取余等 <code>%=</code></li></ul><h3 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h3><p>返回布尔值，有 True，和 False<br><code>==  != >= <=</code></p><ul><li>两个 <code>==</code> 数值相等就行,比方 <code>1=="1"</code> 这个就是 true</li><li><strong>严格相等</strong>：<code>===</code> 是数值相等并且数据类型也要相等，比方 <code>1==="1"</code> 这个就是 False?<h4 id="关系运算中的特殊题目"><a href="#关系运算中的特殊题目" class="headerlink" title="关系运算中的特殊题目"></a>关系运算中的特殊题目</h4></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.数和纯数字的字符串比较</span></span><br><span class="line"><span class="comment">//把字符串变成数字</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span> < <span class="string">"10"</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">5</span> > <span class="string">"10"</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.1数和不纯数字的字符串比较</span></span><br><span class="line"><span class="comment">//不纯数字在转化成数时，变成NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span> < <span class="string">"10a"</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">5</span> > <span class="string">"10a"</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   </span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span> < <span class="literal">NaN</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">5</span> > <span class="literal">NaN</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.数字跟 true 和 false 对比</span></span><br><span class="line"><span class="comment">//true 等于1，false 等于0 (只是在和数字比较的时候)</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span> > <span class="literal">true</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">1</span> == <span class="literal">true</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">1</span> === <span class="literal">true</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">0</span> == <span class="literal">false</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">0</span> === <span class="literal">false</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.字符串和对象的比较</span></span><br><span class="line"><span class="comment">//比的是字符串每一位的的asc2码，从头开始比较</span></span><br><span class="line">   <span class="keyword">var</span> c = <span class="string">"xj"</span>;</span><br><span class="line">   <span class="keyword">var</span> d = {<span class="attr">x</span>:<span class="number">1</span>};</span><br><span class="line">   <span class="built_in">console</span>.log(c < d);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(c > d);</span><br><span class="line">   <span class="comment">//true</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4.常见的几个情况</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="literal">NaN</span>);</span><br><span class="line">   <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//如何让NaN等于NaN呢？</span></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="literal">NaN</span>));</span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="literal">null</span> == <span class="literal">null</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in">console</span>.log(<span class="literal">undefined</span> == <span class="literal">undefined</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   </span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> == <span class="number">-0</span>);</span><br><span class="line"><span class="comment">//true</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>对象在比较的时候会转换成 <code>[object Object]</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log({<span class="number">6</span>:<span class="number">8</span>} > <span class="string">"7"</span>);</span><br><span class="line">   <span class="comment">//true</span></span><br><span class="line">   <span class="built_in">console</span>.log(({<span class="number">6</span>: <span class="number">8</span>}.toString()));</span><br><span class="line">   <span class="comment">//[object Object]</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//这里的{6:8}会转换成 [object Object]</span></span><br><span class="line">   <span class="comment">//也就是"7"和"["比较，"["的asc2是91，所以是中括号大</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="三目运算"><a href="#三目运算" class="headerlink" title="三目运算"></a>三目运算</h3><p>样式是这个亚子的：<code>var flag = (a > b) ? true : false;</code> ?微信小程序中经常用</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><ul><li><code>&&</code> 与运算</li><li><code>||</code> 或运算</li><li><code>!</code> 非运算  (烧脑题：! isNaN == true) 值为 false</li></ul><h3 id="指数运算符"><a href="#指数运算符" class="headerlink" title="指数运算符"></a>指数运算符</h3><p>用到数学库 <code>Math.pow(底数,幂数)</code>，这是 ecma 规定的求幂方法</p><hr><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>循环有三种：<code>while</code>，<code>do-while</code>，<code>for</code></p><ul><li><strong>do-while</strong>：先执行语句，后判断<br>猜数游戏：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">do{</span><br><span class="line">    var guessNum = parseInt(prompt("你要猜啥数啊：请输入" + min +"~"+ max + "之间的数"));</span><br><span class="line">    if(guessNum > 100 || guessNum < 0){</span><br><span class="line">        alert("你输错了，给我重新输入！");</span><br><span class="line">        continue;</span><br><span class="line">    }</span><br><span class="line">    if(guessNum > num){</span><br><span class="line">        max = guessNum;</span><br><span class="line">        alert("哎呀数大了，请输入" + min +"~"+ max + "之间的数");</span><br><span class="line">    }else if (guessNum < num) {</span><br><span class="line">        min = guessNum;</span><br><span class="line">        alert("数太low了，请输入" + min +"~"+ max + "之间的数");</span><br><span class="line">    }else{</span><br><span class="line">        alert("你猜对了！");</span><br><span class="line">        break</span><br><span class="line">    }</span><br><span class="line">}while (true)</span><br></pre></td></tr></tbody></table></figure></div><ul><li><strong>while：</strong> 先判断，后执行语句</li><li><strong>for：</strong> 比较重要的循环，很常见</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="number">1</span>初始变量，<span class="number">2</span>条件，<span class="number">4</span>步长){</span><br><span class="line"><span class="number">3</span>语句;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">执行顺序为 <span class="string">`1初始变量--2条件--3语句--4步长--2条件--3语句--4步长.....`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i <= <span class="number">10</span>;i++){</span><br><span class="line">    sum += i * i;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="For-循环的优化"><a href="#For-循环的优化" class="headerlink" title="For 循环的优化"></a>For 循环的优化</h3><p>在循环的条件中，尽量把值写成 <strong>固定</strong> 的，不要老是去获取值，比如这样 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//优化前</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i < loc.lenght;i++){}</span><br><span class="line"><span class="comment">//优化后</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len = loc.lenght;i < len;i++){}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="链式作用域"><a href="#链式作用域" class="headerlink" title="链式作用域 *"></a>链式作用域 *</h3><p>在（10-25）日考了一遍，没有想起来！！！！</p><p>现在有这样一个问题：我想给每个 li 用 for 循环添加点击事件，点击那个li，就输出这个的下标， 语句如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j < li.length; j++) {</span><br><span class="line">        li[j].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            <span class="built_in">console</span>.log(j);<span class="comment">/* 这里j的值其实是 window.j,值是跳出for循环时的值，为5*/</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>这样写看着没啥问题，以为点第一个 li 就会打印 1，同理，但是结果如下：<br><a href="https://img-blog.csdnimg.cn/20190821215951296.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="10%" data-src="https://img-blog.csdnimg.cn/20190821215951296.png" src="/img/loading.gif" class="lazyload"></a><br>这并不是我想要的结果啊，如何改呢，在外面套层匿名函数，如下:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j < li.length; j++) {</span><br><span class="line">        (<span class="function"><span class="keyword">function</span> (<span class="params">j</span>) </span>{     <span class="comment">/*来个匿名函数，j在console时，找不到值的话就会像上级的函数中寻找参数值*/</span></span><br><span class="line">            li[j].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                <span class="built_in">console</span>.log(j);</span><br><span class="line">            }</span><br><span class="line">        })(j)</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>再次测试结果如下：<br><a href="https://img-blog.csdnimg.cn/20190821220517317.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="8%" data-src="https://img-blog.csdnimg.cn/20190821220517317.png" src="/img/loading.gif" class="lazyload"></a><br>结果是我想要的。</p><hr><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><p>条件选择包括 <code>if-else</code>，和 <code>switch-case</code></p><ul><li><strong>if 语句</strong><br> 格式要写成如下，注意 if 第一个括号的位置，不要换行，还有 else if 和 else 的位置，在括号之后写，这是大公司的规范</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mark = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入考试成绩："</span>));</span><br><span class="line"> <span class="keyword">if</span>(mark > <span class="number">90</span>){</span><br><span class="line">     alert(<span class="string">"优"</span>);</span><br><span class="line"> }<span class="keyword">else</span> <span class="keyword">if</span>( mark >= <span class="number">80</span> && mark < <span class="number">90</span>){</span><br><span class="line">     alert(<span class="string">"良"</span>);</span><br><span class="line"> }<span class="keyword">else</span> <span class="keyword">if</span>(mark >= <span class="number">60</span> && mark < <span class="number">80</span>){</span><br><span class="line">     alert(<span class="string">"中"</span>);</span><br><span class="line"> }<span class="keyword">else</span>{</span><br><span class="line">     alert(<span class="string">"差"</span>);</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure></div><ul><li><p><strong>switch 语句</strong><br>如果分支很多，switch 的效率会更高点<br>注意点：<strong>每个语句最后 要有 <code>break</code> 跳出，不然会一直往下走的</strong>，比如case1没写break的话，那么就会走case1，case2…直到遇到 break<br><code>default</code> 是除了以上case，最后执行的，看一下下面的代码，能理解的更好</p><p>  用法如下</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> month = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入月份："</span>));</span><br><span class="line">    <span class="keyword">switch</span> (month) {</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:;</span><br><span class="line">            alert(<span class="string">"第1季度"</span>);</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:;</span><br><span class="line">            alert(<span class="string">"第2季度"</span>);</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:;</span><br><span class="line">            alert(<span class="string">"第3季度"</span>);</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:;</span><br><span class="line">            alert(<span class="string">"第4季度"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            alert(<span class="string">"你TM输错了"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="与-C-语言不一样的细节"><a href="#与-C-语言不一样的细节" class="headerlink" title="与 C 语言不一样的细节"></a>与 C 语言不一样的细节</h2><ul><li><code>for(var i = 1;i <= 100;i++)</code> 中的变量 <code>i</code> 是 <strong>全局变量</strong></li><li>单引号，双引号 都是字符串！</li><li>在函数中，js 的形参可以是多个，不需要严格数量一致</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">text</span>(<span class="params">x,y,z</span>) </span>{  <span class="comment">/*x 只在函数里有用*/</span></span><br><span class="line">     <span class="comment">/*与其他语言不一样，js中形参可以是多个，不需要严格数量一致*/</span></span><br><span class="line">     sum = x + <span class="number">1</span>;</span><br><span class="line"> }</span><br><span class="line"> text(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>首先函数分为：</p><ol><li>无参函数</li><li>有参函数</li><li><strong>匿名函数</strong>：自调用，他自己会立即执行函数，能够解决很多问题<br>变量初始化以后要放在匿名函数中，自调用</li></ol><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>有参 & 无参的声明如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">text</span>(<span class="params"></span>) </span>{  <span class="comment">/*x 只在函数里有用*/</span></span><br><span class="line">        <span class="comment">/*与其他语言不一样，js中形参可以是多个，不需要严格数量一致*/</span></span><br><span class="line">        alert(<span class="string">"点我干嘛？"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.writeln(<span class="string">""</span>);   <span class="comment">/*往页面中写东西，仅供测试*/</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>匿名函数的声明如下，匿名函数也可以传递参数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>{                   <span class="comment">/*匿名函数的自调用*/</span> <span class="comment">/*这里有个括号*/</span></span><br><span class="line">        alert(<span class="string">"qwe"</span>)                <span class="comment">/*立即执行函数，能够解决很多问题*/</span></span><br><span class="line">    })()                            <span class="comment">/*qwe不加引号为变量*/</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="截断"><a href="#截断" class="headerlink" title="截断"></a>截断</h3><p> 函数内经常写  <code>return ;</code><br> return 的值是返回给了函数,没有 return 的话此函数的值是 Undefined，<strong>return 还会截断代码，其后面的语句将不会执行</strong><br> <br></p><h3 id="变量、函数提升（es5）"><a href="#变量、函数提升（es5）" class="headerlink" title="变量、函数提升（es5）"></a>变量、函数提升（es5）</h3><p>浏览器的默认行为，浏览器会把 <strong>变量的声明提到最前面</strong> </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>这时候的 console.log(x) 的结果是 undefined ，是个数据类型✍，而 <strong>不是报错</strong> ❌（c++ 会把他当作报错处理），这两句话等价于</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x; <span class="comment">//先声明</span></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line">x = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure></div><hr><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>把功能包装到函数里</p><ul><li>缘由：增加代码的复用性?</li><li>一个好的封装要给传递的参数加上 <strong>默认值</strong></li><li>功能拆分，降低耦合性(关联程度越高，耦合性越高)，可以提高其独立性。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopBul</span>(<span class="params">e</span>) </span>{</span><br><span class="line">        e = e || <span class="built_in">window</span>.event;</span><br><span class="line">        e.stopPropagation();    <span class="comment">/*这里可以做封装处理*/</span></span><br><span class="line">        <span class="comment">/*也可以做  ie  兼容*/</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>水仙花数的判断：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_isWaterNum</span>(<span class="params">num</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> a = <span class="built_in">parseInt</span>(num / <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> b = <span class="built_in">parseInt</span>(num /<span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">var</span> c = <span class="built_in">parseInt</span>(num % <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Math</span>.pow(a,<span class="number">3</span>) + <span class="built_in">Math</span>.pow(b,<span class="number">3</span>) + <span class="built_in">Math</span>.pow(c,<span class="number">3</span>) === num){</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><hr><h3 id="Argument"><a href="#Argument" class="headerlink" title="Argument"></a>Argument</h3><p>Arguments 用来拿到所有传递的参数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">text1</span>(<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="built_in">arguments</span>); <span class="comment">/*用来承接传过来的参数*/</span></span><br><span class="line">   }</span><br><span class="line">   text1(<span class="string">"1"</span>,<span class="string">"2"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>Chrome 控制台内容如下：<br><a href="https://img-blog.csdnimg.cn/20190802154100558.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="80%" data-src="https://img-blog.csdnimg.cn/20190802154100558.png" src="/img/loading.gif" class="lazyload"></a></p><hr><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><ul><li>直接调用</li><li>事件调用<br>  比方说用户点击事件，参考代码如下：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​```js</span><br><span class="line"><div onclick="text()"></div>//这个写在body</span><br><span class="line"></span><br><span class="line">function text(){//这个写在script里</span><br><span class="line">return;</span><br><span class="line">}</span><br><span class="line">​</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 全局变量 & 局部变量</span><br><span class="line">如果是局部变量的话，那么它就会有变量生命周期，当局部变量在函数内执行完毕后， gc（gc 是垃圾处理 ）会把局部变量收回。</span><br><span class="line"></span><br><span class="line">### 默认值</span><br><span class="line"></span><br><span class="line"> - 参数后面的值更需要默认值，因为我们在调用一个方法的时候，可能就写一个实参，而这个方法可能有多个实参，而你不去传值的话，方法也应该有效，这时候就需要这个方法里有默认值。</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">/*设计：如果不传参的话就报错*/</span><br><span class="line">    function error() {</span><br><span class="line">        throw new Error("错误")</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">//主要是这里，默认值给了一个报错函数</span><br><span class="line">    function test(a = error()) {</span><br><span class="line">        console.log(a);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    test(5);</span><br><span class="line">    //5</span><br><span class="line">    </span><br><span class="line">    test();</span><br><span class="line">    //Uncaught Error: 错误</span><br></pre></td></tr></tbody></table></figure></div><h3 id="函数的-length-ES-6"><a href="#函数的-length-ES-6" class="headerlink" title="函数的 length (ES 6)"></a>函数的 length (ES 6)</h3><p>函数的 length 是找多少个形参没有默认值的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">a, b, c = <span class="number">2</span></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   <span class="built_in">console</span>.log(show.length);</span><br><span class="line">   <span class="comment">//2</span></span><br><span class="line">   <span class="comment">//这里a,b就没有默认值，所以输出2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show1</span>(<span class="params">a = <span class="number">3</span>, b, c = <span class="number">2</span></span>) </span>{</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   <span class="built_in">console</span>.log(show1.length);</span><br><span class="line">   <span class="comment">//0</span></span><br><span class="line">   <span class="comment">//看有多少个参数没有默认值，从左往右数，a是第一个，有值</span></span><br><span class="line">   <span class="comment">//虽然b没有初值，但是不符合条件</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="函数中参数的作用域-ES-6"><a href="#函数中参数的作用域-ES-6" class="headerlink" title="函数中参数的作用域 (ES 6)"></a>函数中参数的作用域 (ES 6)</h3><p>一旦设置了函数的默认值，函数进行声明初始化时,参数会形成一个单独的作用域<br>等到初始化结束这个作用域就会消失<br>这种语法行为，在不设置参数默认值时，是不会出现的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">x, y = x</span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(y)</span><br><span class="line">   }</span><br><span class="line">   test(<span class="number">2</span>);</span><br><span class="line">   <span class="comment">//2</span></span><br><span class="line">   </span><br><span class="line">   test();</span><br><span class="line">   <span class="comment">//undefined</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">var</span> x1 = <span class="number">1232</span>;</span><br><span class="line">   <span class="comment">/*这里给y1赋值，是不会用函数里面的*/</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params">y1 = x1</span>) </span>{</span><br><span class="line">       <span class="keyword">let</span> x1 = <span class="number">22</span>;</span><br><span class="line">       <span class="built_in">console</span>.log(y1);</span><br><span class="line">   }</span><br><span class="line">   test1();</span><br><span class="line">   <span class="comment">//1232</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="事件、事件因子-e"><a href="#事件、事件因子-e" class="headerlink" title="事件、事件因子 e"></a>事件、事件因子 e</h2><p>这里引入个重要的变量 <code>e</code>，事件因子，记录所有的参数，包括鼠标点击的笛卡尔坐标，距离 body 的margin 值等等<br><code>e</code> 事件中 <code>path</code> 记录着层级结构，前端的结构中，最大的是 Window 、然后是 document、html、body</p><p><strong>几种事件的分类如下：</strong></p><h3 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h3><p> on 代表事件触发<br> 常用的鼠标事件有 ：</p><ul><li><code>onmousedown</code>-鼠标按下</li><li><code>onmouseup</code>-鼠标松开</li><li><code>onmousemove</code>-鼠标移动</li><li><code>onmouseout</code>-鼠标移出</li><li><code>onclick</code> 是 <strong>按下并抬起</strong> down and up</li></ul><h3 id="键盘事件：-08-06-补"><a href="#键盘事件：-08-06-补" class="headerlink" title="键盘事件：(08-06 补)"></a>键盘事件：(08-06 补)</h3><p> 首先你想：这个事件应该触发在谁身上，应该是 body 吧。<br> 那么先获取 body <code>var key = document.body;</code><br> 然后在 body 上加事件触发器 <code>onkeydown</code> </p><ul><li><p><code>onkeydown</code> 按键被按下</p><p>如果是 <kbd>shift </kbd> 键的 <code>keyCode</code> 话，左 <kbd>shift </kbd>和右 <kbd>shift </kbd>就一样<br>e.code  是键盘编码<br>e.code，keycode不区分大小写，key 区分大小写<br>通常是用键盘编码，是一套规范，浏览器通用的</p></li></ul><h3 id="Html-事件：用户触发的"><a href="#Html-事件：用户触发的" class="headerlink" title="Html 事件：用户触发的"></a>Html 事件：用户触发的</h3><p> 此事件有如下几个常用的触发器：</p><ul><li><code>onselect</code>  文本被选中</li><li><code>onreset</code> 重置</li><li><code>onresize</code> 窗口重新调整大小</li><li><code>scroll</code> 监测滚动条，只要滚动条一动就会触发</li><li>**`Window.onload = function () {<pre><code>    /!*一般是最后执行的*!/}*/`** 文档就绪函数，所有文档（很难加载的东西：图片，视频，音频；这些也算是文档）加载完之后才会调用此函数</code></pre></li><li><code>onchange</code> 失去焦点时判断内容是否改变（一般是 input框 或者是 textarea 文字?域）</li><li><code>onfocus</code> 焦点，元素获得焦点时触发，一般也是input框这类能输入的有焦点</li><li><code>oninput</code>  实时监测 input 框，只要输入一个值就会触发，删去一个值也是</li></ul><h3 id="获取当前点击对象的方法"><a href="#获取当前点击对象的方法" class="headerlink" title="获取当前点击对象的方法"></a>获取当前点击对象的方法</h3><ul><li><code>e.path[0]</code></li><li><code>e.target</code></li><li><code>console.log(this)</code> ,js 中 this 看最终谁调用，跟 java 一点也没有关系</li></ul><h3 id="画板制作：事件练习"><a href="#画板制作：事件练习" class="headerlink" title="画板制作：事件练习"></a>画板制作：事件练习</h3><ul><li>主要是学习分析思路，引入了重要的因素 <code>开关 flag</code> ，默认通常是关闭的，当鼠标按下的时候，flag=true 开启 <code>context.stroke();</code></li><li>canvas 这个如果在 style 里设置宽高的话，画画的时候就会错位，因为 CSS 是改的缩放，所以要用canvas自带的宽高写在 canvas 标签内样式中，不是 style 里！！</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!--canvas自己可以改宽高--></span></span><br><span class="line"><span class="tag"><<span class="name">canvas</span> <span class="attr">height</span>=<span class="string">"555"</span> <span class="attr">width</span>=<span class="string">"1288"</span>></span><span class="tag"><!--<span class="name"-->canvas</span>></span><br></pre></td></tr></tbody></table></figure></div><p>这是个画板</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol"><</span>!DOCTYPE html></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>画画<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line">        *{</span><br><span class="line">            margin: 0px;</span><br><span class="line">            padding: 0px;</span><br><span class="line">        }</span><br><span class="line">        canvas{</span><br><span class="line"><span class="css">           <span class="comment">/* height: 555px;*/</span></span></span><br><span class="line">            display: flex;</span><br><span class="line"><span class="css">            <span class="comment">/*width:  1288px ;*/</span></span></span><br><span class="line">            border: 2px solid skyblue;</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.tool</span>{</span></span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            height: 100px;</span><br><span class="line">            width: 1288px;</span><br><span class="line">            margin: 0px auto;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            justify-content: space-around;</span><br><span class="line">            align-content: center;</span><br><span class="line"></span><br><span class="line">            margin-top: 10px;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.tool</span> <span class="selector-tag">div</span>{</span></span><br><span class="line">            height: 60px;</span><br><span class="line">            width: 8%;</span><br><span class="line"><span class="css">            <span class="comment">/*background-color: orange;*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999999</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.color1</span>{</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#b3ffc1</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.color2</span>{</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#923810</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.color3</span>{</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#7b5f3e</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.color4</span>{</span></span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.size1</span>,<span class="selector-class">.size2</span>,<span class="selector-class">.size3</span>,<span class="selector-class">.size4</span>{</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 60px;</span><br><span class="line">        }</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/head></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">canvas</span> <span class="attr">height</span>=<span class="string">"555"</span> <span class="attr">width</span>=<span class="string">"1288"</span>></span><span class="symbol"><</span>/canvas><span class="comment"><!--射程行内--></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tool"</span>></span></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"color1"</span> <span class="attr">onclick</span>=<span class="string">"change_color('#b3ffc1')"</span>></span><span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"color2"</span> <span class="attr">onclick</span>=<span class="string">"change_color('#923810')"</span>></span><span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"color3"</span> <span class="attr">onclick</span>=<span class="string">"change_color('#923810')"</span>></span><span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"color4"</span> <span class="attr">onclick</span>=<span class="string">"change_color('skyblue')"</span>></span><span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"size1"</span>></span> x1 <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"size2"</span>></span> x2 <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"size3"</span>></span> x4 <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"size4"</span>></span> x8 <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/div></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">script</span>></span></span></span><br><span class="line"><span class="css">    <span class="comment">/*canvas 空在if中代表false*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*canvas属于html5，ie678不好使*/</span></span></span><br><span class="line">    var canvas = document.getElementsByTagName("canvas")[0];</span><br><span class="line">    var context = canvas.getContext("2d");</span><br><span class="line">    var color = "black";</span><br><span class="line"><span class="css">    <span class="comment">/*moveto 起始点，lineTo终点，lineWidth = 20,strokeStyle = "red"*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*stroke 画*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*  画布.beginPath() 新路径*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/*传参不一样 函数一样  ：重载*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/*开关flag通常是false的*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*变量污染*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*鼠标按下*/</span></span></span><br><span class="line">    var flag = false;</span><br><span class="line">    canvas.onmousedown = function (e) {</span><br><span class="line"></span><br><span class="line">        var x = e.clientX;</span><br><span class="line">        var y = e.clientY;</span><br><span class="line">        context.strokeStyle = color;</span><br><span class="line"><span class="css">        <span class="selector-tag">context</span><span class="selector-class">.moveTo</span>(<span class="selector-tag">x</span>,<span class="selector-tag">y</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">context</span><span class="selector-class">.beginPath</span>();</span></span><br><span class="line">        flag = true;</span><br><span class="line">    };</span><br><span class="line"><span class="css">    <span class="comment">/*鼠标移动*/</span></span></span><br><span class="line">    canvas.onmousemove = function (e) {</span><br><span class="line">        if (flag) {</span><br><span class="line">            var x = e.clientX;</span><br><span class="line">            var y = e.clientY;</span><br><span class="line"><span class="css">            <span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">e</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">context</span><span class="selector-class">.lineTo</span>(<span class="selector-tag">x</span>,<span class="selector-tag">y</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">context</span><span class="selector-class">.stroke</span>();</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    };</span><br><span class="line"><span class="css">    <span class="comment">/*鼠标弹起*/</span></span></span><br><span class="line">    canvas.onmouseup = function () {</span><br><span class="line">        flag = false;</span><br><span class="line">    };</span><br><span class="line"><span class="css">    <span class="comment">/*鼠标移出*/</span></span></span><br><span class="line">    canvas.onmouseout = function () {</span><br><span class="line">        flag = false;</span><br><span class="line">    };</span><br><span class="line">    var a;</span><br><span class="line">    function change_color(a) {</span><br><span class="line">        color = a;</span><br><span class="line">    }</span><br><span class="line"><span class="xml"><span class="symbol"><</span>/script></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/html></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h2><h3 id="n-位数的倒序"><a href="#n-位数的倒序" class="headerlink" title="n 位数的倒序"></a>n 位数的倒序</h3><p>比方说输入个 1234，输出的结果 4321</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> number = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入一个4位数"</span>));</span><br><span class="line"><span class="keyword">var</span> d = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(number > <span class="number">0</span>){</span><br><span class="line">        d = ( number % <span class="number">10</span> );    <span class="comment">/*取个位*/</span></span><br><span class="line">        sum = sum * <span class="number">10</span> + d;     <span class="comment">/*倒序求和*/</span></span><br><span class="line">        number = <span class="built_in">parseInt</span>(number / <span class="number">10</span>);     <span class="comment">/*把number缩小*/</span></span><br><span class="line">    }</span><br><span class="line">alert(sum);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="从-0-100，非-3-的倍数的和相加大于-2000-时的位数"><a href="#从-0-100，非-3-的倍数的和相加大于-2000-时的位数" class="headerlink" title="从 0~100，非 3 的倍数的和相加大于 2000 时的位数"></a>从 0~100，非 3 的倍数的和相加大于 2000 时的位数</h3><p>一个判断比较装逼的语句 <strong><code>i / 3 == parseInt(i / 3)</code></strong> 这个语句也可以判断是否能被三整除，如果能整除，返回 True，否则返回 False</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*  这里的i是全局变量   */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i <= <span class="number">100</span>;i++){        <span class="comment">/*有些场景的话会更好*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">3</span> != <span class="number">0</span> ){    <span class="comment">/* i / 3 == parseInt(i / 3) 也能判断*/</span></span><br><span class="line">            sum += i;</span><br><span class="line">            <span class="keyword">if</span>(sum >= <span class="number">2000</span>){</span><br><span class="line">                alert(<span class="string">"第"</span> + i + <span class="string">"位加到了2000,和为"</span> + sum);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">/*这个break是跳出所有的if，跳出了for*/</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端05_CSS】定位、吸顶效果、变形、动画、原生响应式、分页条</title>
      <link href="p/42910.html"/>
      <url>p/42910.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="定位-Positiond"><a href="#定位-Positiond" class="headerlink" title="定位 Positiond"></a>定位 Positiond</h1><p>通过定位可以把元素放到屏幕中想要的位置</p><ul><li>定位跟浮动有些类似，都是<strong>漂浮起来的</strong>（脱离原来的文档流）</li><li>2017 年有5种</li></ul><p>通常会配合left，top值</p><h2 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 relative"></a>相对定位 relative</h2><p><code>position: relative;</code> 相对于 <strong>原来的位置</strong> 定位，<strong>左上角为坐标原点</strong>。原来的位置会站着空间，依赖于原来的位置，==类似漂浮起来，这个没有空间，会把别的元素覆盖掉==</p><h2 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位 absolute"></a>绝对定位 absolute</h2><p><code>position: absolute;</code> 和窗口左上角进行定位，一般他的 <strong>父对象</strong> 要配合 <strong><code>position: relative;</code></strong> ，==如果父元素有相对定位，那么跟参考父元素，如果父元素没有相对定位，那么就是根据窗口左上方定位==（浏览器工作原理）<br> 嵌套的话，relative比作是糖，糖在谁身上就跟谁走。为了消除隐患，要给就给他爸，要么就不给</p><h2 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位 fixed"></a>固定定位 fixed</h2><p><code>position: fixed;</code> 一般用来做右边的导航栏的，这时候就把 left 换成 right，换右边作为参考系，一直都能看到，<strong>和窗口左上角定位</strong></p><h2 id="吸顶效果-sticky"><a href="#吸顶效果-sticky" class="headerlink" title="吸顶效果 sticky"></a>吸顶效果 sticky</h2><p>效果如下<br><a href="https://img-blog.csdnimg.cn/20191126101139836.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126101139836.gif" src="/img/loading.gif" class="lazyload"></a><br>关键代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">sticky</span>;</span><br><span class="line"><span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;<span class="comment">/*这里必须声明一个值，否则不生效*/</span></span><br></pre></td></tr></tbody></table></figure></div><p>苹果浏览器需要设置兼容</p><h2 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位 static"></a>静态定位 static</h2><p>默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>水平对齐：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#img1{</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">img</span> <span class="attr">src</span>=<span class="string">"../img/link-icon2.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"img1"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">span</span> <span class="attr">id</span>=<span class="string">"span1"</span>></span>山东<span class="tag">< /<span class="attr">span</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="变形-Transform"><a href="#变形-Transform" class="headerlink" title="变形 Transform"></a>变形 Transform</h1><p>顾名思义，就是用来形变的</p><p>属性有如下：</p><ul><li><p>位移 <strong>Translate</strong>  <code>transform: translate(5px, 8px)</code><br>  如果参数是 2 个组合，那么属性之间必须要加逗号<br>  <code>translate3d</code> 必须要三个值都有</p></li><li><p>缩放 <strong>Scale</strong> ：<code>transform: scale(5);</code> 里面放整数<br>  一个值是 x，y 轴同时缩放，两个值是分别定制 x 轴，y 轴<br>  这个是有 3d 的，只是 z 轴是厚度，不是很明显，所以只需要记住前两个就行</p></li><li><p>旋转  <strong>Rotate</strong> : <code>transform: rotate(90deg);</code> 注意他的单位是 <strong>度</strong> <strong>deg</strong><br>rotate() = rotateZ() 默认的</p></li><li><p>错切 <strong>Skew</strong> ：倾斜一定的角度    </p></li></ul><p>以上属性都可以设置起点  <strong><code>transform-origin:top left</code></strong>  左上角为标准，默认是 center</p><hr><h1 id="动画-Animation"><a href="#动画-Animation" class="headerlink" title="动画 Animation"></a>动画 Animation</h1><p>以下讲的是 CSS 中的动画</p><p>步骤如下</p><ol><li><p>首先需要一个动画描述，这里用到 <code>@keyframes</code> 来声明，后面加动作的名字，我这里是 test ，演示如下</p></li><li><p>里面的声明也要记得带括号，有两套方法，第一种是 from、to 组合，分别代表动画进程的 0% 以及 100%，第二种方法是用百分号来写，进程比例就是函数的名字, 25%，50% 是自己写的，写0~100%之内的就行，两套方法的使用如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*第一种方法*/</span></span><br><span class="line"><span class="keyword">@keyframes</span> test {</span><br><span class="line">            <span class="selector-tag">from</span>{<span class="comment">/* 0%开始*/</span></span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">20px</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="selector-tag">to</span>{</span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">200px</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二种方法*/</span></span><br><span class="line"><span class="keyword">@keyframes</span> test1 {</span><br><span class="line">        25%{</span><br><span class="line">               <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">20px</span>);</span><br><span class="line">           }</span><br><span class="line">           50%{</span><br><span class="line">               <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">110px</span>);</span><br><span class="line">           }</span><br><span class="line">           75%{</span><br><span class="line">               <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">20px</span>);</span><br><span class="line">           }</span><br><span class="line">       }</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>然后在想要做动画的元素的 style 里写 <strong><code>animation: text 4s;</code></strong> 其中<br> 第一个参数为 <strong>执行的动画名</strong><br>  第二个参数为 <strong>动画持续时间</strong><br>  第三个参数为 <strong>变换方法</strong>，有线性变换 linear 或是其他的，默认是一直变快的<br>  第四个参数为 <strong>延迟</strong> 几秒后播放动画<br>  第五个参数为 <strong>重复次数</strong> ，可以写具体的整数值，其中 <strong>infinite</strong> 是无限次<br>  第六个参数为 <strong>描述</strong>，定义动画正着放还是反着放</p><p> 这是我在Div中加的一个动画：<br> < img width = 50% src = “<a href="https://img-blog.csdnimg.cn/20190731225702527.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190731225702527.png"></a></p></li></ol><hr><h1 id="原生响应式"><a href="#原生响应式" class="headerlink" title="原生响应式"></a>原生响应式</h1><p>原生的响应式用 <code>@media screen</code> 来写，用 <code>and</code> 链接</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol"><</span>!DOCTYPE html></span><br><span class="line"><span class="tag">< <span class="attr">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">title</span>></span>Title<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag">< <span class="attr">style</span>></span></span><br><span class="line"></span><br><span class="line">        /*大屏幕，pc</span><br><span class="line">        注意and后面要有空格，不然不好使*/</span><br><span class="line">        @media screen and (min-width: 888px){</span><br><span class="line">            .box{</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 200px;</span><br><span class="line">            }</span><br><span class="line">            .btn{</span><br><span class="line">                display: none;</span><br><span class="line">            }</span><br><span class="line">            .box ul{</span><br><span class="line">                overflow: hidden;</span><br><span class="line">            }</span><br><span class="line">            .box li{</span><br><span class="line">                width: 80px;</span><br><span class="line">                height: 38px;</span><br><span class="line">                list-style: none;</span><br><span class="line">                text-align: center;</span><br><span class="line">                line-height: 38px;</span><br><span class="line">                float: left;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        /*中屏幕，平板*/</span><br><span class="line">        @media screen and (max-width: 887px) and (min-width: 555px){</span><br><span class="line">            ul,li,p{</span><br><span class="line">                margin: 0;</span><br><span class="line">                padding: 0;</span><br><span class="line">            }</span><br><span class="line">            .box{</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 300px;</span><br><span class="line">            }</span><br><span class="line">            .btn{</span><br><span class="line">                width: 100%;</span><br><span class="line">                background-color: deepskyblue;</span><br><span class="line">                height: 38px;</span><br><span class="line">                text-align: center;</span><br><span class="line">                line-height: 38px;</span><br><span class="line">            }</span><br><span class="line">            .box ul{</span><br><span class="line">                overflow: hidden;</span><br><span class="line">            }</span><br><span class="line">            .box li{</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 27px;</span><br><span class="line">                list-style: none;</span><br><span class="line">                text-align: center;</span><br><span class="line">                line-height: 38px;</span><br><span class="line">                background-color: deepskyblue;</span><br><span class="line">            }</span><br><span class="line">            .box ul{</span><br><span class="line">                width: 100%;</span><br><span class="line">                display: none;</span><br><span class="line">            }</span><br><span class="line">            .btn:active + ul{</span><br><span class="line">                display: block;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        /*小屏幕的时候，手机之类的*/</span><br><span class="line">        @media screen and (max-width:554px) {</span><br><span class="line">            ul,li,p{</span><br><span class="line">                margin: 0;</span><br><span class="line">                padding: 0;</span><br><span class="line">            }</span><br><span class="line">            .box{</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 300px;</span><br><span class="line">            }</span><br><span class="line">            .btn{</span><br><span class="line">                width: 34px;</span><br><span class="line">                height: 34px;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">            }</span><br><span class="line">            .btn:before{</span><br><span class="line">                content: "";</span><br><span class="line">                display: inline-block;</span><br><span class="line">                width: 32px;</span><br><span class="line">                height: 32px;</span><br><span class="line">                border: 1px solid black;</span><br><span class="line">                background-image: url("img/menu.png");</span><br><span class="line">                background-repeat: no-repeat;</span><br><span class="line">                background-size: 100% 100%;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            .box ul{</span><br><span class="line">                overflow: hidden;</span><br><span class="line">            }</span><br><span class="line">            .box li{</span><br><span class="line">                width: 100%;</span><br><span class="line">                height: 27px;</span><br><span class="line">                list-style: none;</span><br><span class="line">                text-align: center;</span><br><span class="line">                line-height: 38px;</span><br><span class="line">                background-color: deepskyblue;</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">            .box ul{</span><br><span class="line">                width: 100%;</span><br><span class="line">                display: none;</span><br><span class="line">            }</span><br><span class="line">            .btn:active + ul{</span><br><span class="line">                display: block;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    <span class="symbol"><</span>/style></span><br><span class="line"><span class="symbol"><</span>/head></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"box"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>></span></span><br><span class="line">            点我</span><br><span class="line">        <span class="symbol"><</span>/div></span><br><span class="line">        <span class="tag">< <span class="attr">ul</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span>></span>厂家直销<span class="symbol"><</span>/li></span><br><span class="line">        <span class="symbol"><</span>/ul></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br><span class="line"><span class="symbol"><</span>/html></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="分页条"><a href="#分页条" class="headerlink" title="分页条"></a>分页条</h1><p>效果如下<br>< img width= 60% src=”<a href="https://img-blog.csdnimg.cn/20190726222120676.png">" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190726222120676.png"></a><br>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">        .ul1 li{</span><br><span class="line">            float: left;</span><br><span class="line">            list-style: none;</span><br><span class="line">            width: 62px;</span><br><span class="line">            height: 25px;</span><br><span class="line">            background-color: #fff5c9;</span><br><span class="line">            margin-left: 30px;</span><br><span class="line">            color: #7b5f3e;</span><br><span class="line">            border: 1px solid #ffe1d0;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">        }</span><br><span class="line">        li{/*li div也可以*/</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 25px;/*块级也可以这么玩，块居中*/</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        .ul1 li:hover{</span><br><span class="line">            color: white;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        }</span><br><span class="line">        .ul1 .li2{</span><br><span class="line">            width: 20px;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    <span class="symbol"><</span>/style></span><br><span class="line"><span class="symbol"><</span>/head></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">ul</span> <span class="attr">class</span>=<span class="string">"ul1"</span>></span></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    首页</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line"></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    上一页</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line"></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    1</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    2</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    3</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    4</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    5</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    6</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    7</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    8</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    9</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    10</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    下一页</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line"></span><br><span class="line">            <span class="tag">< <span class="attr">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>></span></span><br><span class="line">                <span class="tag">< <span class="attr">div</span>></span></span><br><span class="line">                    末页</span><br><span class="line">                <span class="symbol"><</span>/div></span><br><span class="line">            <span class="symbol"><</span>/li></span><br><span class="line">        <span class="symbol"><</span>/ul></span><br><span class="line">    <span class="symbol"><</span>/div></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端04_布局】浮动、弹性盒子、双飞翼、品字、网格_、盒子模型</title>
      <link href="p/62555.html"/>
      <url>p/62555.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="浮动-Folat"><a href="#浮动-Folat" class="headerlink" title="浮动 Folat"></a>浮动 Folat</h1><p>作用：把 <strong>块级标签放在同一行上</strong></p><ul><li>用在 <strong>块级</strong>，行级和行内块不需要</li><li>通常是用 <code>float: left;</code>，也有右浮动<br>  右浮动是从右往左写的</li><li>浮动:脱离原来的文档流，并且失去他所占的空间，其他的标签会挤上去（浮动的方向是从屏幕到你眼睛的方向）<h2 id="浮动带来的影响"><a href="#浮动带来的影响" class="headerlink" title="浮动带来的影响"></a>浮动带来的影响</h2>浮动的元素不占原来的空间，下面的元素会挤上来（浏览器设计：文本不会被浮动的元素盖住）<h2 id="消除浮动带来的影响"><a href="#消除浮动带来的影响" class="headerlink" title="消除浮动带来的影响**"></a>消除浮动带来的影响**</h2></li></ul><ol><li>在浮动元素的 <strong>父元素 上加属性 <code>overflow: hidden;</code></strong> W3C 提出的方法</li><li>消除浮动第二种方法：在浮动的元素里建一个空的div，即没有高的div，然后给其一个类cle，然后在这个类属性中加上 <code>clear: both;/*清除浮动*/</code>，代码片如下：</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.cle{</span><br><span class="line">        clear: both;/*清除浮动*/</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fa"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>></span>1<span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>></span>2<span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>></span>3<span class="symbol"><</span>/div></span><br><span class="line">      <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cle"</span>></span><span class="symbol"><</span>/div><span class="comment"><!--空元素，专门用来清除浮动--></span></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text"</span>></span><span class="symbol"><</span>/div></span><br></pre></td></tr></tbody></table></figure></div><p> 没有浮动的：</p> <a href="https://img-blog.csdnimg.cn/20190725094235240.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="20%" data-src="https://img-blog.csdnimg.cn/20190725094235240.png" src="/img/loading.gif" class="lazyload"></a> 有浮动的：同行显示     <a href="https://img-blog.csdnimg.cn/20190725094420292.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="70%" data-src="https://img-blog.csdnimg.cn/20190725094420292.png" src="/img/loading.gif" class="lazyload"></a><hr><h1 id="布局方案：弹性盒子-Flex-CSS-3-0"><a href="#布局方案：弹性盒子-Flex-CSS-3-0" class="headerlink" title="布局方案：弹性盒子 Flex (CSS 3.0)"></a>布局方案：弹性盒子 Flex (CSS 3.0)</h1><p>通常用来 <strong>快速布局</strong>，优点是 <strong>不需要清除浮动</strong> ，其 <code>display:flex;</code> 属性给 <strong>父元素</strong>。</p><p>弹性盒子有 <strong>弹性容器 Flex-container</strong> 和 <strong>弹性子元素 Flex-item</strong></p><p>IE6、7、8 都不适用，因为这几个版本不支持 CSS 3.0</p><p><strong>Flex 是 CSS 3.0</strong></p><p>属性有如下：</p><ul><li><p>设置 <strong>水平距离</strong>  <code>justify-content: center;</code> 还有flex-end,flex-start，space-between自动取间距-左中右,(space-around 左中右，左右有空隙，3块儿或三块以上，1块在最左边，2块是在左右两端)</p></li><li><p>设置 <strong>垂直距离</strong> <code>align-items: center;</code></p></li><li><p>反转 （相当于右浮动 <code>flex-direction: row-reverse;</code></p></li><li><p>纵向排列 <code>flex-direction: column;</code></p></li><li><p>纵向反向排列 <code>flex-direction: column-reverse;</code></p><p>创建步骤如下:</p></li><li><p>首先创建两个类 <strong>Flex-item</strong>，<strong>Flex-container</strong>，分别是弹性子元素，弹性盒子</p></li><li><p>在Body中加入以下类</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Flex-container"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Flex-item"</span>></span></span><br><span class="line">        1</span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Flex-item Sec"</span>></span></span><br><span class="line">        2</span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Flex-item"</span>></span></span><br><span class="line">        3</span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/div></span><br></pre></td></tr></tbody></table></figure></div><ul><li>在 Style 中写类的属性，==布局的属性要放在 <strong>父对象</strong>，也就是弹性盒子里，Flex-container中，这个要记一下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!--弹性盒子是有弹性的，多了不会换行，只会挤小了  --></span></span><br><span class="line"> <span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">     <span class="selector-class">.Flex-item</span>{</span></span><br><span class="line">         width: 100px;</span><br><span class="line">         height: 100px;</span><br><span class="line">         background-color: deepskyblue;</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line"><span class="css">     <span class="selector-class">.Sec</span>{</span></span><br><span class="line">         background-color: pink;</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line"><span class="css">     <span class="selector-class">.Flex-container</span>{</span></span><br><span class="line">         width: 500px;</span><br><span class="line"><span class="css">         <span class="selector-tag">height</span><span class="selector-pseudo">:500px</span>;</span></span><br><span class="line">         border: 1px salmon solid;</span><br><span class="line"><span class="css">         <span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;      <span class="comment">/*弹性盒子必须要设置的*/</span></span></span><br><span class="line"><span class="css">                             <span class="comment">/*父元素设置就好*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/* flex-direction: row-reverse;   */</span>     <span class="comment">/*反转，相当于右浮动*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*column纵向排列，column-reverse纵向反转排列*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">         <span class="comment">/*设置水平距离*/</span></span></span><br><span class="line"><span class="css">         <span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;        <span class="comment">/*居中对齐*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*flex-end,flex-start*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*space-between自动取间距-左中右，*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*space-around 左中右，左右有空隙，3块儿或三块以上，1块在最左边，2块是在左右两端*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">         <span class="comment">/*设置垂直距离*/</span></span></span><br><span class="line">         align-items: center;</span><br><span class="line"><span class="css">         <span class="comment">/*flex-end在最下面开始*/</span></span></span><br><span class="line"><span class="css">         <span class="comment">/*center中间*/</span></span></span><br><span class="line"></span><br><span class="line">     }</span><br><span class="line"><span class="xml"> <span class="symbol"><</span>/style></span></span><br></pre></td></tr></tbody></table></figure></div><p>写完之后的样式如下图<br><a href="https://img-blog.csdnimg.cn/20190725105848856.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="40%" data-src="https://img-blog.csdnimg.cn/20190725105848856.png" src="/img/loading.gif" class="lazyload"></a></p><hr><h2 id="弹性盒子内容补充"><a href="#弹性盒子内容补充" class="headerlink" title="弹性盒子内容补充"></a>弹性盒子内容补充</h2><p>首先我们知道弹性盒子是解决块级元素同行的问题。</p><ul><li>弹性盒子的换行 <code>flex-wrap: wrap;</code></li><li>用来 <strong>修改 flex-wrap 的属性</strong>  <code>align-content: flex-start;</code><br>  要区分好  <strong>垂直距离</strong>  <code>align-items: center;</code></li><li>弹性盒子也可以设置垂直居中，这就用到了以上 两个的组合</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">flex-wrap</span>: <span class="selector-tag">wrap</span>;</span><br><span class="line"><span class="selector-tag">align-content</span>: <span class="selector-tag">space-between</span>;</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="布局方案：圣杯（浮动-负边距）"><a href="#布局方案：圣杯（浮动-负边距）" class="headerlink" title="布局方案：圣杯（浮动+负边距）"></a>布局方案：圣杯（浮动+负边距）</h1><hr><h1 id="布局方案：双飞翼布局（浮动-负边距）"><a href="#布局方案：双飞翼布局（浮动-负边距）" class="headerlink" title="布局方案：双飞翼布局（浮动+负边距）"></a>布局方案：双飞翼布局（浮动+负边距）</h1><p>效果如下</p><p><a href="https://img-blog.csdnimg.cn/20191107083913303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191107083913303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>代码如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>双飞翼<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>{</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.text</span>{</span></span><br><span class="line">            float: left;</span><br><span class="line">            margin: 0 300px 0 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>{</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#7aff9b</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*margin-left 一个负值，就会挤到上边*/</span></span></span><br><span class="line">            margin-left: -100%;</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.right</span>{</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ffb48f</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*右边的框，只需给他的margin-left一个负的宽度，就能挤上去*/</span></span></span><br><span class="line">            margin-left: -300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.6</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.col</span>{</span></span><br><span class="line">            float: left;</span><br><span class="line">        }</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box col"</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text"</span>></span></span></span><br><span class="line">        main</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left col"</span>></span>left<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right col"</span>></span>right<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="理解核心"><a href="#理解核心" class="headerlink" title="理解核心"></a>理解核心</h2><ul><li>左面的框给的是 <code>margin-left: -100%;</code> 一个负的一行</li></ul><p><a href="https://img-blog.csdnimg.cn/20191107084030990.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191107084030990.gif" src="/img/loading.gif" class="lazyload"></a></p><ul><li>右边的给了它负的宽度，所以就挤了上去</li></ul><p><a href="https://img-blog.csdnimg.cn/20191107084035692.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191107084035692.gif" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="布局方案：品字形"><a href="#布局方案：品字形" class="headerlink" title="布局方案：品字形"></a>布局方案：品字形</h1><p>类似这个样子，但是着实有点丑…<br>但是 <strong>重要的是学习思路！！</strong><br><a href="https://img-blog.csdnimg.cn/20191118201533385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191118201533385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">        <span class="selector-class">.div1</span>,<span class="selector-class">.div2</span>,<span class="selector-class">.div3</span>{</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#7aff9b</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.div1</span>{</span></span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.div2</span>{</span></span><br><span class="line">            display: inline-block;</span><br><span class="line">            margin-left: 50%;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.div3</span>{</span></span><br><span class="line">            display: inline-block;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*这里给他2倍它的宽度*/</span></span></span><br><span class="line">            margin-left: -200px;</span><br><span class="line">        }</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>></span>1<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>></span>2<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>></span>3<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="布局方案：阿里面试"><a href="#布局方案：阿里面试" class="headerlink" title="布局方案：阿里面试"></a>布局方案：阿里面试</h1><blockquote><p>请写出如下布局，要求不允许用定位，所有的分区都在同一级(也就是这五个div是兄弟节点）<br><a href="https://img-blog.csdnimg.cn/20191118202440677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191118202440677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">       <span class="selector-class">.d1</span>{</span></span><br><span class="line">           width: 70%;</span><br><span class="line">           height: 300px;</span><br><span class="line">           float: left;</span><br><span class="line">           background-color: skyblue;</span><br><span class="line">       }</span><br><span class="line"><span class="css">       <span class="selector-class">.d2</span>{</span></span><br><span class="line">           width: 30%;</span><br><span class="line">           height: 150px;</span><br><span class="line">           </span><br><span class="line"><span class="css">           <span class="comment">/*理解这里的浮动*/</span></span></span><br><span class="line">           float: right;</span><br><span class="line">           background-color: orange;</span><br><span class="line">       }</span><br><span class="line"><span class="css">       <span class="selector-class">.d3</span>{</span></span><br><span class="line">           width: 30%;</span><br><span class="line">           height: 450px;</span><br><span class="line">           </span><br><span class="line"><span class="css">            <span class="comment">/*理解这里的浮动*/</span></span></span><br><span class="line">           float: right;</span><br><span class="line">           background-color: salmon;</span><br><span class="line">       }</span><br><span class="line"><span class="css">       <span class="selector-class">.d4</span>{</span></span><br><span class="line">           width: 35%;</span><br><span class="line">           height: 300px;</span><br><span class="line">           float: right;</span><br><span class="line">           background-color: saddlebrown;</span><br><span class="line">       }</span><br><span class="line"><span class="css">       <span class="selector-class">.d5</span>{</span></span><br><span class="line">           width: 35%;</span><br><span class="line">           height: 300px;</span><br><span class="line">           float: left;</span><br><span class="line">           background-color: aqua;</span><br><span class="line">       }</span><br><span class="line"><span class="xml">   <span class="symbol"><</span>/style></span></span><br><span class="line">   </span><br><span class="line"><span class="xml">   <span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">   <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>></span></span></span><br><span class="line"><span class="xml">       <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d1"</span>></span>1<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">       <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d2"</span>></span>2<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">       <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d3"</span>></span>3<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">       <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d4"</span>></span>4<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">       <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d5"</span>></span>5<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">   <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="布局方案：网格-grid（CSS-3-0）"><a href="#布局方案：网格-grid（CSS-3-0）" class="headerlink" title="布局方案：网格 grid（CSS 3.0）*"></a>布局方案：网格 grid（CSS 3.0）*</h1><p>号称是最牛逼的布局方案！<br>牛逼在哪里呢？一步一步来看~</p><h2 id="实例：九宫格"><a href="#实例：九宫格" class="headerlink" title="实例：九宫格"></a>实例：九宫格</h2><blockquote><p>首先用网格来做个九宫格试试<br><a href="https://img-blog.csdnimg.cn/20191120200351703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120200351703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>网格测试<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line">        *{</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="comment">/*九宫格：网格容器*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>{</span></span><br><span class="line"><span class="css">            <span class="comment">/*设置容器为网格*/</span></span></span><br><span class="line">            display: grid;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*列宽*/</span></span></span><br><span class="line">            grid-template-columns: repeat(3,100px);</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*行高*/</span></span></span><br><span class="line">            grid-template-rows: repeat(3,100px);</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*间距：第一个值为行之间的间距、第二个为列之间的间距*/</span></span></span><br><span class="line">            gap: 10px 10px;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.item</span>{</span></span><br><span class="line"><span class="css">            <span class="comment">/*设置所有块的属性*/</span></span></span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/head></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>></span></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>></span>1<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>></span>2<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item3"</span>></span>3<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item4"</span>></span>4<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item5"</span>></span>5<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item6"</span>></span>6<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item7"</span>></span>7<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item8"</span>></span>8<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item9"</span>></span>9<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br></pre></td></tr></tbody></table></figure></div><p>看，利用网格能够快速的布局</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="基础：单位"><a href="#基础：单位" class="headerlink" title="基础：单位"></a>基础：单位</h3><ul><li><code>fr</code>：倍数关系 ，例如 <code>grid-template-columns: 1fr 2fr;</code> 就是$\cfrac{第一列宽度}{第二列宽度}$  = $\cfrac{1}{2}$</li><li><code>em</code>：相对单位，相对于父元素的单位</li><li><code>rem</code>：也是相对单位，但是它相对于的是 <strong>根元素</strong>，也就是 <strong>Html</strong></li></ul><h3 id="设置列宽-amp-属性中的写法"><a href="#设置列宽-amp-属性中的写法" class="headerlink" title="设置列宽 & 属性中的写法"></a>设置列宽 & 属性中的写法</h3><ul><li>规定每个列的宽度：<code>grid-template-columns: 100px 100px 100px;</code> ，后面写几个代表有多少列，比方上面的九宫格，就是三列</li><li>九宫格3列的快速写法就是 <code>grid-template-columns: repeat(3,100px);</code> 用 <strong><code>repeat(次数，长度);</code></strong>，代表重复 3 次 的 100px</li><li>属性里也可以写 <strong><code>auto</code></strong>，代表自适应，（比方说 <code>grid-template-columns: 100px auto 100px;</code>，代表中间列的宽度自适应）</li><li>属性里可以写 <strong><code>minmax()</code></strong>，规定列宽的 <strong>最小值和最大值</strong>，（例如：<code>grid-template-columns: 1fr 2fr minmax(500px,1000px);</code>）</li><li>属性里可以写 <strong><code>auto-fill</code></strong>，顾名思义，这玩意叫做自动填充，尽量填满通常跟 <code>repeat</code> 结合使用（例如：<code>grid-template-columns: repeat(auto-fill,100px);</code>）<br><a href="https://img-blog.csdnimg.cn/2019112020321293.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019112020321293.gif" src="/img/loading.gif" class="lazyload"></a></li></ul><h3 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h3><p>行高用属性 <code>grid-template-rows: repeat(3,100px);</code><br>属性中的用法同理列宽</p><h3 id="间距"><a href="#间距" class="headerlink" title="间距"></a>间距</h3><ul><li>列间距：<code>grid-column-gap: 20px;</code></li><li>行间距：<code>grid-row-gap: 20px;</code></li><li>组合属性：<code>gap: 行间距 列间距;</code> （例如 <code>gap: 40px 10px;</code>）</li></ul><h3 id="线"><a href="#线" class="headerlink" title="线"></a>线</h3><p>区域线都是从1开始，依次排列的<br>这里全当听个响，下面会有例子，慢慢理解</p><ul><li><code>grid-column-start: 1;</code> 列线 第一根线 开始</li><li><code>grid-column-end: c-end;</code> 列线 c区域 的结束</li><li><code>grid-row-start:c-start;</code> 行线 c区域 开始</li><li><code>grid-row-end: f-end;</code> 行线 f区域 结束</li><li>组合写法 <code>grid-area: 1/2/3/4;</code> 分别代表 <code>row-start</code> / <code>column-start</code> / <code>row-end</code> / <code>column-end</code><h4 id="其他写法"><a href="#其他写法" class="headerlink" title="其他写法"></a>其他写法</h4></li><li><code>grid-column-start: span 2;</code> 跨度 2 列</li></ul><h3 id="划分区域-amp-为区域取名字"><a href="#划分区域-amp-为区域取名字" class="headerlink" title="划分区域 & 为区域取名字"></a>划分区域 & 为区域取名字</h3><blockquote><p>比方说我们要给九宫格的每一块设置一个名字</p></blockquote><ul><li><strong><code>grid-template-areas: "a b c" "d e f" "g h i";</code></strong> ，可以用这个关键字给九宫格的每个区域划分名字，想起什么名字就起什么名字</li><li>注意格式，比方说九宫格你可以这么写代码<br><a href="https://img-blog.csdnimg.cn/201911202102077.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/201911202102077.png" src="/img/loading.gif" class="lazyload"></a><br>也可以这么写，都行，看个人了<br><a href="https://img-blog.csdnimg.cn/20191120210218504.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120210218504.png" src="/img/loading.gif" class="lazyload"></a><br>划分的区域如下所示，对应着起名字的相应位置<br><a href="https://img-blog.csdnimg.cn/2019112020524211.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019112020524211.gif" src="/img/loading.gif" class="lazyload"></a>取完名字我们就可以随便的把玩网格</li></ul><h4 id="换位置"><a href="#换位置" class="headerlink" title="换位置"></a>换位置</h4><blockquote><p>我想把内容为1的div移动到上图中的 c 区域</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item1</span>{ </span><br><span class="line">           <span class="attribute">grid-area</span>: c;</span><br><span class="line">       }</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!--整体代码如下--></span></span><br><span class="line"><span class="meta">html</span>></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>网格测试<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line">        *{</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="comment">/*网格容器*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>{</span></span><br><span class="line"><span class="css">            <span class="comment">/*设置容器为网格*/</span></span></span><br><span class="line">            display: grid;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*列宽*/</span></span></span><br><span class="line">            grid-template-columns: repeat(3,100px);</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*行高*/</span></span></span><br><span class="line">            grid-template-rows: repeat(3,100px);</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*间距：第一个值为行之间的间距、第二个为列之间的间距*/</span></span></span><br><span class="line">            gap: 10px 10px;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="comment">/*区域起名字随便起，注意格式就好*/</span></span></span><br><span class="line">            grid-template-areas: "a b c""d e f""g h i";</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.item</span>{</span></span><br><span class="line"><span class="css">            <span class="comment">/*设置所有块的属性*/</span></span></span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.item1</span>{</span></span><br><span class="line"><span class="css">            <span class="comment">/*关键代码：item1是内容为1的div块*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*grid-area: c; 是把这块放到c区域*/</span></span></span><br><span class="line">            grid-area: c;</span><br><span class="line">        }</span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/style></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/head></span></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">body</span>></span></span></span><br><span class="line"><span class="xml">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>></span></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>></span>1<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>></span>2<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item3"</span>></span>3<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item4"</span>></span>4<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item5"</span>></span>5<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item6"</span>></span>6<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item7"</span>></span>7<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item8"</span>></span>8<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item9"</span>></span>9<span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml">    <span class="symbol"><</span>/div></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/body></span></span><br><span class="line"><span class="xml"><span class="symbol"><</span>/html></span></span><br></pre></td></tr></tbody></table></figure></div><p>交换的效果如下<br><a href="https://img-blog.csdnimg.cn/20191120210547900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120210547900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="玩弄区域线-gt-换位置"><a href="#玩弄区域线-gt-换位置" class="headerlink" title="玩弄区域线 => 换位置"></a>玩弄区域线 => 换位置</h4><blockquote><p>有没有其他的方法可以换位置呢？答案是有的</p></blockquote><p>首先需要了解一下这个<br><a href="https://img-blog.csdnimg.cn/20191120211704125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120211704125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>我写了以下的方法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item1</span>{</span><br><span class="line"><span class="comment">/*移动第一块*/</span></span><br><span class="line">          <span class="comment">/*设置列的开始*/</span></span><br><span class="line">          <span class="attribute">grid-column-start</span>: c-start;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">/*列结束*/</span></span><br><span class="line">          <span class="attribute">grid-column-end</span>: c-end;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">/*行开始*/</span></span><br><span class="line">          <span class="attribute">grid-row-start</span>:c-start;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">/*行结束*/</span></span><br><span class="line">          <span class="attribute">grid-row-end</span>: f-end;</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure></div><p>样式如下<br><a href="https://img-blog.csdnimg.cn/20191120211853712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120211853712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h3 id="玩弄线-gt-换位置"><a href="#玩弄线-gt-换位置" class="headerlink" title="玩弄线 => 换位置"></a>玩弄线 => 换位置</h3><blockquote><p>那我不用区域线设置的名字，用自带的线的顺序可不可以换位置呢？</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item1</span>{</span><br><span class="line"><span class="comment">/*我要把第一块放到区域c中*/</span></span><br><span class="line">          <span class="comment">/*第一行，第三列，第二行，第四列，逆时针绕圈圈*/</span></span><br><span class="line">          <span class="attribute">grid-area</span>: <span class="number">1</span>/<span class="number">3</span>/<span class="number">2</span>/<span class="number">4</span>;</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20191120212900664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191120212900664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>再来一个你们练练</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item1</span>{</span><br><span class="line">          <span class="comment">/*我要把第1块放到c和f区域中*/</span></span><br><span class="line">          <span class="attribute">grid-area</span>: <span class="number">1</span>/<span class="number">3</span>/<span class="number">3</span>/<span class="number">4</span>;</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/2019112021304552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019112021304552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h3 id="自动补全-amp-优先规定"><a href="#自动补全-amp-优先规定" class="headerlink" title="自动补全 & 优先规定"></a>自动补全 & 优先规定</h3><ul><li><code>grid-auto-flow: row dense;</code> ：代表以行为标准（默认，比方说我九宫格，那么第一行就是 abc，如果是以列为标准，那么第一列就是 abc）</li><li><code>dense</code> 叫自动补全，如果这个区域能够填充元素的话，就把他挤上去</li></ul><h3 id="网格子元素的内容"><a href="#网格子元素的内容" class="headerlink" title="网格子元素的内容"></a>网格子元素的内容</h3><p>子元素中的内容</p><ul><li><code>justify-items: center;</code>：水平居中内容</li><li><code>align-items: center;</code> ：垂直居中内容</li><li>组合属性 <code>place-items: start end;</code> （先是水平start，然后是垂直的end）</li><li><code>place-self: center;</code> 只设置自己本身的属性，给子元素加这个属性就行</li><li>注意：这些属性也是加给 <strong>网格容器</strong> 的。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">justify-items</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="网格子元素"><a href="#网格子元素" class="headerlink" title="网格子元素"></a>网格子元素</h3><ul><li><code>justify-content: space-evenly;</code> ：等间距的水平间隔</li><li><code>align-content: space-evenly;</code> 等间距的垂直间隔</li><li><code>place-content</code>：组合属性<h3 id="容器变成-“行级”"><a href="#容器变成-“行级”" class="headerlink" title="容器变成 “行级”"></a>容器变成 “行级”</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">inline-grid</span>;</span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h1 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h1><p>盒子有4层，由里到外分别是 content，padding，border-top ,和 margin<br><a href=" https://img-blog.csdnimg.cn/20190725214109257.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="30%" data-src=" https://img-blog.csdnimg.cn/20190725214109257.png" src="/img/loading.gif" class="lazyload"></a></p><ul><li><p><strong>行级标签</strong> 不能设置 <strong>margin-top</strong>，这是行级标签和块级标签的另一个区别</p></li><li><p><strong>水平叠加</strong></p></li><li><p><strong>垂直方向</strong> 两个元素间距取 margin-top 和 margin-bottom 的最大值，<strong>谁大用谁的</strong></p></li><li><p>组合 <strong>Margin</strong><br>一个值的时候是上下左右的距离<br>两个值的时候是上下，左右的距离<br>三个值的时候是上，左右，下<br>四个值的时候是 <strong>上右下左，顺时针</strong></p></li><li><p><strong>盒子阴影</strong> <code>box-shadow: 10px 10px 20px ;</code> 它的值分别是x轴，y轴，模糊，大小比例，颜色</p></li></ul><p>父元素塌陷问题<br>问题描述：当子元素想与父元素的上边界产生些距离的时候，通常的做法是==给子元素加个Matgen-Top，但是这么加之后 <strong>没有效果</strong>。==</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#fa</span>{</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">555px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">555px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: black;</span><br><span class="line">    }</span><br><span class="line">    <span class="selector-id">#son</span>{</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">222px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">222px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: hotpink;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">15px</span>;  <span class="comment">/*没啥问题*/</span></span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">15px</span>;   <span class="comment">/*他会有问题*/</span></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>效果如下<br><a href="https://img-blog.csdnimg.cn/20190725151632212.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190725151632212.png" src="/img/loading.gif" class="lazyload"></a><br>解决方法：</p><ul><li><p>给父元素加 <strong>Border</strong>，边框颜色通常是跟父元素的背景颜色一致</p></li><li><p>给父元素加 <strong>Overflow : hidden</strong></p></li><li><p>加 <strong>Padding</strong></p></li></ul><p>延伸知识点 :</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*{</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;<span class="comment">/*取消浏览器的默认值*/</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="变态盒子模型-（-IE-）-amp-W3C盒子模型"><a href="#变态盒子模型-（-IE-）-amp-W3C盒子模型" class="headerlink" title="变态盒子模型 （ IE ）&  W3C盒子模型"></a>变态盒子模型 （ IE ）&  W3C盒子模型</h2><p> IE 6 在当时很屌，所以自己玩了一套规则，然而随着时间推移，一个人终归玩不转一群人<br> IE 8 已经向 W3C 靠拢了。</p><ul><li>IE 盒子的规则是自己规定的宽高 = 内容区 + padding + border ，这样的话如果 padding 增加，那么内容区的大小就会减少。</li><li>W3C 我们设的宽高值是 <strong>内容区的</strong>，所以改变 padding 值不会改变内容区的大小。</li><li>之间的转换用 <code>box-sizing: border-box;</code> 默认W3C的 content-box</li></ul><hr><h2 id="边框-Border"><a href="#边框-Border" class="headerlink" title="边框 Border"></a>边框 Border</h2><p>边框有组合形式 <code>border: 1px solid black;</code> 值分别是边框宽度，边框的样式，边框的颜色，其顺序可以改变。<br><strong>边框其实是个三角形</strong> ！如下图所示，上面的边我改成透明的了<br><a href="https://img-blog.csdnimg.cn/2019072516144978.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="20%" data-src="https://img-blog.csdnimg.cn/2019072516144978.png" src="/img/loading.gif" class="lazyload"></a></p><ul><li>边框宽度 <code>border-width: 100px;</code></li><li>边框样式 <code>border-style: solid;</code><br>样式还有 dash 虚线，double 双线，dotted 点点，solid 实线</li><li>边框颜色 <code>border-color: deepskyblue;</code></li><li>边框圆角处理 <code>border-radius: 10%;</code><br>想要做个正圆的话，先设置宽高相等，然后让其值为50%</li></ul><hr><h2 id="Padding"><a href="#Padding" class="headerlink" title="Padding"></a>Padding</h2><p>内容区与边界的距离，也遵循上右下左。</p><p><strong>padding会把盒子撑大</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">333px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">333px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">            <span class="attribute">padding-left</span>: <span class="number">20px</span>;<span class="comment">/*padding会把盒子撑大*/</span></span><br><span class="line">            <span class="comment">/*真实宽度height + border*2 + padding-left*/</span></span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><p>真实宽度 = height + border*2 + （padding-left）</p><hr><h2 id="Margin"><a href="#Margin" class="headerlink" title="Margin"></a>Margin</h2><ul><li><strong>行级标签不能设置 margin-top 也不能设置 padding-top</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css">       <span class="selector-class">.Span_text</span>{</span></span><br><span class="line">           margin-left: 10px;</span><br><span class="line">           margin-top: 10px;</span><br><span class="line">       }</span><br><span class="line"><span class="xml">   <span class="symbol"><</span>/style></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag"><<span class="name">span</span>></span>这是<span class="symbol"><</span>/span></span></span><br><span class="line"><span class="xml">   <span class="tag"><<span class="name">span</span> <span class="attr">class</span>=<span class="string">"Span_text"</span>></span>一个测试<span class="symbol"><</span>/span></span></span><br></pre></td></tr></tbody></table></figure></div><p>​     </p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端03_CSS】CSS 选择器、优先级及计算、文本、背景图、雪碧图、行级_块级_行内块</title>
      <link href="p/7627.html"/>
      <url>p/7627.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="样式-Style-分类"><a href="#样式-Style-分类" class="headerlink" title="样式 Style 分类"></a>样式 Style 分类</h1><p>样式分内部样式，行内样式，外部样式</p><ul><li><strong>行内样式</strong>：写在标签里的Style，例子如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">div</span> <span class="attr">style</span>=<span class="string">"width: 200px;height: 200px;background-color: skyblue"</span>></span><span class="symbol"><</span>/div></span><br></pre></td></tr></tbody></table></figure></div><ul><li><strong>内部样式</strong>：写在head中style里的样式</li><li><strong>外部样式</strong>：写在外部css文件中，用到的时候需要调用</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line">    <span class="tag">< !<span class="attr">--</span>内部样式：写在<span class="attr">head</span>里的<span class="attr">style--</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">        /*选择器*/</span><br><span class="line">        /*id选择器，唯一，不要以数字开头、不要有中文、不要纯数字*/</span><br><span class="line">        /*找id用井号#*/</span><br><span class="line">        #div1{</span><br><span class="line">            width: 333px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        }</span><br><span class="line">        /*标签选择器，直接写标签名，选中所有标签名的标签*/</span><br><span class="line">        div{</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        /*类标签 可以选择多个，标签上写class，用.来写*/</span><br><span class="line">        .male{</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">    <span class="symbol"><</span>/style></span><br><span class="line"><span class="symbol"><</span>/head></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器 *"></a>CSS 选择器 *</h1><h2 id="ID选择器："><a href="#ID选择器：" class="headerlink" title="ID选择器：#"></a>ID选择器：<code>#</code></h2><p>ID名字要唯一，不要以数字开头、不要有中文、不要纯数字</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span>{</span><br><span class="line">         <span class="attribute">width</span>: <span class="number">333px</span>;</span><br><span class="line">         <span class="attribute">background-color</span>: skyblue;</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="标签选择器：tag"><a href="#标签选择器：tag" class="headerlink" title="标签选择器：tag"></a>标签选择器：<code>tag</code></h2><p>直接写标签名，选中所有标签名的标签</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">333px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="类选择器："><a href="#类选择器：" class="headerlink" title="类选择器：."></a>类选择器：<code>.</code></h2><p>可以选择多个，标签上写class，用 <code>.</code> 来写</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.male</span>{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">333px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="并集选择器："><a href="#并集选择器：" class="headerlink" title="并集选择器：,"></a>并集选择器：<code>,</code></h2><p>并集用来把相同属性的标签、类、id等并在一起，用 <code>,</code> 相连</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span>,<span class="selector-class">.class1</span>,<span class="selector-tag">p</span>{<span class="comment">/*逗号是并集*/</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="交集选择器：直接连着写"><a href="#交集选择器：直接连着写" class="headerlink" title="交集选择器：直接连着写"></a>交集选择器：<code>直接连着写</code></h2><p>才算选中它</p><h2 id="后代选择器："><a href="#后代选择器：" class="headerlink" title="后代选择器："></a>后代选择器：<code></code></h2><p>后代用空格来表示，<code>父对象</code> + <code>空格</code> + <code>子对象</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span>{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><h2 id="通配符选择器："><a href="#通配符选择器：" class="headerlink" title="通配符选择器：*"></a>通配符选择器：<code>*</code></h2><p>给全片的样式，通常是去掉页面默认的 <code>margin</code> 和 <code>padding</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><p><strong>故事</strong> ：字体授权，用别人的字体要经过授权 ，一个实习员工去家公司用微软字体，他们的软件很挣钱，但是被微软给告了，因为没有授权（<del>感觉有点扯</del> ）</p><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><p>滑竿的</p><h2 id="同级选择器"><a href="#同级选择器" class="headerlink" title="同级选择器 + ~"></a>同级选择器 <code>+</code> <code>~</code></h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#phoneBtn</span><span class="selector-pseudo">:active</span> + <span class="selector-tag">div</span>{</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类 *"></a>伪类 *</h2><h3 id="鼠标悬浮-hover"><a href="#鼠标悬浮-hover" class="headerlink" title="鼠标悬浮 :hover"></a>鼠标悬浮 <code>:hover</code></h3><p>伪类目前学到的是做一些互交，比方说鼠标悬浮到某个元素上时，切换样式，用 <code>hover</code>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*伪类hover*/</span></span><br><span class="line">        <span class="selector-id">#div1</span><span class="selector-pseudo">:active</span>{<span class="comment">/*点击*/</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: hotpink;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="selector-id">#div1</span><span class="selector-pseudo">:hover</span>{<span class="comment">/*悬浮时切换样式*/</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: hotpink;</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="选择元素"><a href="#选择元素" class="headerlink" title="选择元素"></a>选择元素</h3><ul><li><code>div li:first-child{}</code></li><li><code>div li:last-child{}</code></li><li><code>div li:nth-child(1){color: skyblue;}</code> ，这里面 <code>1</code> 可以改成 <code>n</code>、 <code>2n</code></li></ul><h3 id="添加元素-After-amp-Before"><a href="#添加元素-After-amp-Before" class="headerlink" title="添加元素 After & Before"></a>添加元素 After & Before</h3><p>After 是在子元素的最后面插入<br>Before 是在子元素的最前面插入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">title</span>></span>after:content<span class="symbol"><</span>/title></span><br><span class="line">    <span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">        div{</span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line"></span><br><span class="line">            /**/</span><br><span class="line">            position: relative;</span><br><span class="line">        }</span><br><span class="line">        div:after{</span><br><span class="line">            /*内容必须有，不然after不会显示在div中*/</span><br><span class="line">            content: "";</span><br><span class="line">            display: inline-block;</span><br><span class="line"></span><br><span class="line">            /*制作小三角*/</span><br><span class="line">            border-width: 50px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color: transparent transparent transparent #4995eb;</span><br><span class="line"></span><br><span class="line">            /*定位：子绝父相*/</span><br><span class="line">            position: absolute;</span><br><span class="line">            top:0;</span><br><span class="line">            left: 600px;</span><br><span class="line">        }</span><br><span class="line">    <span class="symbol"><</span>/style></span><br><span class="line"><span class="symbol"><</span>/head></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span>></span><span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br></pre></td></tr></tbody></table></figure></div><h3 id="修改-a-标签的状态"><a href="#修改-a-标签的状态" class="headerlink" title="修改 a 标签的状态"></a>修改 a 标签的状态</h3><ul><li><p>未改之前的状态修改 `a:link{</p><pre><code>    color: skyblue;}`</code></pre></li><li><p>已点击之后的状态修改 `a:visited{</p><pre><code>    color: pink;}`</code></pre></li><li><p>超链接的下划线 `a{</p><pre><code>    text-decoration: none;/*文字描述，通常是把a标签的下划线去掉*/}`</code></pre></li></ul><hr><h2 id="单复数选择器"><a href="#单复数选择器" class="headerlink" title="单复数选择器"></a>单复数选择器</h2><p>css的选择器和JQ的单复数选择器的效果是相反的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.1.1.min.js"</span>></span><span class="tag">< /<span class="attr">script</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">        /*ul li:nth-child(odd){</span><br><span class="line">            color: red;</span><br><span class="line">            !*偶数红*!</span><br><span class="line">        }</span><br><span class="line">        ul li:nth-child(even){</span><br><span class="line">            color: skyblue;</span><br><span class="line">            !*奇数蓝*!</span><br><span class="line">        }*/</span><br><span class="line">    <span class="tag">< /<span class="attr">style</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">head</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">ul</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>1<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>2<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>3<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>4<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>5<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">li</span>></span>6<span class="tag">< /<span class="attr">li</span>></span></span><br><span class="line">    <span class="tag">< /<span class="attr">ul</span>></span></span><br><span class="line"><span class="tag">< /<span class="attr">body</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">script</span>></span></span><br><span class="line">    console.log($("ul li:eq(0)")[0]);/*输出第0个节点*/</span><br><span class="line">    $('ul li:odd').css('color',"red");/*奇数红*/</span><br><span class="line">    $('ul li:even').css('color',"skyblue");/*偶数蓝*/</span><br><span class="line"><span class="tag">< /<span class="attr">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="优先级-amp-计算"><a href="#优先级-amp-计算" class="headerlink" title="优先级 & 计算"></a>优先级 & 计算</h1><h2 id="标签优先级"><a href="#标签优先级" class="headerlink" title="标签优先级"></a>标签优先级</h2>优先级表降序排列:<table>        <tbody><tr>            <th colspan="5">!important的地位最大</th>        </tr>        <tr>            <th colspan="5">其次是行级Style</th>        </tr>        <tr>            <th>标签名(优先级降序)</th>            <th>第一位</th>            <th>第二位</th>            <th>第三位</th>            <th>第四位</th>        </tr>        <tr>            <td>ID</td>            <td>0</td>            <td>1</td>            <td>0</td>            <td>0</td>        </tr>        <tr>            <td>Class类</td>            <td>0</td>            <td>0</td>            <td>1</td>            <td>0</td>        </tr>        <tr>            <td>标签</td>            <td>0</td>            <td>0</td>            <td>0</td>            <td>1</td>        </tr>        <tr>            <td>通配符*</td>            <td>0</td>            <td>0</td>            <td>0</td>            <td>0</td>        </tr>        </tbody><tfoot></tfoot></table><ul><li>行内因为不算标签，所以不计算，但是你要知道，他比 !important 要弱一点</li><li>上表的使用方法就是相加，并集的话是看 style 里的顺序，就近原则，最后写的样式会覆盖掉先前的样式</li><li>并集不需要优先级的计算</li><li>继承的优先级最低，比通配符还要低</li><li><code>display:none</code> 会二次渲染，大型项目的话就要少用</li></ul><h2 id="符号优先级"><a href="#符号优先级" class="headerlink" title="符号优先级"></a>符号优先级</h2><p>一张表解决<a href="https://img-blog.csdnimg.cn/20191107085109615.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191107085109615.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><p>文本有以下方法</p><ul><li><strong>文字居中</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span>{</span><br><span class="line">            <span class="comment">/*文字居中*/</span></span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">333px</span>;<span class="comment">/*文字的垂直居中，和height等高*/</span></span><br><span class="line">            <span class="attribute">text-align</span>: center;<span class="comment">/*水平对齐*/</span></span><br><span class="line">     }</span><br></pre></td></tr></tbody></table></figure></div><ul><li>文字与图片的对齐方式，<code>vertical-align: middle;</code> ：让文字根据图片的中间位置对齐</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">img{</span><br><span class="line">          /*图片垂直对齐*/</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure></div><ul><li>文字间距 <code>letter-spacing: 1px;/*文字的间距*/</code></li><li>文字描述<br><code>text-decoration: line-through;</code><br>文字中间会划一道线。</li><li>边框 <code>border: 2px skyblue solid;</code><br>   分别是边框粗细，颜色，和边框线样式（顺序不固定）</li><li>文字在框里，放不下就用省略号代替</li></ul><pre><code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*组合三连击 放不下就用省略号*/</span></span><br><span class="line"> <span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;<span class="comment">/*永远不换行*/</span></span><br><span class="line"> <span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;<span class="comment">/*超出部分隐藏*/</span></span><br><span class="line"> <span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;<span class="comment">/*省略号*/</span></span><br></pre></td></tr></tbody></table></figure></div></code></pre><p>效果如下<br>    <a href="https://img-blog.csdnimg.cn/20190724153706918.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190724153706918.png" src="/img/loading.gif" class="lazyload"></a></p><ul><li><p>模糊距离**</p><p>  值分别是x轴位移，y轴位移，模糊度，阴影颜色</p></li></ul><pre><code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text-shadow</span>: 10<span class="selector-tag">px</span> 20<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-tag">skyblue</span>;</span><br></pre></td></tr></tbody></table></figure></div></code></pre><p>​<br>​     效果如下<br>​     < img src=”<a href="https://img-blog.csdnimg.cn/20190724154105713.png" " target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190724154105713.png"</a> width=60% ></p><hr><h1 id="Background-背景"><a href="#Background-背景" class="headerlink" title="Background 背景"></a>Background 背景</h1><ul><li>背景图片：用Url来找路径<br><code>background-image: url("../../Img/sekiro.png");</code></li><li>背景图片填充是否重复（默认重复）：<br><code>background-repeat: no-repeat;/*不重复*/</code></li><li>背景图片大小：<br>  <code>background-size: 100% 100%;</code>这个是相对于父对象的宽高的</li></ul><h2 id="抠雪碧图"><a href="#抠雪碧图" class="headerlink" title="抠雪碧图"></a>抠雪碧图</h2><p>   思路：建立一个 class 类，这个类是个框框，用来框住每个 icon，然后用 <strong>Background-position</strong> 水平或垂直移动背景图片，通过谷歌浏览器的开发选项来找到合适的位置，然后回到开发软件中更改数值。</p><p>1.首先你手上有张雪碧图类似于这样<br>     < img src=”<a href="https://img-blog.csdnimg.cn/20190724165323823.png" " target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20190724165323823.png"</a>  width=”60%”   alt=”取经路上”/><br>   2.建立一个小框框，用来抠图，在 Style 里写一个这样的类给 Body 里的 Div</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span>{</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">23px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">23px</span>;</span><br><span class="line">            <span class="comment">/*border: 1px red solid;*/</span></span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../../Img/icon.gif"</span>);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure></div><p>​    </p><p>   3.然后设置 <code>background-position: -4px -2px;</code> 这个背景图片位置来实现抠图，这个位置信息也放在一个类中，然后 body 里的 div 用后代选择器去控制。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">       .icon{</span><br><span class="line">           width: 23px;</span><br><span class="line">           height: 23px;</span><br><span class="line">           /*border: 1px red solid;*/</span><br><span class="line">           background-image: url("../../Img/icon.gif");</span><br><span class="line">       }</span><br><span class="line">       .icon1{</span><br><span class="line">           background-position: -4px -2px;</span><br><span class="line">       }</span><br><span class="line">       .icon2{</span><br><span class="line">           background-position: -31px -2px;</span><br><span class="line">       }</span><br><span class="line">       .icon3{</span><br><span class="line">           background-position: -58px -2px;</span><br><span class="line">       }</span><br><span class="line">       .icon4{</span><br><span class="line">           background-position: -84px -2px;</span><br><span class="line">       }</span><br><span class="line">       /*扣雪碧图，用浏览器和手去调试*/</span><br><span class="line">       /*块级标签和行内块标签可以，因为他们都有宽高*/</span><br><span class="line"></span><br><span class="line">   <span class="symbol"><</span>/style></span><br><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"icon icon1"</span>></span><span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"icon icon2"</span>></span><span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"icon icon3"</span>></span><span class="symbol"><</span>/div></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">class</span>=<span class="string">"icon icon4"</span>></span><span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br></pre></td></tr></tbody></table></figure></div><p>​    </p><hr><h1 id="行级-amp-块级-amp-行内块标签"><a href="#行级-amp-块级-amp-行内块标签" class="headerlink" title="行级 & 块级 & 行内块标签"></a>行级 & 块级 & 行内块标签</h1><ul><li><p>行级标签：不会独占一行，不可设置宽高，高度是内容区的高度。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">a</span> <span class="attr">href</span>=<span class="string">""</span>></span><span class="symbol"><</span>/a></span><br><span class="line">   <span class="tag">< <span class="attr">span</span>></span><span class="symbol"><</span>/span></span><br><span class="line">   <span class="tag">< <span class="attr">strong</span>></span><span class="symbol"><</span>/strong></span><br><span class="line">   <span class="tag">< <span class="attr">i</span>></span><span class="symbol"><</span>/i>     <span class="tag">< !<span class="attr">--</span>斜体<span class="attr">--</span>></span></span><br><span class="line">   <span class="tag">< <span class="attr">br</span>></span>        <span class="tag">< !<span class="attr">--br</span>被分在行级<span class="attr">--</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>块级标签：独占一行，可设置宽高</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">div</span>></span><span class="symbol"><</span>/div></span><br><span class="line">   <span class="tag">< <span class="attr">h1</span>></span><span class="symbol"><</span>/h1></span><br><span class="line">   <span class="tag">< <span class="attr">p</span>></span><span class="symbol"><</span>/p></span><br><span class="line"></span><br><span class="line">   <span class="tag">< <span class="attr">ul</span>></span><span class="symbol"><</span>/ul></span><br><span class="line">   <span class="tag">< <span class="attr">ol</span>></span><span class="symbol"><</span>/ol></span><br><span class="line">   <span class="tag">< <span class="attr">li</span>></span><span class="symbol"><</span>/li></span><br><span class="line"></span><br><span class="line">   <span class="tag">< <span class="attr">dl</span>></span><span class="symbol"><</span>/dl></span><br><span class="line">   <span class="tag">< <span class="attr">dt</span>></span><span class="symbol"><</span>/dt></span><br><span class="line">   <span class="tag">< <span class="attr">dd</span>></span><span class="symbol"><</span>/dd></span><br><span class="line"></span><br><span class="line">   <span class="tag">< <span class="attr">form</span> <span class="attr">action</span>=<span class="string">""</span>></span><span class="symbol"><</span>/form></span><br><span class="line"></span><br><span class="line">   <span class="tag">< <span class="attr">hr</span>></span></span><br><span class="line"></span><br><span class="line">   <span class="tag">< <span class="attr">header</span>></span><span class="symbol"><</span>/header>       <span class="tag">< !<span class="attr">--</span>语义化标签之类的<span class="attr">--</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>行内块标签：不会独占一行</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">< <span class="attr">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>></span></span><br><span class="line">   <span class="tag">< <span class="attr">textarea</span>></span><span class="symbol"><</span>/textarea></span><br><span class="line">   <span class="tag">< <span class="attr">button</span>></span><span class="symbol"><</span>/button></span><br><span class="line">   <span class="tag">< <span class="attr">input</span>></span></span><br><span class="line">   <span class="tag">< <span class="attr">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>></span><span class="symbol"><</span>/select></span><br></pre></td></tr></tbody></table></figure></div><ul><li><code>table</code> 有自己的分类</li><li>互相转换  <code>display</code>，有 <code>inline</code>、<code>block</code>、<code>inline-block</code></li></ul><hr><h1 id="父对象-amp-子对象的联系"><a href="#父对象-amp-子对象的联系" class="headerlink" title="父对象 & 子对象的联系"></a>父对象 & 子对象的联系</h1><ul><li>元素有宽100%，继承它的父元素属性，但是没有高度。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">< <span class="attr">head</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line"><span class="tag">< <span class="attr">title</span>></span>属性继承父对象<span class="symbol"><</span>/title></span><br><span class="line"><span class="tag">< <span class="attr">style</span>></span></span><br><span class="line">    #Son{</span><br><span class="line">        height: 80%;    /*这个百分号是和父对象的百分比*/</span><br><span class="line">        width: 80%;</span><br><span class="line">        background-color: skyblue;</span><br><span class="line">        font-size: 30px;    /*字号*/</span><br><span class="line">        font-weight: bold;  /*字体加粗*/</span><br><span class="line">        font-family: "Agency FB";   /*字体*/</span><br><span class="line">        font-style: italic;/*斜体*/</span><br><span class="line">        opacity: 1;/*透明度，默认是1，ie浏览器不支持*/</span><br><span class="line">    }</span><br><span class="line">    #Father{</span><br><span class="line">        height: 300px;/*这个百分号是和父对象的百分比*/</span><br><span class="line">        width: 300px;</span><br><span class="line">        background-color: hotpink;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="symbol"><</span>/style></span><br><span class="line"><span class="symbol"><</span>/head></span><br><span class="line"><span class="tag">< <span class="attr">body</span>></span></span><br><span class="line">    <span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"Father"</span>></span></span><br><span class="line">        <span class="tag">< <span class="attr">div</span> <span class="attr">id</span>=<span class="string">"Son"</span>></span></span><br><span class="line">            这是一个测试</span><br><span class="line">        <span class="symbol"><</span>/div></span><br><span class="line">    <span class="symbol"><</span>/div></span><br><span class="line"><span class="symbol"><</span>/body></span><br></pre></td></tr></tbody></table></figure></div><hr></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端02_基础】表格、输入框、Label、列表</title>
      <link href="p/50395.html"/>
      <url>p/50395.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="表格-Table"><a href="#表格-Table" class="headerlink" title="表格 Table"></a>表格 Table</h1><p> 表格加载 <strong>速度慢</strong> ，<strong>效率低</strong>，尽量不用（可能在制作火车时间表上使用）<br> 通常的格式为：<code>table</code> 声明表格，<code>tr</code> 表格的行，<code>td</code> 表格的列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">table</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">td</span> <span class="attr">width</span>=<span class="string">"300"</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>网站建设与传播</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">            <span class="tag"><<span class="name">td</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>电子商务</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">        <span class="symbol"><</span>/tr></span><br><span class="line"></span><br><span class="line">        <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">td</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>数字化展馆</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">            <span class="tag"><<span class="name">td</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>多媒体互动</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">        <span class="symbol"><</span>/tr></span><br><span class="line"></span><br><span class="line">        <span class="tag"><<span class="name">tr</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">td</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>软件服务</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">            <span class="tag"><<span class="name">td</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>></span>移动开发</span><br><span class="line">            <span class="symbol"><</span>/td></span><br><span class="line">        <span class="symbol"><</span>/tr></span><br><span class="line">    <span class="symbol"><</span>/table></span><br></pre></td></tr></tbody></table></figure></div><p><strong>几组 tr 就是几行，几组 td 就是几列。</strong></p><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><ul><li><p><strong>Cellspacing</strong>：单元格与单元格的间距</p></li><li><p>Cellpadding：单元格与文字的间距</p></li><li><p>Border：给表格加边框，通常值为1</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">table</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">bordercolor</span>=<span class="string">"red"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>Bordercolor：边框颜色</p></li><li><p><strong>Colspan</strong>：跨列合并 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>></span>商品类目<span class="symbol"><</span>/td></span><br></pre></td></tr></tbody></table></figure></div></li><li><p><strong>Rowspan</strong>：跨行合并 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"3"</span>></span>虚拟<span class="symbol"><</span>/td></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>Align=”center” 位置规定</p></li></ul><h2 id="表格结构化"><a href="#表格结构化" class="headerlink" title="表格结构化"></a>表格结构化</h2><ul><li><strong>thead</strong>：表格头</li><li><strong>tbody</strong> ：表格体，自己不写的话谷歌浏览器会帮我们写</li><li><strong>tfoot</strong> ：表格尾注解</li><li><strong>caption</strong> ：标题，用来注释表格的用途</li></ul><hr><h1 id="输入-Input"><a href="#输入-Input" class="headerlink" title="输入 Input *"></a>输入 Input *</h1><p> 一般输入 input 要写在 form 里，组成一个块儿，用来给后台传数据的功能。<br>  <strong>Form</strong>：表格提交 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>></span><span class="symbol"><</span>/form></span><br></pre></td></tr></tbody></table></figure></div><p>其中 action 是说明提交的位置，method 是提交的方法，一般有两种方法 Post 和 Get </p><h2 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h2><ul><li><p>最普通的 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>密码输入框，<code><input type="password" placeholder="请输入密码"></code>，输入密码时会变成小星星</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>placeholder是框里面浅灰色的提示语。</p></li><li><p>重置 ，只能在form里使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>提交 ，只能在form里使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>图片按钮 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"../../Img/sekiro.png"</span> <span class="attr">width</span>=<span class="string">"100px"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>单选框 <strong>Radio</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>></span>male</span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>></span>female</span><br></pre></td></tr></tbody></table></figure></div></li></ul><ul><li><p>多选框 <strong>Checkbox</strong><br>  用 <code>name</code> 让多个多选框组成一组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span>></span> 唱</span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span>></span> 跳</span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"habit"</span>></span> rap</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>提交文件</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li><p>按钮<code><input type="button" disabled value="注册"></code> ，这里的disabled是 <strong>禁止点击</strong> 的意思</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">disabled</span> <span class="attr">value</span>=<span class="string">"注册"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><h2 id="H5-新加种类"><a href="#H5-新加种类" class="headerlink" title="H5 新加种类"></a>H5 新加种类</h2><p><strong>以下是 H5 新加的 input 标签使用方法</strong>：</p><ul><li>邮箱格式限制，其中Aotofocus的意思是 <strong>打开网页光标直接定位在这个输入框上</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">autofocus</span>></span> <span class="tag"><<span class="name">br</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li><p>只能输入网页<br>其中Required是==  必填项，提交form的时候这个框框必须有东西！==</p><p>不是实时触发，而是点击form提交之后才会提醒。</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">required</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>只能填数字 </li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>颜色 </li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>月份 </li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"month"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>日期 </li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>滑竿 ，这个不一样的浏览器 <strong>样式</strong> 不一样的 <code><input type="range"></code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h1><p>label 尽量与 input 组合使用，点击    label ，就会取 input 框中的焦点。不过 <strong>label 中的 for 属性要写成 input 的 id 名字</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>></span>用户名<span class="symbol"><</span>/label></span><br><span class="line">    <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p>样式如下：<br><a href="https://img-blog.csdnimg.cn/20190824085950880.gif" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190824085950880.gif" src="/img/loading.gif" class="lazyload"></a></p><hr><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="如何去掉列表默认样式（li-前的点）"><a href="#如何去掉列表默认样式（li-前的点）" class="headerlink" title="如何去掉列表默认样式（li 前的点）"></a>如何去掉列表默认样式（li 前的点）</h2><p><code>list-style:none;</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//去掉列表默认样式例子：</span><br><span class="line"><span class="tag"><<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"list-style-type: none"</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">li</span>></span>1231<span class="symbol"><</span>/li></span><br><span class="line"><span class="symbol"><</span>/ul></span><br></pre></td></tr></tbody></table></figure></div><h2 id="有序列表-ol"><a href="#有序列表-ol" class="headerlink" title="有序列表 ol"></a>有序列表 ol</h2><p>每个 li 前面都有数字序列<br><a href="https://img-blog.csdnimg.cn/20190824121849697.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190824121849697.png" src="/img/loading.gif" class="lazyload"></a></p><h2 id="无序列表-ul"><a href="#无序列表-ul" class="headerlink" title="无序列表 ul"></a>无序列表 ul</h2><p>每个 li 前面是黑点，有三级样式，后面的都是黑色方块<br><a href="https://img-blog.csdnimg.cn/20190824121650379.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190824121650379.png" src="/img/loading.gif" class="lazyload"></a></p><h2 id="自定义列表-dl"><a href="#自定义列表-dl" class="headerlink" title="自定义列表 dl"></a>自定义列表 dl</h2><ul><li>dl 声明自定义列表</li><li>dt 声明列表的表头</li><li>dd 是每个列的每个元素，如下所示<a href="https://img-blog.csdnimg.cn/20190824122000256.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="10%" data-src="https://img-blog.csdnimg.cn/20190824122000256.png" src="/img/loading.gif" class="lazyload"></a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端01_基础】安装、前端起步</title>
      <link href="p/6251.html"/>
      <url>p/6251.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>首先推荐测试的浏览器 <strong>谷歌浏览器</strong> ，当然开发版的FireFox也可以哦，看您的心情。</li><li>Webstorm安装，破解的话网上有注册码。</li><li>新建个空白的工程Empty Project，Location自己选个位置，一般是除了C盘的其他盘里，你要记住你保存到哪里了，然后点击Create</li><li>软件的工作项目界面如下，首先新建个Directory(文件夹)，取名字为Html，==为了以后开发的逻辑分类，前期要养成分类的习惯，新建Html,Img两个文件夹，分别保存代码和图片==。<a href="https://img-blog.csdnimg.cn/20190722205528609.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190722205528609.png" src="/img/loading.gif" class="lazyload"></a><a href="https://img-blog.csdnimg.cn/20190722205708769.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190722205708769.png" src="/img/loading.gif" class="lazyload"></a></li></ol><hr><h2 id="琐碎知识点整理"><a href="#琐碎知识点整理" class="headerlink" title="琐碎知识点整理"></a>琐碎知识点整理</h2><ul><li>首先新建的XXX.Html文件里面不是空的，这些都是什么呢？ <a href="https://img-blog.csdnimg.cn/20190722210906415.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img width="50%" data-src="https://img-blog.csdnimg.cn/20190722210906415.png" src="/img/loading.gif" class="lazyload"></a></li><li>根据 W3C 推荐标准，通过 <strong>html</strong> 标签中的 <strong>lang</strong> 属性对每张页面中的 <strong>主要语言</strong>，进行声明，其他的图片里注释了。<br>*[lang]:   声明主要语言Language</li><li>代码的注释可以使用ctrl+shift+“/”</li><li><strong>故事</strong>：当年微软的IE很厉害，便开始得意起来，把自己的浏览器团队解散掉，只剩下维护人员，这些开发人员被其他公司邀请来，最后诞生些Google Chrome、火狐浏览器Mozilla Firefox、欧鹏浏览器OPera、苹果浏览器Safari，后来者超越了IE并获得了市场。</li><li>Html也叫 <strong>超文本标签语言</strong>，这里的 <strong>超</strong> 字是超出文本的意思，结合代码慢慢理解。</li><li>==如果说网页是建大楼，那么<strong>HTML</strong>就是砖瓦，<strong>Css</strong>加样式，给房子<strong>装修</strong>，<strong>Js</strong>跟java没关系，JS全称是JavaScript，处理脚本，相当于家具，有一定的功能，来使房屋的体验更好。==</li><li>开头head里有title、link、meta</li><li>搜索引擎是 <strong>爬虫</strong>，网站上定义的<strong>Keyword</strong>是给 <strong>搜索引擎</strong> 准备的<br><code><meta name="keywords" content="淘宝"></code><br>比方说我们打开网易云音乐的官网，打开开发者模式，看这个网页的<strong>Keyword</strong>和<strong>Description</strong><a href="https://img-blog.csdnimg.cn/20190722214717422.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190722214717422.png" src="/img/loading.gif" class="lazyload"></a><br>描述（description）的文字不要太多，控制在三十个字左右。</li><li>Body中有h1~h6六种，其他的没效果，P标签没有加粗，Hr标签是单标签，用来做下划线</li><li>自定义列表用<strong>dl</strong>声明，<strong>dt</strong>为title，<strong>dd</strong>是列表内容。</li><li>Meta中 可定义robots来拒绝爬虫爬取页面</li></ul><hr><h2 id="写博客时的心得"><a href="#写博客时的心得" class="headerlink" title="写博客时的心得"></a>写博客时的心得</h2><p>去水印：图片链接的代码从问号？后面的代码都删掉就好了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python_03】字典</title>
      <link href="p/31496.html"/>
      <url>p/31496.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><p>字典的特殊值是<code>{}</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>dirt1 = {<span class="string">'第1个'</span>:<span class="string">'我是第1个'</span>,<span class="string">'第2个'</span>:<span class="string">'我是第2个'</span>,<span class="string">'第3个'</span>:<span class="string">'我是第3个'</span>,<span class="string">'第4个'</span>:<span class="string">'我是第4个'</span>}</span><br><span class="line"><span class="meta">>>> </span>dirt1[<span class="string">'第1个'</span>]</span><br><span class="line"><span class="string">'我是第1个'</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="dirt1-fromkeys"><a href="#dirt1-fromkeys" class="headerlink" title="dirt1.fromkeys"></a>dirt1.fromkeys</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>dirt1.fromkeys((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),<span class="string">'Number'</span>)</span><br><span class="line">{<span class="number">1</span>: <span class="string">'Number'</span>, <span class="number">2</span>: <span class="string">'Number'</span>, <span class="number">3</span>: <span class="string">'Number'</span>}</span><br><span class="line"></span><br><span class="line"><span class="comment">#不要以为fromkeys会聪明的匹配每一项，不能批量的修改每一个键值</span></span><br><span class="line"><span class="meta">>>> </span>dirt1.fromkeys((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),(<span class="string">'Number'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>))</span><br><span class="line">{<span class="number">1</span>: (<span class="string">'Number'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>), <span class="number">2</span>: (<span class="string">'Number'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>), <span class="number">3</span>: (<span class="string">'Number'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>)}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="字典的遍历-键、值、对"><a href="#字典的遍历-键、值、对" class="headerlink" title="字典的遍历:键、值、对"></a>字典的遍历:键、值、对</h2><p>遍历key，用<code>keys</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">for</span> each <span class="keyword">in</span> dirt1.keys():</span><br><span class="line">print(each)</span><br></pre></td></tr></tbody></table></figure></div><p>遍历字典的值，用<code>values</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">for</span> each <span class="keyword">in</span> dirt1.values():</span><br><span class="line">print(each)</span><br></pre></td></tr></tbody></table></figure></div><p>遍历键值对，用``</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">for</span> each <span class="keyword">in</span> dirt1.items():</span><br><span class="line">print(each)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="清空字典"><a href="#清空字典" class="headerlink" title="清空字典"></a>清空字典</h2><p>关键字<code>clear</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>dirt1</span><br><span class="line">{<span class="string">'第1个'</span>: <span class="string">'我是第1个'</span>, <span class="string">'第2个'</span>: <span class="string">'我是第2个'</span>, <span class="string">'第3个'</span>: <span class="string">'我是第3个'</span>, <span class="string">'第4个'</span>: <span class="string">'我是第4个'</span>}</span><br><span class="line"><span class="meta">>>> </span>dirt1.clear()</span><br><span class="line"><span class="meta">>>> </span>dirt1</span><br><span class="line">{}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a.popitem()</span><br><span class="line"><span class="comment">#随机弹出</span></span><br><span class="line">a.pop(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#弹出key是2的键值对</span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python_02】函数</title>
      <link href="p/26292.html"/>
      <url>p/26292.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="定义及调用"><a href="#定义及调用" class="headerlink" title="定义及调用"></a>定义及调用</h2><p>定义函数：用关键字<code>def</code>，注意加冒号</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">Function</span><span class="params">()</span>:</span></span><br><span class="line">print(<span class="string">'我是一个函数'</span>)</span><br></pre></td></tr></tbody></table></figure></div><p>调用函数：写函数名字，再加上小括号</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>Function()</span><br><span class="line">我是一个函数</span><br></pre></td></tr></tbody></table></figure></div><h2 id="形参及实参"><a href="#形参及实参" class="headerlink" title="形参及实参"></a>形参及实参</h2><p>在函数的参数中分 <strong>形式参数(parameter)</strong>及<strong>实际参数(argument)</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">MyFirstFunction</span><span class="params">(xingcan)</span>:</span></span><br><span class="line">print(<span class="string">'传递进来的参数'</span> + xingcan)</span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>MyFirstFunction(<span class="string">'shican'</span>)</span><br><span class="line">传递进来的参数shican</span><br></pre></td></tr></tbody></table></figure></div><h2 id="函数文档"><a href="#函数文档" class="headerlink" title="函数文档"></a>函数文档</h2><p>用来给函数解释说明用的，定义是在函数里用引号引起来</p><p>也可以通过help来查看</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">MyFirstFunction</span><span class="params">(xingcan)</span>:</span></span><br><span class="line"><span class="comment">#定义函数文档</span></span><br><span class="line"><span class="string">'这是一个文档'</span></span><br><span class="line">print(<span class="string">'传递进来的参数'</span> + xingcan)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看函数文档</span></span><br><span class="line"><span class="meta">>>> </span>MyFirstFunction.__doc__</span><br><span class="line"><span class="string">'这是一个文档'</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h2><p>如果你的参数调换了位置，还想匹配形参，那么可以用这个方法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(a,b)</span>:</span></span><br><span class="line">print(a + <span class="string">'是个'</span> + b)</span><br><span class="line">    </span><br><span class="line"><span class="meta">>>> </span>f1(<span class="string">"我"</span>,<span class="string">'帅哥'</span>)</span><br><span class="line">我是个帅哥</span><br><span class="line"><span class="meta">>>> </span>f1(b = <span class="string">"帅哥"</span>,a = <span class="string">"我"</span>)</span><br><span class="line">我是个帅哥</span><br></pre></td></tr></tbody></table></figure></div><h2 id="收集参数"><a href="#收集参数" class="headerlink" title="收集参数"></a>收集参数</h2><p>如果你也不知道形参到底有多少个的话，可以这么建立函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(*params)</span>:</span></span><br><span class="line">print(<span class="string">'形参有'</span> ,len(params) , <span class="string">'个'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>f1(<span class="string">'1'</span>,<span class="number">1</span>,<span class="number">22</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>)</span><br><span class="line">形参有 <span class="number">6</span> 个</span><br></pre></td></tr></tbody></table></figure></div><p>常见有形式参数的有 <code>print</code></p><h1 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">print(<span class="string">'hello fishC'</span>)</span><br><span class="line"><span class="meta">>>> </span>hello()</span><br><span class="line">hello fishC</span><br><span class="line"><span class="meta">>>> </span>hello</span><br><span class="line"><function hello at <span class="number">0x000001E6039C4948</function></span>><br><span class="line"><span class="meta">>>> </span>temp = hello()</span><br><span class="line">hello fishC</span><br><span class="line"><span class="meta">>>> </span>print(temp)</span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="全局变量与函数"><a href="#全局变量与函数" class="headerlink" title="全局变量与函数"></a>全局变量与函数</h1><p>如果你想试图用函数来改变全局变量的值，这是不被允许的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>count = <span class="number">1</span></span><br><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">MyFunction</span><span class="params">()</span>:</span></span><br><span class="line">count= <span class="number">2</span><span class="comment">#这个count是函数内部的count，跟外面的count是两个空间，所以改变不了全局的</span></span><br><span class="line">print(count)</span><br><span class="line"><span class="meta">>>> </span>MyFunction()</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">>>> </span>print(count)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果你想改变全局的值，用关键字<code>global</code>来声明一下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>count = <span class="number">1</span></span><br><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">MyFunction</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> count<span class="comment">#这里来声明</span></span><br><span class="line">count= <span class="number">2</span></span><br><span class="line">print(count)</span><br><span class="line"><span class="meta">>>> </span>print(count)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">>>> </span>MyFunction()</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">>>> </span>print(count)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="内嵌函数和闭包"><a href="#内嵌函数和闭包" class="headerlink" title="内嵌函数和闭包"></a>内嵌函数和闭包</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">fx</span><span class="params">(x)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fy</span><span class="params">(y)</span>:</span></span><br><span class="line"><span class="keyword">return</span> x * y</span><br><span class="line"><span class="keyword">return</span> fy</span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>i = fx(<span class="number">5</span>)</span><br><span class="line"><span class="meta">>>> </span>i(<span class="number">8</span>)</span><br><span class="line"><span class="number">40</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">fx</span><span class="params">()</span>:</span></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fy</span><span class="params">()</span>:</span></span><br><span class="line">x *= x</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line"><span class="keyword">return</span> fy()</span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>fx()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"<pyshell#33>"</pyshell#33></span>, line <span class="number">1</span>, <span class="keyword">in</span> <module></module></span><br><span class="line">    fx()</span><br><span class="line">  File <span class="string">"<pyshell#32>"</pyshell#32></span>, line <span class="number">6</span>, <span class="keyword">in</span> fx</span><br><span class="line">    <span class="keyword">return</span> fy()</span><br><span class="line">  File <span class="string">"<pyshell#32>"</pyshell#32></span>, line <span class="number">4</span>, <span class="keyword">in</span> fy</span><br><span class="line">    x *= x</span><br><span class="line">UnboundLocalError: local variable <span class="string">'x'</span> referenced before assignment</span><br><span class="line"> </span><br><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">fx</span><span class="params">()</span>:</span></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fy</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">nonlocal</span> x<span class="comment">#如何解决全局变量的问题呢，添加nonlocal  </span></span><br><span class="line">x *= x</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line"><span class="keyword">return</span> fy()</span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>fx()</span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="匿名函数-lambda"><a href="#匿名函数-lambda" class="headerlink" title="匿名函数 lambda"></a>匿名函数 lambda</h1><p>我们首先那一条直线方程来说明</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">ds</span><span class="params">(x)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * x + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>ds(<span class="number">5</span>)</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="meta">>>> </span><span class="keyword">lambda</span> x : <span class="number">2</span> * x + <span class="number">1</span></span><br><span class="line"><function <<span class="keyword">lambda</function></span>> at <span class="number">0x000001743018B168</span>><br></pre></td></tr></tbody></table></figure></div><p>可以看到<code>lambda</code>表达式，冒号前面是变量，后边是执行的函数体</p><p>如果想调用的话，就把这个表达式复制，然后调用即可</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>f = <span class="keyword">lambda</span> x : <span class="number">2</span> * x + <span class="number">1</span></span><br><span class="line"><span class="meta">>>> </span>f(<span class="number">5</span>)</span><br><span class="line"><span class="number">11</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果是多参数的话就可以用逗号隔开参数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>f1 = <span class="keyword">lambda</span> x,y : x+ y</span><br><span class="line"><span class="meta">>>> </span>f1(<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="number">11</span></span><br></pre></td></tr></tbody></table></figure></div><p>lambda的优点：</p><ol><li>省下函数定义的过程</li><li>不用考虑给孩子起名字</li><li>简化代码</li></ol><h1 id="两个牛逼的BIF函数"><a href="#两个牛逼的BIF函数" class="headerlink" title="两个牛逼的BIF函数"></a>两个牛逼的BIF函数</h1><h2 id="Filter过滤器"><a href="#Filter过滤器" class="headerlink" title="Filter过滤器"></a>Filter过滤器</h2><p>实质：是把非true的结果统统过滤掉，只保留true的结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>filter(<span class="literal">None</span>,[<span class="literal">False</span>,<span class="number">0</span>,<span class="string">''</span>,<span class="literal">True</span>,<span class="number">1</span>])</span><br><span class="line"><filter object at <span class="number">0x0000017430203E48</filter></span>><br><span class="line"><span class="comment"># 可以看到返回的是个对象，那我们可以用list给迭代出来</span></span><br><span class="line"><span class="meta">>>> </span>list(filter(<span class="literal">None</span>,[<span class="literal">False</span>,<span class="number">0</span>,<span class="string">''</span>,<span class="literal">True</span>,<span class="number">1</span>]))</span><br><span class="line">[<span class="literal">True</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 可以看到他的规则</span></span><br></pre></td></tr></tbody></table></figure></div><p>再来看一个实用的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">(x)</span>:</span></span><br><span class="line"><span class="keyword">return</span> x % <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>temp = range(<span class="number">10</span>)</span><br><span class="line"><span class="meta">>>> </span>show = filter(odd,temp)</span><br><span class="line"><span class="meta">>>> </span>list(show)</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br></pre></td></tr></tbody></table></figure></div><p>结合lambda实现简洁代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>list(filter(<span class="keyword">lambda</span> x:x % <span class="number">2</span>,range(<span class="number">10</span>)))</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br></pre></td></tr></tbody></table></figure></div><h2 id="map映射"><a href="#map映射" class="headerlink" title="map映射"></a>map映射</h2><p>我理解为加工车间</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>list(map(<span class="keyword">lambda</span> x:x * <span class="number">2</span>,range(<span class="number">10</span>)))</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>]</span><br></pre></td></tr></tbody></table></figure></div><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p>设置递归的深度</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">>>> </span>sys.setrecursionlimit(<span class="number">10000</span>)</span><br></pre></td></tr></tbody></table></figure></div><ol><li>递归要有结束的条件</li><li>还要调用自己</li></ol><p>缺点：</p><ol><li>消耗空间、时间，效率低</li></ol><p>斐波那契</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(n)</span>:</span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> (n == <span class="number">2</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> f1(n<span class="number">-1</span>) + f1(n<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span>f1(<span class="number">12</span>)</span><br><span class="line"><span class="number">144</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="汉诺塔问题"><a href="#汉诺塔问题" class="headerlink" title="汉诺塔问题"></a>汉诺塔问题</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span><span class="params">(n,x,y,z)</span>:</span></span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>):</span><br><span class="line">        print(x ,<span class="string">'->'</span> ,z)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,x,z,y)</span><br><span class="line">        print(x,<span class="string">'->'</span>,z)</span><br><span class="line">        hanoi(n<span class="number">-1</span>,y,x,z)</span><br><span class="line">n = int(input(<span class="string">'输入多少个盘子：'</span>))</span><br><span class="line">hanoi(n,<span class="string">"x"</span>,<span class="string">'y'</span>,<span class="string">'z'</span>)</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Python_01】列表、元组、切片、数及运算、优先级</title>
      <link href="p/24975.html"/>
      <url>p/24975.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h2><ul><li><p><code>append()</code> 只能添加一个元素</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a.append([<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure></div><p>一次添加多个元素会报错</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a.append([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"<pyshell#7>"</pyshell#7></span>, line <span class="number">1</span>, <span class="keyword">in</span> <module></module></span><br><span class="line">    a.append([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">TypeError: append() takes exactly one argument (<span class="number">2</span> given)</span><br></pre></td></tr></tbody></table></figure></div></li><li><p><code>extend()</code> ：可以添加多个元素，元素可以是列表、字典字符串等，不能添加</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a.extend(<span class="number">1</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"<pyshell#9>"</pyshell#9></span>, line <span class="number">1</span>, <span class="keyword">in</span> <module></module></span><br><span class="line">    a.extend(<span class="number">1</span>)</span><br><span class="line">TypeError: <span class="string">'int'</span> object <span class="keyword">is</span> <span class="keyword">not</span> iterable</span><br><span class="line"><span class="meta">>>> </span>a.extend([<span class="number">1</span>])</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line"><span class="meta">>>> </span>a.extend({<span class="number">1</span>})</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>]</span><br></pre></td></tr></tbody></table></figure></div></li><li><p>插入元素 <code>insert（下标位置，插入的内容）</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">>>> </span>a.insert(<span class="number">0</span>,<span class="string">"insert插入"</span>)</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="string">'insert插入'</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><p>打开列表的帮助文档，我们可以看到这么一个</p><p><a href="https://raw.githubusercontent.com/Amethyst-Ruby/TyporaImg/master/TyporaImages/20200211123201-477194.png" data-fancybox="group" data-caption="迭代器" class="fancybox"><img alt="迭代器" title="迭代器" data-src="https://raw.githubusercontent.com/Amethyst-Ruby/TyporaImg/master/TyporaImages/20200211123201-477194.png" src="/img/loading.gif" class="lazyload"></a></p><p>迭代器：<strong>重复反馈过程的活动</strong></p><h2 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h2><ul><li><code>remove(元素)</code>，注意：这里不是下标，而是元素内容</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="string">'insert插入'</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">>>> </span>a.remove(<span class="string">"insert插入"</span>)</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></tbody></table></figure></div><p>当然你也可以这样删除</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="string">'insert'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">>>> </span>a.remove(a[<span class="number">1</span>])</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></tbody></table></figure></div><ul><li><code>del member[下标]</code>，这里的member 是列表的名字</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">>>> </span><span class="keyword">del</span> a[<span class="number">0</span>]</span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">>>></span><br></pre></td></tr></tbody></table></figure></div><ul><li><code>member.pop()</code>  不加参数的话就是删除后面的元素，加上角标后就是删除角标元素</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="comment"># 没填参数，删除末尾的4</span></span><br><span class="line"><span class="meta">>>> </span>a.pop()</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#填了角标参数，删除角标元素a[0]</span></span><br><span class="line"><span class="meta">>>> </span>a.pop(<span class="number">0</span>)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure></div><h2 id="列表运算"><a href="#列表运算" class="headerlink" title="列表运算"></a>列表运算</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加法</span></span><br><span class="line"><span class="meta">>>> </span>list1 = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">>>> </span>list2 = [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="meta">>>> </span>list3 = [<span class="string">"nihao"</span>]</span><br><span class="line"><span class="meta">>>> </span>list1 + list2</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">>>> </span>list1 + list3</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="string">'nihao'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘法</span></span><br><span class="line"><span class="meta">>>> </span>list1 = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="meta">>>> </span>list1 * <span class="number">3</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure></div><h2 id="列表的其他用法"><a href="#列表的其他用法" class="headerlink" title="列表的其他用法"></a>列表的其他用法</h2><ul><li><p><code>list.count(要找的元素)</code> 返回要找的元素在list中出现的次数</p></li><li><p><code>list.index(123,范围起点,范围结束)</code> 返回123元素所在的位置，默认第一个</p></li><li><p><code>list.reverse()</code> 原地翻转列表</p></li><li><p><code>list.sort(func,key，reverse = False)</code> 排序，默认归并排序，从小到大，会改变原来的list</p></li><li><p><strong>复制一个列表</strong> 用 <code>list = list[:]</code><br> list = list1(这个是地址拷贝),就是多了一个指向它的标签<br> 如果是深拷贝的话就是 list = list[:]</p></li><li><p><code>zip</code> 打包</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">>>> </span>b = [<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"><span class="meta">>>> </span>list(zip(a,b))</span><br><span class="line">[(<span class="number">1</span>, <span class="number">6</span>), (<span class="number">2</span>, <span class="number">7</span>), (<span class="number">3</span>, <span class="number">8</span>), (<span class="number">4</span>, <span class="number">9</span>), (<span class="number">5</span>, <span class="number">10</span>)]</span><br></pre></td></tr></tbody></table></figure></div></li></ul><ul><li><code>sum(list)</code> 求和</li></ul><hr><h1 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h1><p>类似带上了枷锁的列表，元组跟列表是近亲关系，所以用法相似</p><ul><li>区别：元组不能改变</li></ul><p>就算加上了小括号他也不一定是元组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>temp = (<span class="number">1</span>)</span><br><span class="line"><span class="meta">>>> </span>temp</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">>>> </span>type(temp)</span><br><span class="line"><<span class="class"><span class="keyword">class</span> '<span class="title">int</span>'></span></span><br><span class="line"><span class="class"></span></span><br><span class="line">>>> temp = (1,2)</span><br><span class="line"><span class="meta">>>> </span>temp</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">>>> </span>type(temp)</span><br><span class="line"><<span class="class"><span class="keyword">class</span> '<span class="title">tuple</span>'></span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>temp2 = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="meta">>>> </span>temp2</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">>>> </span>type(temp2)</span><br><span class="line"><<span class="class"><span class="keyword">class</span> '<span class="title">tuple</span>'></span></span><br></pre></td></tr></tbody></table></figure></div><p><strong>所以逗号是元组的关键，小括号并不是关键</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>temp = ()<span class="comment">#空元组</span></span><br><span class="line"><span class="meta">>>> </span>temp = <span class="number">1</span>,<span class="comment">#默认创建元组</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以试试这个就知道了</span></span><br><span class="line"><span class="meta">>>> </span><span class="number">8</span> * （<span class="number">8</span>）</span><br><span class="line"><span class="meta">>>> </span><span class="number">8</span> * （<span class="number">8</span>，）</span><br></pre></td></tr></tbody></table></figure></div><h2 id="元组的插入"><a href="#元组的插入" class="headerlink" title="元组的插入"></a>元组的插入</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#插入</span></span><br><span class="line"><span class="meta">>>> </span>temp = (<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="meta">>>> </span>temp = temp[:<span class="number">1</span>] + (<span class="string">"2"</span>,) + temp[<span class="number">1</span>:]</span><br><span class="line"><span class="meta">>>> </span>temp <span class="comment"># 更新完之后原来的(0,1)仍然在，只不过没有标签指向它了，所以py会过会把他回收掉</span></span><br><span class="line">(<span class="number">0</span>, <span class="string">'2'</span>, <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">del</span> temp</span><br><span class="line"><span class="comment">#删除整个元素</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#位置参数</span></span><br><span class="line"><span class="meta">>>> </span><span class="string">"{0} love {1}"</span>.format(<span class="string">"i"</span>,<span class="string">"you"</span>)</span><br><span class="line"><span class="string">'i love you'</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关键字参数</span></span><br><span class="line"><span class="meta">>>> </span><span class="string">"{a} love {b}"</span>.format(a = <span class="string">"i"</span>,b =<span class="string">"you"</span>)</span><br><span class="line"><span class="string">'i love you'</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果想要混用，位置参数必须在关键字参数之前</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="string">"{{0}}"</span>.format(<span class="string">"0"</span>)</span><br><span class="line"><span class="string">'{0}'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">>>> </span><span class="string">"{0:.1f}{1}"</span>.format(<span class="number">32.666</span>,<span class="string">"GB"</span>)</span><br><span class="line"><span class="string">'32.7GB'</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="string">'%c'</span> % <span class="number">97</span></span><br><span class="line"><span class="string">'a'</span></span><br><span class="line"><span class="meta">>>> </span><span class="string">'%c %c %c'</span> % (<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>)</span><br><span class="line"><span class="string">'a b c'</span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h1><p>切片顾名思义，就是切下来一片东西，比方说我要把[0,1,2,3,4]切成[1,2]，就是这样<br>切片的原则是 <strong>左闭右开</strong>，举几个栗子就好理解了<br>切片的写法是：<code>要切的对象[左下标:右下标]</code><br>切片不会影响原来的对象的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="meta">>>> </span>a[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="comment"># 好好理解左闭右开</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左下标不写的话默认0</span></span><br><span class="line"><span class="meta">>>> </span>a[:<span class="number">1</span>]</span><br><span class="line">[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 右下标默认不写的话就是取到元素末尾</span></span><br><span class="line"><span class="meta">>>> </span>a[<span class="number">2</span>:]</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">>>></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="数及运算"><a href="#数及运算" class="headerlink" title="数及运算"></a>数及运算</h1><p>Python 中的数分 <strong>整数</strong>，<strong>浮点数</strong>，和<strong>复数</strong></p><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><p>整数取整是直接截断小数部分，这样效率更高，而不是四舍五入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a = <span class="number">5.99</span></span><br><span class="line"><span class="meta">>>> </span>print(int(a))</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h2><p>浮点数符合 IEEE754的标准</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="number">0.1</span> + <span class="number">0.2</span></span><br><span class="line"><span class="number">0.30000000000000004</span></span><br></pre></td></tr></tbody></table></figure></div><p>为了精准计算，引入 <code>import decimal</code> 模块</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">import</span> decimal</span><br><span class="line"><span class="meta">>>> </span>a = decimal.Decimal(<span class="string">"0.1"</span>)</span><br><span class="line"><span class="meta">>>> </span>b = decimal.Decimal(<span class="string">"0.2"</span>)</span><br><span class="line"><span class="meta">>>> </span>print(a + b)</span><br><span class="line"><span class="number">0.3</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h2><p>获取复数的实部和虚部</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>x = <span class="number">1</span> + <span class="number">2j</span></span><br><span class="line"><span class="meta">>>> </span>x.real</span><br><span class="line"><span class="number">1.0</span></span><br><span class="line"><span class="meta">>>> </span>x.imag</span><br><span class="line"><span class="number">2.0</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="地板除"><a href="#地板除" class="headerlink" title="地板除 //"></a>地板除 //</h2><p>地板除的原则是，向<strong>比结果小的整数</strong>取</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="number">5</span> //<span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment"># 结果是2.5 向比结果小的整数取，就是2</span></span><br><span class="line"><span class="meta">>>> </span><span class="number">-5</span> // <span class="number">2</span></span><br><span class="line"><span class="number">-3</span></span><br><span class="line"><span class="comment"># 结果是-2.5，比结果小的是 -3</span></span><br></pre></td></tr></tbody></table></figure></div><p>一个数学公式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = (x // y) * y + (x % y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#举例</span></span><br><span class="line"><span class="number">5</span> = (<span class="number">5</span> // <span class="number">2</span>) * <span class="number">2</span> + (<span class="number">5</span> % <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="获得类型"><a href="#获得类型" class="headerlink" title="获得类型"></a>获得类型</h1><ul><li>type() 返回变量类型</li><li>isinstance(变量，变量种类) 返回布尔值</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>a = <span class="number">5.99</span></span><br><span class="line"><span class="meta">>>> </span>type(a)</span><br><span class="line"><<span class="class"><span class="keyword">class</span> '<span class="title">float</span>'></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">>>> <span class="title">isinstance</span><span class="params">(a,float)</span></span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h1 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h1><table><thead><tr><th>优先级（值越大，优先级越高）</th><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>lambda</td><td>Lambda表达式</td></tr><tr><td>2</td><td>if - else</td><td>条件表达式</td></tr><tr><td>3</td><td>or</td><td>布尔 “或”</td></tr><tr><td>4</td><td>and</td><td>布尔“与”</td></tr><tr><td>5</td><td>not</td><td>布尔“非”</td></tr><tr><td>6</td><td>in,not in,is,is not,<,<=,>,>=,!=,==</td><td>成员测试，同一性测试，比较</td></tr><tr><td>7</td><td>|</td><td>按位或</td></tr><tr><td>8</td><td>^</td><td>按位异或</td></tr><tr><td>9</td><td>&</td><td>按位与</td></tr><tr><td>10</td><td><<,>></td><td>移位</td></tr><tr><td>11</td><td>+,-</td><td>加减法</td></tr><tr><td>12</td><td>* ，@，/，//，%</td><td>乘法，矩阵乘法，除法，地板除。取余数</td></tr><tr><td>13</td><td>+x，-x，~x</td><td>正负号，按位翻转</td></tr><tr><td>14</td><td>**</td><td>指数</td></tr><tr><td>15</td><td>await x</td><td>Await 表达式</td></tr><tr><td>16</td><td>x[index]，x[index,index]，x(arguments…)，x.attribute</td><td>下标，切片，函数调用，属性引用</td></tr><tr><td>17</td><td>(expressions…)，[expressions…]，{key:value…}，{expressions..}</td><td>绑定或元组显示，列表显示，字典显示，集合显示</td></tr></tbody></table><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span>((<span class="keyword">not</span> <span class="number">1</span>) <span class="keyword">or</span> ( <span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">3</span> <span class="keyword">and</span> <span class="number">4</span>) <span class="keyword">or</span> (<span class="number">5</span> <span class="keyword">and</span> <span class="number">6</span>) <span class="keyword">or</span> (<span class="number">7</span> <span class="keyword">and</span> <span class="number">8</span> <span class="keyword">and</span> <span class="number">9</span>)) == <span class="number">4</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">>>> </span><span class="keyword">not</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">or</span> <span class="number">3</span> <span class="keyword">and</span> <span class="number">4</span> <span class="keyword">or</span> <span class="number">5</span> <span class="keyword">and</span> <span class="number">6</span> <span class="keyword">or</span> <span class="number">7</span> <span class="keyword">and</span> <span class="number">8</span> <span class="keyword">and</span> <span class="number">9</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment"># 优先级是 not > and > or，所以会优先计算not 1 ，为0</span></span><br><span class="line"><span class="comment"># 0 or (0 and 1) or (3 and 4) or (5 and 6) or (7 and 8 and 9)</span></span><br><span class="line"><span class="comment"># 跟上一道题一样了</span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode 204】计算质数</title>
      <link href="p/65040.html"/>
      <url>p/65040.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="LeetCode-204-计算质数"><a href="#LeetCode-204-计算质数" class="headerlink" title="LeetCode 204 计算质数"></a>LeetCode 204 计算质数</h1><h2 id="统计所有小于非负整数-n-的质数的数量。"><a href="#统计所有小于非负整数-n-的质数的数量。" class="headerlink" title="统计所有小于非负整数 n 的质数的数量。"></a>统计所有小于非负整数 <em>n</em> 的质数的数量。</h2><p><strong>示例:</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: 10</span><br><span class="line">输出: 4</span><br><span class="line">解释: 小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。</span><br></pre></td></tr></tbody></table></figure></div><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><p>引入一个算法，叫 <strong>厄拉多塞素数筛选法</strong></p><p><a href="C:%5CUsers%5C%E5%AE%B6%E5%BA%AD%5CDesktop%5C23d348bef930ca4bb73f749500f664ccffc5e41467aac0ba9787025392ca207b-1.gif" data-fancybox="group" data-caption="23d348bef930ca4bb73f749500f664ccffc5e41467aac0ba9787025392ca207b-1" class="fancybox"><img alt="23d348bef930ca4bb73f749500f664ccffc5e41467aac0ba9787025392ca207b-1" title="23d348bef930ca4bb73f749500f664ccffc5e41467aac0ba9787025392ca207b-1" data-src="C:%5CUsers%5C%E5%AE%B6%E5%BA%AD%5CDesktop%5C23d348bef930ca4bb73f749500f664ccffc5e41467aac0ba9787025392ca207b-1.gif" src="/img/loading.gif" class="lazyload"></a></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> countPrimes = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (n < <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//给所有的数值默认位false</span></span><br><span class="line">        <span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">let</span> primeCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">2</span>;i < n;i++){</span><br><span class="line">            <span class="comment">//如果不是质数</span></span><br><span class="line">            <span class="keyword">if</span>(!arr[i]){</span><br><span class="line">                primeCount++;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//循环排除所有i的倍数</span></span><br><span class="line">            <span class="comment">//从i * 2开始，来排除</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = i * <span class="number">2</span>;j < n;j = j + i){</span><br><span class="line">                arr[j] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> primeCount;</span><br><span class="line">    };</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初级算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【LeetCode 038】外观数列</title>
      <link href="p/1534.html"/>
      <url>p/1534.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="外观数列"><a href="#外观数列" class="headerlink" title="外观数列"></a>外观数列</h1><h2 id="「外观数列」是一个整数序列，从数字-1-开始，序列中的每一项都是对前一项的描述。前五项如下："><a href="#「外观数列」是一个整数序列，从数字-1-开始，序列中的每一项都是对前一项的描述。前五项如下：" class="headerlink" title="「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下："></a>「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.     1</span><br><span class="line">2.     11</span><br><span class="line">3.     21</span><br><span class="line">4.     1211</span><br><span class="line">5.     111221</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p><code>1</code> 被读作 <code>"one 1"</code> (<code>"一个一"</code>) , 即 <code>11</code>。<br><code>11</code> 被读作 <code>"two 1s"</code> (<code>"两个一"</code>）, 即 <code>21</code>。<br><code>21</code> 被读作 <code>"one 2"</code>,  “<code>one 1"</code> （<code>"一个二"</code> , <code>"一个一"</code>) , 即 <code>1211</code>。</p><p>给定一个正整数 <em>n</em>（1 ≤ <em>n</em> ≤ 30），输出外观数列的第 <em>n</em> 项。</p><p>注意：整数序列中的每一项将表示为一个字符串。</p></blockquote><p>我的解题思路</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">{number}</span> <span class="variable">n</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">{string}</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">method1</span>(<span class="params">str</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> result_str = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>,len = str.length - <span class="number">1</span>;i < len;i++){</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(str[i] == str[i+<span class="number">1</span>]){</span><br><span class="line">                count++;</span><br><span class="line">                <span class="comment">//如果是倒数第二个跟倒数第一个相等，直接返回</span></span><br><span class="line">                <span class="keyword">if</span>(i == len - <span class="number">1</span>){</span><br><span class="line">                    result_str += count + <span class="string">''</span> + str[i] + <span class="string">''</span>;</span><br><span class="line">                    <span class="keyword">return</span> result_str;</span><br><span class="line">                }</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                result_str += count + <span class="string">''</span> + str[i] + <span class="string">''</span>;</span><br><span class="line">                <span class="comment">//重新计数</span></span><br><span class="line">                count = <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//如果是倒数第二个跟倒数第一个不相等，处理一下最后一位</span></span><br><span class="line">                <span class="keyword">if</span>(i == len - <span class="number">1</span>){</span><br><span class="line">                    result_str += count + <span class="string">''</span> + str[i+<span class="number">1</span>] + <span class="string">''</span>;</span><br><span class="line">                    <span class="keyword">return</span> result_str;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*传入待处理字符串str，返回描述字符串result_str*/</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">countAndSay</span>(<span class="params">n</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> arr = [<span class="string">"1"</span>,<span class="string">"11"</span>];</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>){</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"1"</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">2</span>){</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"11"</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i < n; i++) {</span><br><span class="line">            arr.push(method1(arr[i<span class="number">-1</span>]));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> arr[n<span class="number">-1</span>]</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>参考时间消耗最低的代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> countAndSay = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> prev = <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i < n; i++) {</span><br><span class="line">            prev = prev.replace(<span class="regexp">/(\d)\1*/g</span>, item => <span class="string">`<span class="subst">${item.length}</span><span class="subst">${item[<span class="number">0</span>]}</span>`</span>)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    };</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初级算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-cli 微博注册登录系统</title>
      <link href="p/bb95902e.html"/>
      <url>p/bb95902e.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Vue-cli-项目"><a href="#Vue-cli-项目" class="headerlink" title="Vue-cli 项目"></a>Vue-cli 项目</h1><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p><a href="https://img-blog.csdnimg.cn/20200704095034889.gif" data-fancybox="group" data-caption="Vue-cli 微博注册登录系统" class="fancybox"><img alt="Vue-cli 微博注册登录系统" title="Vue-cli 微博注册登录系统" data-src="https://img-blog.csdnimg.cn/20200704095034889.gif" src="/img/loading.gif" class="lazyload"></a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p>链接：<a href="https://pan.baidu.com/s/1h7GcnPzGe0AmztnSD9gv1A" target="_blank" rel="noopener">https://pan.baidu.com/s/1h7GcnPzGe0AmztnSD9gv1A</a><br>提取码：na37</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul><li>首先花了点事件撸出页面</li><li>然后设计逻辑，其中有些坑记录一下</li><li><a href="https://www.mscto.com/css/9831.html" target="_blank" rel="noopener">Input框样式</a>参考这个连接</li><li><code>express</code><a href="https://blog.csdn.net/u010263423/article/details/106544103" target="_blank" rel="noopener">的使用</a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this：它到底指向哪里！箭头函数的this又是啥？</title>
      <link href="p/3912d205.html"/>
      <url>p/3912d205.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="JavaScritp-中的-this"><a href="#JavaScritp-中的-this" class="headerlink" title="JavaScritp 中的 this"></a>JavaScritp 中的 this</h1><h2 id="总结一句话（永真给的信）"><a href="#总结一句话（永真给的信）" class="headerlink" title="总结一句话（永真给的信）"></a>总结一句话（永真给的信）</h2><p>大雪纷飞，永真在井上面丢<del>垃圾</del>一封信，信上写着如下内容： </p><blockquote><p><strong>谁最终调用，<code>this</code> 就指向谁。</strong></p></blockquote><p>那么如何理解永真写的话呢？请接着往下看~</p><hr><h2 id="默认绑定（指向少主window）"><a href="#默认绑定（指向少主window）" class="headerlink" title="默认绑定（指向少主window）"></a>默认绑定（指向少主window）</h2><blockquote><p>我（this）的职责就是保护<del>指向</del> 少主，少主喜欢用window玩游戏，姑且叫少主window吧。</p></blockquote><ul><li>只狼听从了义父之前的命令，好好保护少主，所以<code>this</code>指针（<del>只狼</del> ）默认绑定（<del>跟随</del> ）的是 <code>window</code>（<del>少主</del> ）</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);      <span class="comment">// window</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li><del>少主活了几百年，还那么年轻，而且会的东西很多</del> 少主还会<code>a</code>函数，写全局函数的话，也是指向的 <code>window</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line">a()                     <span class="comment">// window</span></span><br><span class="line"><span class="comment">//实际上是  window.a(); 我们可以展开window看看</span></span><br></pre></td></tr></tbody></table></figure></div><a href="https://img-blog.csdnimg.cn/20200630100252278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200630100252278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li><del>少主还会做日晷，沙漏等小工具，用来做定时器</del>， 定时器是<code>window</code>（<del>少主</del> ）的方法，所以<code>this</code>也会指向<code>window</code>。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// setInterval 也是 window 下的方法</span></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);<span class="comment">// window</span></span><br><span class="line">}, <span class="number">1000</span>)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="严格模式（变若之子）"><a href="#严格模式（变若之子）" class="headerlink" title="严格模式（变若之子）"></a>严格模式（变若之子）</h2><blockquote><p>为了追寻长生不老，山上的僧人开始作妖，严格实验了好多小孩，最后就一个小女孩活了下来，成了变若之子（假的皇子）</p></blockquote></li><li>严格模式下的<code>this</code>指向 <code>undefined</code><del>（因为是假的皇子，所以就<code>undefined</code>了）</del> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line">a()                     <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>补充：什么是严格模式<br>简单来说就是为了更好的规范 JavaScript 语言的书写，具体请参考<a href="http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html" target="_blank" rel="noopener">阮一峰的严格模式详解</a>。</p></blockquote></li></ul><h2 id="隐式绑定（苇名弦一郎）"><a href="#隐式绑定（苇名弦一郎）" class="headerlink" title="隐式绑定（苇名弦一郎）"></a>隐式绑定（苇名弦一郎）</h2><blockquote><p>情景：我们带着皇子一路小跑，走出隧道，只见弦一郎在堵门，<del>(简介，游戏名《只狼》，第一个BOSS的名字)</del> </p></blockquote><p>开门见山！！先来打<strong>苇名弦一郎</strong>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'我是全局name'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">'我是fn'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'我是objA'</span>,</span><br><span class="line">    showA:fn</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objB = {</span><br><span class="line">    name:<span class="string">"我是B对象"</span>,</span><br><span class="line">    showB:objA</span><br><span class="line">}</span><br><span class="line">objB.showB.showA()</span><br></pre></td></tr></tbody></table></figure></div><p>请问最终打印的是什么呢？这里我先不告诉你们答案，先跟着我一步一步往下走~</p><blockquote><p>分支1：没打过弦一郎（<del>没做对</del> ）：失去手臂，等待佛雕师（<del>作者</del> ）给你安义肢（<del>讲解</del> ）。<br>分支2：打过弦一郎：同样失去手臂（不要怪我卑鄙！我叫屑一狼），等待佛雕师….<br>战果：经验 +0，金币 -0，金钱 -0，HP -0，失去真手臂</p></blockquote><blockquote><p>次日：看到淡淡的油灯光亮，发现自己躺在破旧寺庙的草席上，并且获得了义肢。<br>战果：获得义肢，HP +100</p></blockquote><p>来看一下栗子（苇名城杂兵，<del>经验怪</del> ）：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    show: fn</span><br><span class="line">};</span><br><span class="line">obj.show();       <span class="comment">// {show: ƒ}</span></span><br><span class="line"><span class="comment">// this 指向的关键在于是谁最终执行的</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀<del>看懂了这个</del> ：金钱+5，经验+5</p></blockquote><p>第二个栗子（苇名城杂兵，<del>经验怪</del> ）：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    show: fn()<span class="comment">// 因为fn才最终执行者，括号代表执行！而 fn 是 window 下的函数</span></span><br><span class="line">};</span><br><span class="line">obj.show;       <span class="comment">// window</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：HP+5，金钱+5，经验+5<br>获得少主给的：伤葫芦，楔丸</p></blockquote><p>此时来到了苇名城 城邑外围 城门道，遇到了第一个boss（河源田直盛）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'我是A对象'</span>,</span><br><span class="line">    showA:fn</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objB = {</span><br><span class="line">    name:<span class="string">"我是B对象"</span>,</span><br><span class="line">    showB:objA</span><br><span class="line">}</span><br><span class="line">objB.showB.showA()       <span class="comment">// 我是A对象</span></span><br><span class="line"><span class="comment">// 为啥指的是objA呢？</span></span><br><span class="line"><span class="comment">// 你要清除是谁最终调用的fn，是不是objA里才有fn啊，最终调用的也是objA！所以指向就是objA。</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀<del>看懂了这个</del> ：HP+10，金钱+10，经验+10<br>获得技能：识破</p></blockquote><p>总结：以上例子可以说明，this的指向跟函数写在哪里没啥关系，关键在于<strong>最终调用者是谁</strong>！</p><h2 id="隐式丢失-赤鬼-鬼庭形部雅孝"><a href="#隐式丢失-赤鬼-鬼庭形部雅孝" class="headerlink" title="隐式丢失(赤鬼 + 鬼庭形部雅孝)"></a>隐式丢失(赤鬼 + 鬼庭形部雅孝)</h2><blockquote><p>情景：来到了被<strong>锁住的赤鬼</strong>。发现兜里没有月隐糖，也没有喷火器，没关系，有闪避+突刺，超级逃课打法。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'我是全局name'</span>;</span><br><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    name:<span class="string">'我是obj的name'</span>,</span><br><span class="line">    fn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> xxx = obj.fn;</span><br><span class="line">xxx();<span class="comment">// 我是全局name</span></span><br><span class="line"><span class="comment">// 这里为什么是全局name呢</span></span><br><span class="line"><span class="comment">// 因为xxx是最终调用者，而xxx属于window，所以this指向的是window</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：获得佛珠，忍者之药理知识•甲<br>失败：死，(少主的龙血之力，<del>无尽复活</del> )</p></blockquote><p>接着来到下一关</p><blockquote><p>情景：来到了苇名城 正门外城区，遇到鬼庭形部雅孝，不慌，追的驴的尾巴，砍就完事儿了，<del>逃课</del> </p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'我是全局name'</span>;</span><br><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    name:<span class="string">'我是obj的name'</span>,</span><br><span class="line">    fn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xxx</span>(<span class="params">param</span>) </span>{</span><br><span class="line"><span class="comment">// 2. 然后在这里执行函数</span></span><br><span class="line">    param();</span><br><span class="line">    <span class="comment">// 相当于 window.param()</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">// 1. 此时我把函数体当成参数传递进去了</span></span><br><span class="line">xxx(obj.fn)     <span class="comment">// 我是全局name</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：战斗记忆：鬼庭形部雅孝（攻击力强化），机关筒（义手强化工具）。<br>失败：死，(少主的龙血之力，<del>无尽复活</del> )</p></blockquote><p>接着到了火牛关</p><blockquote><p>情景：火牛血厚，建议买鞭炮（<del>前面的都看懂了</del> ）</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'我是全局name'</span>;</span><br><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    name:<span class="string">'我是obj的name'</span>,</span><br><span class="line">    fn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> obj1 = {</span><br><span class="line">    name:<span class="string">"福山润"</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">obj1.xxx = obj.fn;</span><br><span class="line">obj1.xxx();     <span class="comment">// 福山润</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：佛珠，忍者药理·乙。<br>失败：死，减一半的￥</p></blockquote><h2 id="显式绑定（樱龙，白蛇）"><a href="#显式绑定（樱龙，白蛇）" class="headerlink" title="显式绑定（樱龙，白蛇）"></a>显式绑定（樱龙，白蛇）</h2><p>我们可以通过<code>call</code>（<del>干柿子</del> ）、<code>apply</code>（<del>米</del> ）和<code>bind</code>（<del>樱龙之泪</del> ）方法更改指针的指向（不同结局）。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示转换</span></span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name: <span class="string">"aaa"</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> objB = {</span><br><span class="line">    name: <span class="string">"bbb"</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> objC = {</span><br><span class="line">    name: <span class="string">"ccc"</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'我是全局name'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">}</span><br><span class="line">fn();               <span class="comment">// 我是全局name</span></span><br><span class="line">fn.call(objA);      <span class="comment">// aaa</span></span><br><span class="line">fn.apply(objB);     <span class="comment">// bbb</span></span><br><span class="line">fn.bind(objC)();    <span class="comment">// ccc</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀枭，樱龙，白蛇：获得樱树枝，樱龙之泪，鲜柿子，月隐糖<br>失败：死，(少主的龙血之力，<del>无尽复活</del> )，金钱 -1/2 </p></blockquote><p>某些方法也可以显式的更改指针，比方说<code>forEach</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = {</span><br><span class="line">    name:<span class="string">'铃木雅之'</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);     <span class="comment">// 4 * 铃木雅之</span></span><br><span class="line">},obj)</span><br></pre></td></tr></tbody></table></figure></div><p>越到后期，游戏所需要的技巧就越高，熟练度也就越重要，（<del>不我就是平a格挡流</del> ）<br>显式绑定的<strong>优先级</strong> <strong>大于</strong> 隐式绑定的优先级，<strong>显式>隐式>默认</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'aaa'</span>,</span><br><span class="line">    fn:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objB = {</span><br><span class="line">    name:<span class="string">'bbb'</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">// 前面的是objA.fn() ，隐式绑定，省略了括号，</span></span><br><span class="line"><span class="comment">// 后面的call()是显示绑定</span></span><br><span class="line"><span class="comment">// 当显式隐式都存在的时候，显式优先级更大</span></span><br><span class="line">objA.fn.call(objB)      <span class="comment">//bbb</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="Dom节点中的this（杂兵）"><a href="#Dom节点中的this（杂兵）" class="headerlink" title="Dom节点中的this（杂兵）"></a>Dom节点中的this（杂兵）</h2><blockquote><p>发现个小胖子，他跟同伴走丢了，他想要我给他找彩色风车…</p></blockquote><p>其实这个跟之前讲的蛮像的，我就在这里再重复一下叭</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>></span>点我<span class="tag"><!--<span class="name"-->div</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span></span><br><span class="line">    }</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>).addEventListener(<span class="string">'click'</span>, show);</span></span><br><span class="line"><span class="handlebars"><span class="xml">    // <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>></span>点我<span class="tag"><!--<span class="name"-->div</span>></span></span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>).addEventListener(<span class="string">'click'</span>, show());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// window</span></span></span><br><span class="line"><span class="tag"><!--<span class="name"-->script</span>></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：卧槽小胖子好可怜的，<del>别杀了，骗到商人那里打扫战场</del><br>失败：良心受到谴责嗯~ o(<em>￣▽￣</em>)o</p></blockquote><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><blockquote><p>来到了苇名之底 毒沼，狮子猿 new 出一个小狮子猿，二打一，太难了</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// 1. 刚开始这里的this指向的是 window</span></span><br><span class="line">    <span class="comment">// 因为这是函数啊</span></span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">'堺雅人'</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">// 2. 然后通过new方法改变了 this 指向</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(p.name);</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：战斗记忆：无首狮子猿，佛珠*2，血刀术（使用不死斩断绝不死后获得）<br>失败：死，减一半的￥</p></blockquote><h2 id="箭头函数（另类）"><a href="#箭头函数（另类）" class="headerlink" title="箭头函数（另类）"></a>箭头函数（另类）</h2><blockquote><p>来到了苇名城 城邑外围 城门道，看到个没有头的家伙，无首，尼玛打了一架，被戳了菊花，屏幕上出现了：菜</p></blockquote><p>取决于：<strong>外层（上层）作用域中的<code>this</code></strong>，和他本身没有关系</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'www'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// 这里就是箭头函数上层作用域</span></span><br><span class="line">    <span class="comment">// 这里的 this 指向 window</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'aaa'</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> xxx = fn();        <span class="comment">// www</span></span><br><span class="line">xxx();                 <span class="comment">// www</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：哼将之降灵<br>失败：死，减一半的￥</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'www'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="comment">// 这里就是箭头函数上层作用域</span></span><br><span class="line">    <span class="comment">// 这里的 this 通过 call 方法指向了 objA</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'aaa'</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> xxx = fn.call(objA);        <span class="comment">// aaa</span></span><br><span class="line">xxx();                          <span class="comment">// aaa</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>情景：最后来到了苇名城主城 贮水城区，弦一郎喝了变若（<del>弱</del>） 水，剑圣苇名一心想要实现他儿子的最后的愿望，就是守护这片土地，于是重返战场…</p></blockquote><ul><li>箭头函数中的<code>this</code>它既是吃软饭的，也很专一</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'www'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">// 吃软饭的箭头函数this：一直跟随着上层作用域 </span></span><br><span class="line">    <span class="comment">// 这里就是箭头函数上层作用域</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> objA = {</span><br><span class="line">    name:<span class="string">'aaa'</span></span><br><span class="line">};</span><br><span class="line"><span class="keyword">var</span> objB = {</span><br><span class="line">    name:<span class="string">'bbb'</span></span><br><span class="line">};</span><br><span class="line"><span class="comment">// 此时xxx就是箭头函数</span></span><br><span class="line"><span class="keyword">var</span> xxx = fn.call(objA);        <span class="comment">// aaa</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我这时修改箭头函数的指向，然并卵</span></span><br><span class="line"><span class="comment">// 箭头函数中的this很专一，取决于外层作用域的指向</span></span><br><span class="line">xxx.call(objB);                 <span class="comment">// aaa</span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>如果想改箭头函数的<code>this</code>，那么只能修改上层作用域的<code>this</code>，比方说上面的例子</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只有修改上层作用域的this，才能改变箭头函数的this</span></span><br><span class="line"><span class="keyword">var</span> xxx = fn.call(objb);        <span class="comment">// bbb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 即使是修改了箭头函数的指向也没用</span></span><br><span class="line">xxx.call(objA);                 <span class="comment">// bbb</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>成功忍杀：战斗记忆：剑圣 苇名一心，秘传·龙闪（技能）。<br>失败：死，我死了200多回hhhh。<br>通关，赶快去救小皇子~</p></blockquote><hr><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="执行上下文"><a href="#执行上下文" class="headerlink" title="执行上下文"></a>执行上下文</h3><p>执行上下文是指 <strong>函数调用时</strong> 在执行栈中产生的变量对象，这个变量对象我们无法直接访问，但是可以访问其中的变量、<code>this</code>对象等。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fn, bar; <span class="comment">// 1、进入全局上下文环境</span></span><br><span class="line">bar = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> b = <span class="number">5</span>;</span><br><span class="line">  fn(x + b); <span class="comment">// 3、进入fn函数上下文环境</span></span><br><span class="line">};</span><br><span class="line">fn = <span class="function"><span class="keyword">function</span>(<span class="params">y</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> c = <span class="number">5</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(y + c); <span class="comment">//4、fn出栈，bar出栈</span></span><br><span class="line">};</span><br><span class="line">bar(<span class="number">10</span>); <span class="comment">// 2、进入bar函数上下文环境</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzcvMTZjNmE2M2I5NWU5MzhkZQ?x-oss-process=image/format,png" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS84LzcvMTZjNmE2M2I5NWU5MzhkZQ?x-oss-process=image/format,png" src="/img/loading.gif" class="lazyload"></a></p><p>每次函数调用时，执行栈栈顶都会产生一个新的执行上下文环境，JavaScript引擎会以栈的方式来处理它们，这个栈，我们称其为函数调用栈(call stack)。栈底永远都是全局上下文，而栈顶就是当前处于活动状态的正在执行的上下文，也称为活动对象（running execution context，图中蓝色的块），区别与底下被挂起的变量对象（执行上下文）。</p><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><p>用于表达源代码中一个固定值的表示法</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
            <tag> 精讲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript的原型，原型链到底是什么！看完这篇绝对会有感悟_</title>
      <link href="p/d3a0134f.html"/>
      <url>p/d3a0134f.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="JavaScript-原型链"><a href="#JavaScript-原型链" class="headerlink" title="JavaScript 原型链"></a>JavaScript 原型链</h1><p>平常老听别人说什么原型链，我总是半知半解的，终于有时间好好梳理一下！给大家介绍我老婆。</p><h2 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h2><p>我们先来看一下这张图，不理解没关系，我来慢慢解释，先有个印象！当然结衣父母也可以生男孩（我觉得还是生女孩好 ohhhhhh）<br><a href="https://img-blog.csdnimg.cn/20200629231852217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629231852217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h2 id="关卡1：通过构造函数-gt-new一个对象"><a href="#关卡1：通过构造函数-gt-new一个对象" class="headerlink" title="关卡1：通过构造函数 => new一个对象"></a>关卡1：通过构造函数 => new一个对象</h2><p>听说您还没有对象？没关系，我来给你<code>new</code>一个！</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 首先通过构造函数，初始化一个女孩儿</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Girl</span>(<span class="params">name, age, bustSize</span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = name;</span><br><span class="line">       <span class="keyword">this</span>.age = age;</span><br><span class="line">       <span class="keyword">this</span>.bustSize = bustSize;</span><br><span class="line">       <span class="keyword">this</span>.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">`初次见面，我叫<span class="subst">${<span class="keyword">this</span>.name}</span>,请多指教！`</span>);</span><br><span class="line">       }</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 实例化一个女朋友</span></span><br><span class="line">   <span class="keyword">var</span> girlfriend1 = <span class="keyword">new</span> Girl(<span class="string">'唐泽雪穗'</span>, <span class="number">22</span>, <span class="string">'D'</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 3. 女朋友的自我介绍</span></span><br><span class="line">   girlfriend1.show();<span class="comment">//初次见面，我叫唐泽雪穗,请多指教！</span></span><br></pre></td></tr></tbody></table></figure></div><p>以上实例，我们可以知道，通过构造函数能够<code>new</code>一个老婆<del>对象</del> 出来。</p><h2 id="关卡2：实例化对象-gt-原型对象"><a href="#关卡2：实例化对象-gt-原型对象" class="headerlink" title="关卡2：实例化对象 => 原型对象"></a>关卡2：实例化对象 => 原型对象</h2><p>我们再来看看 <code>girlfriend1</code>里都有些什么吧！</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(girlfriend1);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20200629212659306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629212659306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li>我们发现，除了我们定义的年龄，胸围，名字和<code>show</code>方法之外，又多了一个<code>__proto__</code>，这个我们没写呀！！<strong>对，这个<code>__proto__</code>就是浏览器帮我们写的</strong>。</li><li>其实，每一个对象都会有<code>__proto__</code>，他是实例化对象的<strong>原型对象</strong>。</li><li>你可以理解为：我的对象，<strong>石原里美</strong>，她不是石头缝里蹦出来的石猴，而是我的可爱的老丈人生的，<strong>原型对象相当于爹</strong>。</li></ul><p>我再给大家介绍另一个我的老婆。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Girl</span>(<span class="params">name, age, bustSize</span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = name;</span><br><span class="line">       <span class="keyword">this</span>.age = age;</span><br><span class="line">       <span class="keyword">this</span>.bustSize = bustSize;</span><br><span class="line">   }</span><br><span class="line">   <span class="comment">// 1. 这次我在Girl的原型上添加show方法</span></span><br><span class="line">   Girl.prototype.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">`初次见面，我叫<span class="subst">${<span class="keyword">this</span>.name}</span>,请多指教！`</span>);</span><br><span class="line">   }</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 2. 实例化新老婆</span></span><br><span class="line">   <span class="keyword">var</span> girlfriend2 = <span class="keyword">new</span> Girl(<span class="string">'新垣结衣'</span>, <span class="number">30</span>, <span class="string">''</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 3. 老婆的自我介绍</span></span><br><span class="line">   girlfriend2.show();</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 4. 打印老婆</span></span><br><span class="line">   <span class="built_in">console</span>.log(girlfriend2);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20200629221730479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629221730479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li>我们发现，<code>Girl</code>类中并没有<code>show</code>方法，而我在原型（爹）上添加了<code>show</code>方法，于是新垣结衣就问她的爹有没有<code>show</code>方法，哎有！那就用！</li></ul><h2 id="关卡3-1：原型对象-gt-构造函数"><a href="#关卡3-1：原型对象-gt-构造函数" class="headerlink" title="关卡3.1：原型对象 => 构造函数"></a>关卡3.1：原型对象 => 构造函数</h2><ul><li>我们可以通过原型对象（结衣的爸爸），通过<code>constructor</code>知道他们的小孩（构造函数）长什么样（毕竟有一半的染色体呢）<br><a href="https://img-blog.csdnimg.cn/20200629222715123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629222715123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li></ul><h2 id="关卡3-2：构造函数-gt-原型对象"><a href="#关卡3-2：构造函数-gt-原型对象" class="headerlink" title="关卡3.2：构造函数 => 原型对象"></a>关卡3.2：构造函数 => 原型对象</h2><ul><li>我们也可以通过小孩的特点（构造函数），通过DNA鉴定（<code>prototype</code>）来找到谁是我的亲生父亲（原型）。<br><a href="https://img-blog.csdnimg.cn/2020062922271936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020062922271936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><h2 id="最终关卡：无线循环"><a href="#最终关卡：无线循环" class="headerlink" title="最终关卡：无线循环"></a>最终关卡：无线循环</h2></li><li>不知道您有没有发现，一个神奇的循环</li></ul><p><a href="https://img-blog.csdnimg.cn/20200629223919930.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629223919930.gif" src="/img/loading.gif" class="lazyload"></a></p><ul><li>是不是有点理解了，又有点不理解了，<del>发出猪叫</del> ，回过头看看我的第一张图~<h2 id="隐藏关卡"><a href="#隐藏关卡" class="headerlink" title="隐藏关卡"></a>隐藏关卡</h2><h3 id="原型链的机制"><a href="#原型链的机制" class="headerlink" title="原型链的机制"></a>原型链的机制</h3></li><li>举个栗子：为什么数组的方法那么多呢？我们不妨打印一下：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'苍井玛丽亚'</span>, <span class="string">'小原好美'</span>, <span class="string">'雪之下雪乃'</span>];</span><br><span class="line">   <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20200629224427649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629224427649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li>我们可以看到，数组的原型上有好多好多的方法，数组没有这种方法的话，就会找原型！</li><li>我在数组的原型上添加个新的方法</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'苍井玛丽亚'</span>, <span class="string">'小原好美'</span>, <span class="string">'雪之下雪乃'</span>];</span><br><span class="line">  <span class="built_in">Array</span>.prototype.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">  }</span><br><span class="line">  arr.show();<span class="comment">// 1</span></span><br><span class="line">  <span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20200629225028897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629225028897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><ul><li><p>那我在<code>Object</code>上添加这个方法，数组还能使用吗？？？<br><a href="https://img-blog.csdnimg.cn/20200629225344738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200629225344738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></li><li><p>总结一下：对象本身没有这个方法的话，就去像他爹要，如果爹也没有的话，就去找爷爷。</p></li><li><p>新垣结衣本身没有<code>show</code>方法，就去找他的爹要<code>show</code>方法，爹要是没有，就去找爷爷。</p></li><li><p>其实通过实践，你也可以知道最大的爹是谁：<code>Object</code>，也就是说，如果<code>Object</code>也没有 这个方法了，那么就GG了。输出<code>Uncaught TypeError: arr.show is not a function</code>。也就是找不到，抛出错误。</p></li></ul><h3 id="各种等式"><a href="#各种等式" class="headerlink" title="各种等式"></a>各种等式</h3><p>我们还是以这个为基础</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Girl</span>(<span class="params">name, age, bustSize</span>) </span>{</span><br><span class="line">       <span class="keyword">this</span>.name = name;</span><br><span class="line">       <span class="keyword">this</span>.age = age;</span><br><span class="line">       <span class="keyword">this</span>.bustSize = bustSize;</span><br><span class="line">   }</span><br><span class="line">   Girl.prototype.show = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">`初次见面，我叫<span class="subst">${<span class="keyword">this</span>.name}</span>,请多指教！`</span>);</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span> girlfriend2 = <span class="keyword">new</span> Girl(<span class="string">'新垣结衣'</span>, <span class="number">30</span>, <span class="string">''</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>这里仅仅是举几个例子抛砖引玉</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新垣结衣的爸爸 == 新垣结衣兄弟的爸爸</span></span><br><span class="line">   <span class="built_in">console</span>.log(girlfriend2.__proto__ == Girl.prototype);   <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 新垣结衣的爸爸的孩子 == 新垣结衣的兄弟s</span></span><br><span class="line">   <span class="built_in">console</span>.log(girlfriend2.__proto__.constructor == Girl); <span class="comment">// true</span></span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
            <tag> 精讲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="p/16107.html"/>
      <url>p/16107.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 初始文章 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cannot be loaded because running scripts is disabled on this system.</title>
      <link href="p/c70e1703.html"/>
      <url>p/c70e1703.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="问题：PowerShell：cannot-be-loaded-because-running-scripts-is-disabled-on-this-system"><a href="#问题：PowerShell：cannot-be-loaded-because-running-scripts-is-disabled-on-this-system" class="headerlink" title="问题：PowerShell：cannot be loaded because running scripts is disabled on this system."></a>问题：PowerShell：cannot be loaded because running scripts is disabled on this system.</h1><h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2><blockquote><p>想建立个vue项目，执行<code>vue create vueProg001</code>时报错</p></blockquote><p><a href="https://img-blog.csdnimg.cn/20200703095553804.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703095553804.png" src="/img/loading.gif" class="lazyload"></a></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在<code>管理员PowerShell</code>下输入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></tbody></table></figure></div><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>如果使用Windows Server 2008 R2，则必须有x64和x86版本的PowerShell，这两个版本都必须<strong>设置其执行策略</strong>。</p><p>作为管理员，您可以通过在PowerShell窗口中键入以下内容来设置执行策略：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></tbody></table></figure></div><p>有关更多信息，请参见使用<a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7" target="_blank" rel="noopener">Set-ExecutionPolicy Cmdlet</a>。</p><p><a href="https://img-blog.csdnimg.cn/20200703095737257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703095737257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>如果你不在<code>管理员</code>下输入的话，会报错<br><a href="https://img-blog.csdnimg.cn/20200703095725236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703095725236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>成功之后就可以打代码了<br><a href="https://img-blog.csdnimg.cn/20200703095842437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200703095842437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端27_代码管理】Svn &amp; Git</title>
      <link href="p/10512fe7.html"/>
      <url>p/10512fe7.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Svn-amp-Git"><a href="#Svn-amp-Git" class="headerlink" title="Svn & Git"></a>Svn & Git</h1><p>他们两个都是代码管理工具</p><hr><h2 id="Svn"><a href="#Svn" class="headerlink" title="Svn"></a>Svn</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>服务端的界面是这个样子的。<br>可以通过服务端，获得代码仓库的地址，修改代码仓库的管理者。给管理者分权限等等一系列操作。<br><a href="https://img-blog.csdnimg.cn/20200627104646304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627104646304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ul><li>如果你是项目的新人，第一次需要先checkout来下载当前的项目，点击之后会弹出一个窗口，输入仓库的地址，点击确定，下载远程仓库的代码，以后都是update。</li><li>提交文件的话，右键<code>svn commit</code>，然后输入需求编号，员工的工号，还有日志的信息</li><li>如果本地代码版本和服务器上的代码版本不一致，是不会让你提交的，会报错。这时候需要更新，而且你写的代码依然存在（只要你们修改的不是同一行，有冲突的可能性）</li><li>如果很巧，有两个人同时修改了同一行，那么SVN会返回几个版本。（其中有你修改的，别人修改的，服务器上的版本，然后按照需求来接着修改代码）</li><li>提交之前要对比一下，确认好了之后在提交(可以使用beyondCompare对比工具)</li><li>不要删空格和tab键，不然会冲突的（因为tab和空格在样子上是看不出来的）</li><li>自己的错误一定要及时改正。</li><li>变量要拼对了单词。</li><li>如果谁给你删了代码，查看log，就可以通过工号来骂他了。</li><li>回退版本<code>show log</code> ，之后在想要回退的版本上<code>update to revision</code>。</li></ul><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ul><li>程序员做需求之前要更新代码</li><li>功能写完，<strong>自测没有问题之后</strong>，（确保工程能够启动起来），提交代码。</li></ul><h3 id="代码环境"><a href="#代码环境" class="headerlink" title="代码环境"></a>代码环境</h3><ul><li>敏捷环境：开发人员使用，所有的开发人员公用一个环境。（开发周期变短）</li><li>冒烟环境：测试人员使用的。（一天/半天一同步），基本上就是生产环境，除了数据不太一样</li><li>生产环境：版本迭代，前期的程序员估计用不到。</li></ul><hr><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><p>林纳斯：Linux 内核的创始人，开源系统，代码管理工具对Linux开源，然而管理工具不让用了，所以它又做了个Git(非常牛逼)，<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784" target="_blank" rel="noopener">诞生背景。</a></p></li><li><p>我们可以通过这一张图来搞定Git的常用命令，图中从右到左分别是工作区、暂存区、本地仓库、远程仓库<a href="https://img-blog.csdnimg.cn/20200627085453859.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="工作区、暂存区、本地仓库、远程仓库" class="fancybox"><img alt="工作区、暂存区、本地仓库、远程仓库" title="工作区、暂存区、本地仓库、远程仓库" data-src="https://img-blog.csdnimg.cn/20200627085453859.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></li><li><p>先说一下大体叭：右面的这些（除了<code>Remote</code>）,都是我们本地的，而<code>Remote</code>是远端代码仓库，我们最后要从<code>Repository</code> 推送到<code>Remote</code>中。</p></li></ul><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li>集中式仓库：集中一起来开发，公司经常用，合作模式</li><li>分布式仓库：分布到各个电脑上，个人开发可以使用</li></ul><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>在一个空文件夹下，鼠标右键打开<code>Git Bash</code>，键入命令<code>git init</code>，创建一个<code>.git</code>的隐藏文件夹。<br><a href="https://img-blog.csdnimg.cn/20200627091941896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627091941896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>配置：输入你的名字和邮箱，之后可以在<code>config</code>文件中查看到<br><a href="https://img-blog.csdnimg.cn/20200627092150191.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627092150191.png" src="/img/loading.gif" class="lazyload"></a><br><a href="https://img-blog.csdnimg.cn/20200627092249322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627092249322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="创建文件并添加到暂存区"><a href="#创建文件并添加到暂存区" class="headerlink" title="创建文件并添加到暂存区"></a>创建文件并添加到暂存区</h4><p>在文件夹下新建<code>a.txt</code>，然后通过命令<code>git add a.txt</code>添加到暂存区，（可以通过<code>git add .</code>添加所有修改的文件，就不需要老打文件名字了。）然后通过<code>git status</code>查看状态。<br><a href="https://img-blog.csdnimg.cn/20200627092551499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627092551499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="从暂存区提交到仓库"><a href="#从暂存区提交到仓库" class="headerlink" title="从暂存区提交到仓库"></a>从暂存区提交到仓库</h4><p>通过命令 <code>git commit -m '提交日志'</code>，提交到本地仓库中。(强制输入提交日志，会进入vim，通过<code>:wq</code>保存退出。)<br><a href="https://img-blog.csdnimg.cn/20200627093051410.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627093051410.png" src="/img/loading.gif" class="lazyload"></a></p><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><p>可以通过<code>git log</code> 查看详细日志，通过<code>git log --oneline</code> 查看简单的日志。<br>如果以后把这个窗口关闭了，然后还想看所有的<code>log</code>，可以通过<code>git reflog</code> 查看所有日志。<br><a href="https://img-blog.csdnimg.cn/20200627093756658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627093756658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h4><p>通过<code>git reset --hard 哈希值</code>，回退版本。</p><p><a href="https://img-blog.csdnimg.cn/20200627094636925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627094636925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><h4 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h4><h5 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h5><p>点击你的<code>github</code>仓库上的<code>Clone</code>。<br><a href="https://img-blog.csdnimg.cn/20200627095421945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627095421945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>在本地文件夹里键入<code>git clone 你的仓库地址</code><br><a href="https://img-blog.csdnimg.cn/20200627100131966.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627100131966.png" src="/img/loading.gif" class="lazyload"></a></p><h5 id="添加远端仓库地址"><a href="#添加远端仓库地址" class="headerlink" title="添加远端仓库地址"></a>添加远端仓库地址</h5><p>通过：<code>git remote add origin 仓库地址</code><br><a href="https://img-blog.csdnimg.cn/20200627103714992.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627103714992.png" src="/img/loading.gif" class="lazyload"></a></p><h5 id="推送到远端"><a href="#推送到远端" class="headerlink" title="推送到远端"></a>推送到远端</h5><p>通过<code>git push</code><br><a href="https://img-blog.csdnimg.cn/20200627103749882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200627103749882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端26_Webpack】介绍</title>
      <link href="p/c8bb9ea.html"/>
      <url>p/c8bb9ea.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Webpack-自学"><a href="#Webpack-自学" class="headerlink" title="Webpack 自学"></a>Webpack 自学</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>学习资源来自b站教学视频，<a href="https://www.bilibili.com/video/BV1e7411j7T5" target="_blank" rel="noopener">尚硅谷</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>Webpack是一种前端资源构建工具（把一些小的工具打包成大的工具），一个静态模块打包器</li><li>在 Webpack 看来，前端的所有资源文件（<code>js/json/css/img/less/...</code>）都会作为模块处理。</li><li>它将根据模块的依赖关系进行静态分析，打包生成对应的静态资源<code>bundle</code><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2></li><li>Entry：入口</li><li>Output：出口</li><li>Loader：这个webpack自身只理解javascript，loader相当于翻译官，把css，img这些内容进行webpack能识别的</li><li>Plugins：插件</li><li>Mode：模块</li></ul><hr><h2 id="Hello-Webpack"><a href="#Hello-Webpack" class="headerlink" title="Hello Webpack"></a>Hello Webpack</h2><ol><li>首先我们在文件夹下，用shell输入<code>npm init</code>，生成<code>package.json</code>文件（这个文件就是包管理文件，用来记录你都用了那些的包）</li><li>新建一个名为<code>bulid</code>的文件夹（用来导出打包好的文件）</li><li>新建一个名为<code>src</code>的文件夹（它的下面放将要打包的文件），并在此文件夹下新建<code>index.js</code>（入口文件），在里面写点东西（写个输出函数之类的方便测试）<br><a href="https://img-blog.csdnimg.cn/20200609193846516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200609193846516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>刚开始都要安装以下两个包<code>webpack</code> 和 <code>webpack-cli</code> ，我们通过shell命令安装即可： <code>npm install webpack webpack-cli-g</code></li><li>然后在项目文件夹下，输入<code>webpack ./src/index.js -o ./build/built.js --mode=development</code><br><a href="https://img-blog.csdnimg.cn/20200609194653988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200609194653988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br>生成打包文件<code>bulit.js</code></li><li>可以在写一个<code>html</code>，然后引用这个打包好的js来检测<br><a href="https://img-blog.csdnimg.cn/20200609194907746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200609194907746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>一个比较简单的webpack流程就是这样啦</li></ol><hr><h2 id="打包CSS"><a href="#打包CSS" class="headerlink" title="打包CSS"></a>打包CSS</h2><h3 id="推理是否能直接打包CSS"><a href="#推理是否能直接打包CSS" class="headerlink" title="推理是否能直接打包CSS"></a>推理是否能直接打包CSS</h3><ul><li>我们可以做个测试：webpack是否能直接打包CSS等文件呢？</li><li>首先我新建一个<code>css</code>文件</li><li>在入口js文件中引入css文件</li><li>尝试bash打包：报错<br><a href="https://img-blog.csdnimg.cn/2020060919535066.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2020060919535066.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li><li>然而它也可以处理json文件，证明如下<br><a href="https://img-blog.csdnimg.cn/20200609195841599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200609195841599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></li></ul><hr><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ol><li>webpack 能处理<code>js/json</code>，不能处理<code>css/img</code>等其他资源</li><li>生产环境和开发环境能将ES6模块化编译成浏览器能识别的模块化</li><li>生产环境比开发环境多一个压缩js代码</li></ol><hr><h3 id="如何处理CSS等文件打包？"><a href="#如何处理CSS等文件打包？" class="headerlink" title="如何处理CSS等文件打包？"></a>如何处理CSS等文件打包？</h3><h4 id="所需插件"><a href="#所需插件" class="headerlink" title="所需插件"></a>所需插件</h4><ul><li>此时我们需要一个翻译官<code>css-loader</code>和<code>style-loader</code></li></ul><h4 id="插件工作过程"><a href="#插件工作过程" class="headerlink" title="插件工作过程"></a>插件工作过程</h4><ol><li>首先<code>css-loader</code>这个插件（通过npm），将css文件变成commonjs模块加载到js中，里面内容是样式字符串</li><li>然后<code>style-loader</code>这个插件，创建style标签，将js中的样式资源插入进去，添加到head中生效</li></ol><h4 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h4><ol><li>首先我们在项目里新建一个名为<code>webpack.config.js</code>的文件</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">webpack.config.js webpack的配置文件</span></span><br><span class="line"><span class="comment">作用： 指示webpack干那些活，当你运行webpack 指令时，会加载里面的配置</span></span><br><span class="line"><span class="comment">所有构建工具都是基于node平台运行的，模块化默认采用commonjs</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 解构赋值，resolve 用来 拼接 绝对路径的方法</span></span><br><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line"><span class="comment">// webpack配置：入口起点</span></span><br><span class="line">entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">output:{</span><br><span class="line"><span class="comment">// 输出文件名</span></span><br><span class="line">filename: <span class="string">'built.js'</span>,</span><br><span class="line"><span class="comment">// 输出路径</span></span><br><span class="line"><span class="comment">// __dirname是nodejs 的变量，代表当前文件的目录的绝对路径</span></span><br><span class="line">path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">},</span><br><span class="line"></span><br><span class="line"><span class="comment">// node找包特点：这个文件夹下没有，找它的父亲文件夹</span></span><br><span class="line"><span class="comment">// 所以可以在父级下载所需的包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// loader的配置</span></span><br><span class="line"><span class="built_in">module</span>:{</span><br><span class="line">rules: [</span><br><span class="line"><span class="comment">// 详细loader配置</span></span><br><span class="line"><span class="comment">// 不同文件格式必须配置不同loader处理</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">// 匹配那些文件</span></span><br><span class="line">test: <span class="regexp">/\.css$/</span>,</span><br><span class="line"><span class="comment">// 使用那些loader进行处理</span></span><br><span class="line">use: [</span><br><span class="line"><span class="comment">// use 数组中loader 执行顺序：从右到左，从下到上，</span></span><br><span class="line"><span class="comment">// 先执行css-loader，然后执行style-loader</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建style标签，将js中的样式资源插入进去，添加到head中生效</span></span><br><span class="line"><span class="string">'style-loader'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 将css文件变成commonjs模块加载到js中，里面内容是样式字符串</span></span><br><span class="line"><span class="string">'css-loader'</span></span><br><span class="line">]</span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line">test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">use: [</span><br><span class="line"><span class="string">'style-loader'</span>,</span><br><span class="line"><span class="string">'css-loader'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将less编译成css模型</span></span><br><span class="line"><span class="string">'less-loader'</span></span><br><span class="line">]</span><br><span class="line">}</span><br><span class="line">]</span><br><span class="line">},</span><br><span class="line"></span><br><span class="line"><span class="comment">// pulgins的插件</span></span><br><span class="line">plugins: [</span><br><span class="line"><span class="comment">// 详细plugins的配置</span></span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模式</span></span><br><span class="line">mode: <span class="string">'development'</span><span class="comment">// 测试模式，开发模式</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><ol start="2"><li>然后再当前项目下，打开终端，输入<code>webpack</code>进行打包</li></ol><p>你需要注意：</p><ul><li>在<code>loader</code>的配置中，不同文件格式必须配置不同<code>loader</code>处理，其中<code>use</code> 数组中插件的执行顺序：从右到左，从下到上，以这个为例，先执行<code>css-loader</code>，然后执行<code>style-loader</code></li></ul><hr><h2 id="打包HTML"><a href="#打包HTML" class="headerlink" title="打包HTML"></a>打包HTML</h2><ul><li>打包HTML需要一个名为<code>html-webpack-plugin</code>的<code>plugin</code></li><li>首先创建并编写在<code>webpack.config.js</code>文件</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">webpack.config.js</span></span><br><span class="line"><span class="comment">loader：</span></span><br><span class="line"><span class="comment">1下载</span></span><br><span class="line"><span class="comment">2.使用 配置loader</span></span><br><span class="line"><span class="comment">plugins：</span></span><br><span class="line"><span class="comment">1. 下载  在文件夹下打开终端 npm i html-webpack-plugin -D</span></span><br><span class="line"><span class="comment">2. 引入 </span></span><br><span class="line"><span class="comment">3. 使用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是一个构造函数</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpaclPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">output: {</span><br><span class="line">filename: <span class="string">'bulit.js'</span>,</span><br><span class="line">path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">},</span><br><span class="line"><span class="built_in">module</span>: {</span><br><span class="line">rules: [</span><br><span class="line"><span class="comment">// loader 的配置</span></span><br><span class="line">]</span><br><span class="line">},</span><br><span class="line">plugins:[</span><br><span class="line"><span class="comment">// 默认会创建一个空的html，自动引入打包输出的所有资源</span></span><br><span class="line"><span class="comment">// 所以就不需要自己手动引入了，手动引入反而出错</span></span><br><span class="line"><span class="comment">// 需求： 需要有结构的html问价 </span></span><br><span class="line"><span class="keyword">new</span> HtmlWebpaclPlugin({</span><br><span class="line"><span class="comment">// 复制 ./src/index.html 文件</span></span><br><span class="line">template: <span class="string">'./src/index.html'</span></span><br><span class="line">})</span><br><span class="line">],</span><br><span class="line">mode: <span class="string">'development'</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="打包图片文件"><a href="#打包图片文件" class="headerlink" title="打包图片文件"></a>打包图片文件</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">output:{</span><br><span class="line">filename: <span class="string">'bulit.js'</span>,</span><br><span class="line">path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">},</span><br><span class="line"><span class="built_in">module</span>:{</span><br><span class="line">rules:[</span><br><span class="line">{</span><br><span class="line">test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">use:[</span><br><span class="line"><span class="string">'style-loader'</span>,</span><br><span class="line"><span class="string">'css-loader'</span>,</span><br><span class="line"><span class="string">'less-loader'</span></span><br><span class="line">]</span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line"><span class="comment">// 问题：处理不了html中的图片</span></span><br><span class="line">test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要下载两个包 url-loader file-loader</span></span><br><span class="line"><span class="comment">// cnpm i url-loader file-loader</span></span><br><span class="line"><span class="comment">// 如果用到一个loader可以这么写，前面并不是use</span></span><br><span class="line">loader: <span class="string">'url-loader'</span>,</span><br><span class="line">options: {</span><br><span class="line"><span class="comment">// 图片大小小于8kb，就会被base64处理</span></span><br><span class="line"><span class="comment">// 优点： 减少请求数量（减轻服务器压力）</span></span><br><span class="line"><span class="comment">// 缺点： 图片体积会更大（文件请求速度更慢）</span></span><br><span class="line">limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">esModule: <span class="literal">false</span>,</span><br><span class="line"><span class="comment">// 给图片进行重命名</span></span><br><span class="line"><span class="comment">// 取图片hash值的前十位</span></span><br><span class="line"><span class="comment">// ext取图片的原扩展名</span></span><br><span class="line">name: <span class="string">'[hash:10].[ext]'</span>}</span><br><span class="line"></span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line">test: <span class="regexp">/\.html$/</span>,</span><br><span class="line"><span class="comment">// html-loader是 专门处理html  中的 img的</span></span><br><span class="line">loader: <span class="string">'html-loader'</span></span><br><span class="line">}</span><br><span class="line">]</span><br><span class="line">},</span><br><span class="line">plugins: [</span><br><span class="line"><span class="keyword">new</span> HtmlWebpackPlugin({</span><br><span class="line">template:<span class="string">`./src/index.html`</span></span><br><span class="line">})</span><br><span class="line">],</span><br><span class="line">mode: <span class="string">'development'</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="打包其他资源"><a href="#打包其他资源" class="headerlink" title="打包其他资源"></a>打包其他资源</h2><ul><li>打包其他的资源需要把 处理完的格式给排除掉<code>exclude</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: {</span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  },</span><br><span class="line">  <span class="built_in">module</span>: {</span><br><span class="line">    rules: [</span><br><span class="line">      {</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      },</span><br><span class="line">      <span class="comment">// 打包其他资源(除了html/js/css资源以外的资源)</span></span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 排除css/js/html资源</span></span><br><span class="line">        exclude: <span class="regexp">/\.(css|js|html|less)$/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: {</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    ]</span><br><span class="line">  },</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin({</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    })</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h2 id="devServer-热打包"><a href="#devServer-热打包" class="headerlink" title="devServer 热打包"></a>devServer 热打包</h2><ul><li>实时打包</li><li>开发服务器 devServer：用来自动化编译</li><li>需要先安装包<code>cnpm i webpack-dev-server  -D</code></li><li>然后在启动命令<code>npx webpack-dev-server</code></li><li>特点：只会在内存中编译打包，不会有任何输出，就是没有<code>bulid</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">  entry: <span class="string">'./src/index.js'</span>,</span><br><span class="line">  output: {</span><br><span class="line">    filename: <span class="string">'built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  },</span><br><span class="line">  <span class="built_in">module</span>: {</span><br><span class="line">    rules: [</span><br><span class="line">      {</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      },</span><br><span class="line">      <span class="comment">// 打包其他资源(除了html/js/css资源以外的资源)</span></span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 排除css/js/html资源</span></span><br><span class="line">        exclude: <span class="regexp">/\.(css|js|html|less)$/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: {</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    ]</span><br><span class="line">  },</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin({</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    })</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 开发服务器 devServer：用来自动化（自动编译，自动打开浏览器，自动刷新浏览器~~）</span></span><br><span class="line">  <span class="comment">// 特点：只会在内存中编译打包，不会有任何输出</span></span><br><span class="line">  <span class="comment">// 启动devServer指令为：npx webpack-dev-server</span></span><br><span class="line">  devServer: {</span><br><span class="line">    <span class="comment">// 项目构建后路径</span></span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">    <span class="comment">// 启动gzip压缩</span></span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 端口号</span></span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    <span class="comment">// 自动打开浏览器</span></span><br><span class="line">    open: <span class="literal">true</span></span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h2 id="开发环境配置"><a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h2><ul><li>所有资源的总处理</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  开发环境配置：能让代码运行</span></span><br><span class="line"><span class="comment">    运行项目指令：</span></span><br><span class="line"><span class="comment">      webpack 会将打包结果输出出去</span></span><br><span class="line"><span class="comment">      npx webpack-dev-server 只会在内存中编译打包，没有输出</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> { resolve } = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">  entry: <span class="string">'./src/js/index.js'</span>,</span><br><span class="line">  output: {</span><br><span class="line">    filename: <span class="string">'js/built.js'</span>,</span><br><span class="line">    path: resolve(__dirname, <span class="string">'build'</span>)</span><br><span class="line">  },</span><br><span class="line">  <span class="built_in">module</span>: {</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// loader的配置</span></span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 处理less资源</span></span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">      },</span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 处理css资源</span></span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">      },</span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 处理图片资源</span></span><br><span class="line">        test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        options: {</span><br><span class="line">          limit: <span class="number">8</span> * <span class="number">1024</span>,</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">          <span class="comment">// 关闭es6模块化</span></span><br><span class="line">          esModule: <span class="literal">false</span>,</span><br><span class="line">          outputPath: <span class="string">'imgs'</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 处理html中img资源</span></span><br><span class="line">        test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">        loader: <span class="string">'html-loader'</span></span><br><span class="line">      },</span><br><span class="line">      {</span><br><span class="line">        <span class="comment">// 处理其他资源</span></span><br><span class="line">        exclude: <span class="regexp">/\.(html|js|css|less|jpg|png|gif)/</span>,</span><br><span class="line">        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">        options: {</span><br><span class="line">          name: <span class="string">'[hash:10].[ext]'</span>,</span><br><span class="line">          outputPath: <span class="string">'media'</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    ]</span><br><span class="line">  },</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// plugins的配置</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin({</span><br><span class="line">      template: <span class="string">'./src/index.html'</span></span><br><span class="line">    })</span><br><span class="line">  ],</span><br><span class="line">  mode: <span class="string">'development'</span>,</span><br><span class="line">  devServer: {</span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">    compress: <span class="literal">true</span>,</span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    open: <span class="literal">true</span></span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="我遇到的错误排查"><a href="#我遇到的错误排查" class="headerlink" title="我遇到的错误排查"></a>我遇到的错误排查</h2><h3 id="M1-配置文件的名字"><a href="#M1-配置文件的名字" class="headerlink" title="M1:配置文件的名字"></a>M1:配置文件的名字</h3><ul><li>配置文件的名字叫<code>webpack.config.js</code>，我写成了<code>webpack-config.js</code>，中间那个是点，不是<code>-</code>，报如下的错误</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">WARNING in configuration</span><br><span class="line">The 'mode' option has not been set, webpack will fallback to 'production' for this value. Set 'mode' option to 'development' or 'production' to enable defaults for each environment.</span><br><span class="line">You can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/</span><br><span class="line"></span><br><span class="line">ERROR in ./src/index.css 1:9</span><br><span class="line">Module parse failed: Unexpected token (1:9)</span><br><span class="line">You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders</span><br><span class="line"><span class="meta">></span><span class="bash"> html,body{</span></span><br><span class="line">|       margin: 0;</span><br><span class="line">|       padding: 0;</span><br><span class="line"> @ ./src/index.js 2:0-20</span><br></pre></td></tr></tbody></table></figure></div><h3 id="use-中插件的顺序"><a href="#use-中插件的顺序" class="headerlink" title="use 中插件的顺序"></a>use 中插件的顺序</h3><ul><li>use 中插件的使用顺序是从下到上，从右往左</li><li>使用的顺序错误会报如下的错误<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ERROR in ./src/index.css</span><br><span class="line">Module build failed (from ../node_modules/_css-loader@3.5.3@css-loader/dist/cjs.js):</span><br><span class="line">CssSyntaxError</span><br><span class="line"></span><br><span class="line">(1:1) Unknown word</span><br><span class="line"></span><br><span class="line"><span class="meta">></span><span class="bash"> 1 | var api = require(<span class="string">"!../../node_modules/_style-loader@1.2.1@style-loader/dist/runtime/injectStylesIntoStyleTag.js"</span>);</span></span><br><span class="line">    | ^</span><br><span class="line">  2 |             var content = require("!!./index.css");</span><br><span class="line">  3 |</span><br><span class="line"></span><br><span class="line"> @ ./src/index.js 2:0-20</span><br></pre></td></tr></tbody></table></figure></div></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端25_后台】Node.js</title>
      <link href="p/c498e88b.html"/>
      <url>p/c498e88b.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="为什么要学Node-js"><a href="#为什么要学Node-js" class="headerlink" title="为什么要学Node.js"></a>为什么要学Node.js</h3><ul><li>废话，你学前端得知道这个，招聘信息里xx没写么（具有服务端开发经验，拥有基本的网站开发能力，服务端，前端，运维部署），愣着干嘛学啊？</li><li>帮助打开服务端。</li><li>更好配合服务端开发人员进行协同开发。</li></ul><h3 id="Node-js是什么"><a href="#Node-js是什么" class="headerlink" title="Node.js是什么"></a>Node.js是什么</h3><p><strong>Node.js® 是一个基于 <a href="https://v8.dev/" target="_blank" rel="noopener">Chrome V8 引擎</a> 的 JavaScript 运行时。</strong></p><ul><li><p>不是一门语言，不是库，不是框架</p></li><li><p>是一个JavaScript运行时的环境</p></li><li><p>可以做服务端的语言，假如后台服务器是个黑盒子，那么Node就是帮你打开这个黑盒子的工具。当然，不仅仅是Node可以，以下的也可以</p><ul><li>Java</li><li>PHP</li><li>Python</li><li>Ruby (GitHub网站)</li><li>.Net (C#)</li><li><strong>Node.js</strong> (采用JavaScript，作为一个前端，不需要为了学后台而去学习新的语言了)</li></ul></li><li><p>凡是能用JavaScript来实现的，最终都能用JavaScript来实现。</p></li><li><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a> 这个Node的中文网站</p></li></ul><table><thead><tr><th align="center">浏览器的JavaScript</th><th align="center">Node.js中的JavaScript</th></tr></thead><tbody><tr><td align="center">ECMAScript</td><td align="center">ECMAScript</td></tr><tr><td align="center">BOM</td><td align="center">-</td></tr><tr><td align="center">Dom</td><td align="center">-</td></tr><tr><td align="center">-</td><td align="center">提供服务器级别API</td></tr></tbody></table><ul><li>开源生产库<code>npm</code>，他是世界上最大的开源库生态系统，你可以用它来安装各种包。</li><li>构建在Chrome的V8引擎上<ul><li>我们写的代码就是字符串而已，然而浏览器引擎可以帮你去解析和执行，目前Chrome  V8是公认最快的引擎</li><li>Node.js 的作者把V8引擎移植出来，开发了独立的运行环境。</li></ul></li></ul><h3 id="Node-js能做什么"><a href="#Node-js能做什么" class="headerlink" title="Node.js能做什么"></a>Node.js能做什么</h3><ul><li>Web 服务器后台</li><li>游戏/结果服务器</li><li>命令行工具<ul><li>npm(node)</li><li>git(c语言)</li><li>Hexo(node)</li></ul></li></ul><h3 id="要学会的"><a href="#要学会的" class="headerlink" title="要学会的"></a>要学会的</h3><ul><li>B/S 编程模型<ul><li>Browser-Server</li><li>Node 只是我们学习BS 编程模型的工具</li></ul></li><li>模块化编程<ul><li>CSS <code>@import('文件路径')</code></li><li>在Node 中可以像<code>@import()</code>一样来引用加载 JavaScript</li></ul></li><li>Node的常用API</li><li>异步编程<ul><li>回调函数</li></ul></li><li>Express 开发框架</li><li>EcmaSctipt6 语法</li></ul><hr><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h3><ul><li>确认Node 环境是否安装成功<ul><li>打开命令行，输入<code>node -v</code>，如果有版本号显示，就说明成功了。</li></ul></li></ul><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><ol><li>创建并编写JavaScript脚本文件</li><li>打开终端，定位脚本文件所在目录</li><li>输入<code>node 文件名</code>，执行脚本（注意不要把文件名字起成node.js）</li></ol><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><ul><li>node package manager 是包管理工具</li></ul><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><ul><li><p>npm install 包名 [–save]</p></li><li><p>–save 会将安装的包记录到package.json的dependencies中</p></li><li><p>npm i 包名 -D    //-d是–save-dev缩写</p></li><li><p>将包安装记录到devDependencies中，执行 npm install 时，可以指定安装哪些包</p></li><li><p><strong>package.json</strong>用于记录项目中用了那些包，方便管理</p></li></ul><h3 id="语义化版本"><a href="#语义化版本" class="headerlink" title="语义化版本"></a>语义化版本</h3><ul><li><code>^version</code>：中版本</li></ul><p>​        ^1.0.1  ->  1.x.x</p><ul><li><code>~version</code>：小版本</li></ul><p>​        ~1.0.1 -> 1.0.x</p><ul><li>version：指定版本</li></ul><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><ul><li>npm网站（<a href="http://www.npmjs.com/）" target="_blank" rel="noopener">http://www.npmjs.com/）</a></li></ul><h3 id="npm常用命令"><a href="#npm常用命令" class="headerlink" title="npm常用命令"></a>npm常用命令</h3><ul><li><p><code>npm --version</code> npm版本号</p></li><li><p><code>npm install --global npm</code>升级npm</p></li><li><p><code>npm init</code>  构建项目</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package name：包的名字，默认为当前目录名称 （名字不能有大写）</span><br><span class="line">version：版本，默认从 1.0.0 开始</span><br><span class="line">description：自述文件的信息或空字符串 ""</span><br><span class="line">entry point: 入口文件                                                               </span><br><span class="line">test command: 可以为空，npm test 为测试模块的命令 </span><br><span class="line">git repository：git 仓库</span><br><span class="line">keywords：关键词</span><br><span class="line">author：作者</span><br><span class="line">license： 许可证 ISC</span><br></pre></td></tr></tbody></table></figure></div><ul><li><p><code>npm init -y</code> 跳过向导快速生成</p></li><li><p><code>npm install</code>根据 package.json 自动下载所需的包，也可以简写成<code>npm i</code></p></li><li><p><code>npm install 包名 --save</code></p></li></ul><p>​        <code>npm i -S</code></p><p>​        根据包名下载，并保存依赖在项目中的 <code>package.json</code>文件中</p><ul><li><code>npm uninstall 包名 --save</code></li></ul><p>​      <code>npm un -S</code></p><p>​       根据包名删除，并且删除依赖项</p><ul><li><p><code>npm help</code>查看帮助</p></li><li><p><code>npm 命令 --help</code> 查看命令帮助</p></li></ul><h3 id="npm镜像"><a href="#npm镜像" class="headerlink" title="npm镜像"></a>npm镜像</h3><ul><li><p>npm服务器在国外，网速慢,淘宝镜像：<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org</a></p></li><li><p>使用方式1：安装淘宝镜像 <code>npm install --global cnpm</code>，将npm替换成cnpm</p></li><li><p>使用方式2：npm install jquery –registry=<a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p></li><li><p>使用方式3：npm config set registry <a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org</a>，配置后每次npm都是从配置的路径下载</p></li></ul><h3 id="自定义工具包"><a href="#自定义工具包" class="headerlink" title="自定义工具包"></a>自定义工具包</h3><ul><li>你可以自己写一个工具，然后再你的项目中导入，你的工具不要放在<code>node-module</code>里，不然别人会以为你的是第三方包</li></ul><hr><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="核心模块"><a href="#核心模块" class="headerlink" title="核心模块"></a>核心模块</h3><p>Node为JavaScript提供了很多服务器级别的 API ，这些 API 绝大多数都被包装到了一个具名的核心模块中了。例如文件操作的<code>fs</code>核心模块，http 服务构建的 <code>http</code>模块，<code>path</code>路径操作模块，<code>os</code>操作系统模块等。</p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><ul><li><p>浏览器中的JavaScript 是没有文件操作的能力的，但是Node中的JavaScript具有文件操作的能力</p></li><li><p>fs是 Filesystem 的简写，就是文件系统的意思<br>在 Node 中如果想要进行文件操作，就必须引入 fs 这个核心模块<br>在 fs 这个核心模块中，就提供了所有的文件操作相关的 API</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 加载使用 require 方法加载 fs 核心模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 读取文件</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个参数：文件路径</span></span><br><span class="line"><span class="comment">第二个参数：回调函数(err,data)</span></span><br><span class="line"><span class="comment">如果成功读取文件：data=数据, err=null</span></span><br><span class="line"><span class="comment">   失败：data=null，err=错误对象</span></span><br><span class="line"><span class="comment">相对路径必须加./</span></span><br><span class="line"><span class="comment">如果想要返回上层目录用../</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">fs.readFile(<span class="string">'./a.txt'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, data</span>) </span>{</span><br><span class="line"><span class="built_in">console</span>.log(error)</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line"><span class="comment">//<buffer 61 68 69 6e 6f></buffer></span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 文件中存储的其实都是二进制数据 0 1</span></span><br><span class="line"><span class="comment">// 这里为什么看到的不是 0 和 1 呢？原因时二进制转为 16 进制</span></span><br><span class="line"><span class="comment">// 我们可以通过toString()转化</span></span><br><span class="line">    <span class="built_in">console</span>.log(data.toString())</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><ul><li><p><code>fs.writeFile('文件路径', '写入内容', '回调函数')</code></p></li><li><p>写文件的文件名中不能有特殊字符，比方说<code>?</code>,<code><</code>,’>’之类的。</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写文件</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line">fs.writeFile(<span class="string">'../data/nihao.md'</span>, <span class="string">'你好，我叫Node'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line"><span class="keyword">if</span>(error === <span class="literal">null</span>){</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'文件写入成功'</span>)</span><br><span class="line">}</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><h3 id="创建个简单的服务器"><a href="#创建个简单的服务器" class="headerlink" title="创建个简单的服务器"></a>创建个简单的服务器</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 非常轻松的构建一个 Web 服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 加载 http 核心模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 创建服务</span></span><br><span class="line"><span class="comment">// 返回一个 Server 实例</span></span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 服务器能干吗</span></span><br><span class="line"><span class="comment">//   提供服务：对数据的服务</span></span><br><span class="line"><span class="comment">// 注册 request 请求事件</span></span><br><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>{</span><br><span class="line"><span class="keyword">var</span> url = request.url</span><br><span class="line">response.write(url)</span><br><span class="line">response.end()</span><br><span class="line"><span class="comment">// console.log('收到客户端的请求了')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// response 对象有一个方法：write 可以用来给客户端发送相应程序</span></span><br><span class="line"><span class="comment">// write 可以使用多次，但是最后一定要使用 end 来结束响应</span></span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 凡是需要网路通信的都需要端口号</span></span><br><span class="line">server.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'服务器启动成功了!'</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="设置编码"><a href="#设置编码" class="headerlink" title="设置编码"></a>设置编码</h3><ul><li>我们需要告诉浏览器我是中文操作系统，你得给我翻译成中文，不然我看不懂啊</li><li><code>Content-Type</code> 告诉对方我给你发送的数据类型是什么类型</li><li><code>text/plain</code>   <a href="https://tool.oschina.net/commons" target="_blank" rel="noopener">https://tool.oschina.net/commons</a></li><li><a href="https://tool.oschina.net/" target="_blank" rel="noopener">https://tool.oschina.net/</a> 在这里可以对应查找一些有用的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">'request'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>{</span><br><span class="line"><span class="comment">// 服务器默认发送的数据，其实是 utf8 编码的内容</span></span><br><span class="line"><span class="comment">// 但是浏览器不知道你是 utf8 编码的内容</span></span><br><span class="line"><span class="comment">// 世界上所有的语言韩文日文等，都是 utf8</span></span><br><span class="line"><span class="comment">// 中文操作系统默认是 gbk</span></span><br><span class="line"><span class="comment">// 所以我们要告诉浏览器，我给你发送的内容是什么</span></span><br><span class="line">res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain; charset=utf-8'</span>)</span><br><span class="line">res.end(<span class="string">'hello 世界'</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="读取目录"><a href="#读取目录" class="headerlink" title="读取目录"></a>读取目录</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fs.readdir(<span class="string">'D:\\study\\前端\\Node重学'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, files</span>) </span>{</span><br><span class="line"><span class="keyword">if</span> (err) {</span><br><span class="line"><span class="keyword">return</span> <span class="string">'目录不存在'</span></span><br><span class="line">}</span><br><span class="line"><span class="built_in">console</span>.log(files)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><hr><h3 id="回调地域"><a href="#回调地域" class="headerlink" title="回调地域"></a>回调地域</h3><p>问题描述：<a href="https://img-blog.csdnimg.cn/20200608114511289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="代码" class="fancybox"><img alt="代码" title="代码" data-src="https://img-blog.csdnimg.cn/20200608114511289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a><br><a href="https://img-blog.csdnimg.cn/20200608114525284.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200608114525284.png" src="/img/loading.gif" class="lazyload"></a></p><p>解决的方案可以这样</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line">fs.readFile(<span class="string">'./text1.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=></span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString())</span><br><span class="line">fs.readFile(<span class="string">'./text2.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString());</span><br><span class="line">fs.readFile(<span class="string">'./text3.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString());</span><br><span class="line">})</span><br><span class="line">})</span><br><span class="line">},<span class="number">2000</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><p>但是这样一层层的嵌套，多了的话会出现如下情况，非常的不美观<a href="https://img-blog.csdnimg.cn/20200608114807806.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="回调地域" class="fancybox"><img alt="回调地域" title="回调地域" data-src="https://img-blog.csdnimg.cn/20200608114807806.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" src="/img/loading.gif" class="lazyload"></a></p><p>如何解决呢，用<code>promise</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="comment">// resolve 承诺成功，reject承诺失败</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =></span> {</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =></span> {</span><br><span class="line">fs.readFile(<span class="string">'./text1.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line">resolve(data)</span><br><span class="line">})</span><br><span class="line">}, <span class="number">1000</span>)</span><br><span class="line">}).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString())</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>{</span><br><span class="line">fs.readFile(<span class="string">'./text2.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line">resolve(data)</span><br><span class="line">})</span><br><span class="line">})</span><br><span class="line">}).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString());</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>{</span><br><span class="line">fs.readFile(<span class="string">'./text3.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>{</span><br><span class="line">resolve(data);</span><br><span class="line">})</span><br><span class="line">})</span><br><span class="line">}).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(data.toString());</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><h3 id="简单的模块化"><a href="#简单的模块化" class="headerlink" title="简单的模块化"></a>简单的模块化</h3><ul><li><code>require</code>这个方法专门用来引入模块</li></ul><p>我有三个文件<code>a.js</code> 、<code>b.js</code>、 <code>c.js</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require 是一个方法</span></span><br><span class="line"><span class="comment">// 他的作用就是用来加载模块</span></span><br><span class="line"><span class="comment">// 在Node 中，模块有三种：</span></span><br><span class="line"><span class="comment">// 1.核心 2.用户自己编写的 3.</span></span><br><span class="line"><span class="comment">// 相对路径必须加./</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'开始执行a'</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./b.js'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'结束执行a'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始执行a</span></span><br><span class="line"><span class="comment">// b.js文件被执行</span></span><br><span class="line"><span class="comment">// 结束执行a</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// b.js</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'b.js start'</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./c.js'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'b.js end'</span>)</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// c.js</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'ccccc'</span>)</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 开始执行a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> b.js start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ccccc</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> b.js end</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 结束执行a</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="模块作用域"><a href="#模块作用域" class="headerlink" title="模块作用域"></a>模块作用域</h3><ul><li>简单的说，外部访问不到内部，内部也访问不到外部，就在这个文件里面。</li><li>同名的变量名字，在不同的模块里，也不会相互污染</li></ul><h3 id="模块间的通信"><a href="#模块间的通信" class="headerlink" title="模块间的通信"></a>模块间的通信</h3><p>我现在又有两个<code>a.js</code>,<code>b.js</code>，分别是</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="built_in">require</span>(<span class="string">'./b.js'</span>)</span><br><span class="line"><span class="comment">// require 方法有两个最哦用</span></span><br><span class="line"><span class="comment">// 1.加载文件模块并执行里面的代码</span></span><br><span class="line"><span class="comment">// 2. 拿到被加载文件模块导出的接口对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在每一个文件模块中都提供一个对象：expore</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'app:'</span>, app)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'app:'</span>, app.foo)</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// b.js</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">'bbb'</span></span><br><span class="line">exports.foo = foo</span><br><span class="line"><span class="comment">// 导出的是一个对象，不论是变量还是方法，都需要a文件里点出来使用</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'exports:'</span>, exports)</span><br></pre></td></tr></tbody></table></figure></div><p>运行之后的结果是</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exports: {}</span><br><span class="line">app: {}</span><br><span class="line"><span class="meta">#</span><span class="bash"> 他俩是等价的</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果你想引用的话，就要在b中把想要暴露的变量挂载到<code>exports</code>上</p><hr><h2 id="Express-模块"><a href="#Express-模块" class="headerlink" title="Express 模块"></a>Express 模块</h2><ul><li>就是http原生的封装，为了便于开发</li></ul><h3 id="指定公开路径"><a href="#指定公开路径" class="headerlink" title="指定公开路径"></a>指定公开路径</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">'/public'</span>,express.static(<span class="string">'./public/'</span>));</span><br><span class="line">访问路径：http:<span class="comment">//localhost:8000/public/test.html</span></span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">'./public/'</span>));</span><br><span class="line">访问路径：http:<span class="comment">//localhost:8000/test.html</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></tbody></table></figure></div><ul><li>默认是在<code>views</code>这个文件夹名称下寻找页面</li><li>使用的方法如下</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="comment">//配置模板引擎 以.art结尾时使用模板引擎</span></span><br><span class="line">app.engine(<span class="string">'art'</span>, <span class="built_in">require</span>(<span class="string">'express-art-template'</span>));</span><br><span class="line">app.set(<span class="string">'view options'</span>, {</span><br><span class="line">    debug: process.env.NODE_ENV !== <span class="string">'production'</span> <span class="comment">// 配置生产模式</span></span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>{</span><br><span class="line"><span class="comment">//express为response提供了一个方法：render，此方法默认不可以使用，配置了模板引擎才可以使用</span></span><br><span class="line"><span class="comment">//res.render('模板名',{模板数据})</span></span><br><span class="line"><span class="comment">//第一个参数， 默认去项目的views目录中查找，如果想修改默认路径：app.set("views",'路径')</span></span><br><span class="line">    res.render(<span class="string">'index.art'</span>, {</span><br><span class="line">        user: {</span><br><span class="line">            name: <span class="string">'aui'</span>,</span><br><span class="line">            tags: [<span class="string">'art'</span>, <span class="string">'template'</span>, <span class="string">'nodejs'</span>]</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></div><h3 id="热启动"><a href="#热启动" class="headerlink" title="热启动"></a>热启动</h3><ul><li><p>改代码的时候就不需要在启动一次服务器了</p></li><li><p>安装</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --global nodemon</span><br></pre></td></tr></tbody></table></figure></div><p>​    使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon  app.js</span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h2><ul><li>所有联网的程序都需要进行网络通信</li><li>计算机中只有一个物理网卡，同一个局域网中，网卡的地址必须唯一的。网卡是通过唯一的IP地址来进行定位的。</li><li>每一个联网的应用对应一个端口号</li><li>IP地址用来定位计算机，端口号用来定位具体的联网应用程序</li><li>获取访问我的另一条电脑的IP地址和端口号<code>req.socket.remoteAddress</code>，<code>req.socket.remotePort</code></li><li>端口号的范围从 0~65536 之间</li><li>网站上线部署的时候默认是80端口，所以80的话尽量不要用</li></ul><hr><h2 id="跨域以及同源策略"><a href="#跨域以及同源策略" class="headerlink" title="跨域以及同源策略"></a>跨域以及同源策略</h2><ul><li>只有当协议(http,https)，域名，和端口号三者都一直的时候，才是同源</li><li>同源安全是浏览器行为，请求到后台的话后台也会处理，但是返回到前台浏览器不允许展示</li><li>如何解决跨域：第一种方法是后台设置响应头<code>res.header('Access-Control-Allow-Origin', '*')</code> ，其中的<code>*</code>可以写成同意跨域的IP地址，第二种方法是前台设置JsonP。</li></ul><hr><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>GFM Markdown的语法标准</li><li>代码风格<ul><li>JavaScript Standard Style</li><li>爱彼迎</li></ul></li></ul><ul><li><p>代码风格</p><ul><li>当你采用了无分号的代码风格的时候，只需要注意一下情况就不会有上面的问题</li></ul></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">say()</span><br><span class="line"><span class="comment">//当一行代码是以( [ ` 开头的时候，则在前面补上一个分号用以鼊一些语法解析错误</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello'</span>)</span><br><span class="line">})()</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端24_JS加强】封装、内存、this指针</title>
      <link href="p/dcbe227.html"/>
      <url>p/dcbe227.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><hr><h1 id="Javascript-进阶"><a href="#Javascript-进阶" class="headerlink" title="Javascript 进阶"></a>Javascript 进阶</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><h3 id="提出问题"><a href="#提出问题" class="headerlink" title="提出问题"></a>提出问题</h3><blockquote><p>问题描述：假如我是一个推销产品的应用开发经理，有很多的用户在我的平台上订阅些内容，我如何通过用户订阅的信息，准确的发送产品给需要它的客户们呢？</p></blockquote><h3 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h3><ul><li>首先我是卖家，我需要提供一个添加订阅信息和对应的用户功能函数</li><li>当我发布一个产品的时候，我需要精准的发送给需要它的用户<h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我们先创建一个卖家</span></span><br><span class="line"><span class="keyword">var</span> seller = {};</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个列表list，用于存储订阅者</span></span><br><span class="line">seller.list = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个方法listen，用于添加订阅者</span></span><br><span class="line">seller.listen = <span class="function">(<span class="params">fn</span>) =></span> seller.list.push(fn);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个方法trigger：用于发布消息</span></span><br><span class="line">seller.trigger = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="comment">// 循环停止条件：如果循环复制的值为none/undefined的时候</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, fn; fn = <span class="keyword">this</span>.list[i]; i++) {</span><br><span class="line"><span class="comment">// this 指向seller，让每一个订阅者都继承发布产品的参数</span></span><br><span class="line">fn.call(<span class="keyword">this</span>,...arguments)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加订阅者A</span></span><br><span class="line">seller.listen(<span class="function"><span class="keyword">function</span>(<span class="params">color, size</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'我是A订阅者'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"您订阅的卖家发布新的鞋："</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"颜色是："</span>, color);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"尺寸是："</span>, size);</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加订阅者B</span></span><br><span class="line">seller.listen(<span class="function"><span class="keyword">function</span>(<span class="params">color, size</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'我是B订阅者'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"您订阅的卖家发布新的鞋："</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"颜色是："</span>, color);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"尺寸是："</span>, size);</span><br><span class="line"></span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 卖家发布一双新鞋，通知给订阅者</span></span><br><span class="line">seller.trigger(<span class="string">'红色'</span>, <span class="number">42</span>)</span><br></pre></td></tr></tbody></table></figure></div></li></ul><p>这样一个简单的发布过程就做好了，然而这并不是定制，因为每次发布一个产品，都要通知所有的订阅者，我们的目的是通过订阅者订阅的关键字，来精准的发布产品给有需要的客户，这次我们用<strong>对象</strong>来写</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装</span></span><br><span class="line"><span class="keyword">var</span> method1 = {</span><br><span class="line"><span class="comment">// 列表属性，保存用户及订阅信息</span></span><br><span class="line"><span class="comment">// list: ['手机': ['订阅者A','订阅者B'], '电脑': ['订阅者','订阅者']]</span></span><br><span class="line">list: [],</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加用户及其订阅信息</span></span><br><span class="line">listen(key, user){</span><br><span class="line"><span class="comment">// 如果当前list中没有此订阅信息，就初始化一个空的</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>.list[key]){</span><br><span class="line"><span class="keyword">this</span>.list[key] = []</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 然后把这个用户给添加进来</span></span><br><span class="line"><span class="keyword">this</span>.list[key].push(user)</span><br><span class="line">},</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布商品：发布商品的时候需要通过订阅关键字来精准的推广给相应用户</span></span><br><span class="line">trigger(){</span><br><span class="line"><span class="comment">// 获取到用户订阅的关键字</span></span><br><span class="line"><span class="keyword">let</span> key = <span class="built_in">Array</span>.prototype.shift.call(<span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过订阅关键字来获得相应订阅用户列表</span></span><br><span class="line"><span class="keyword">let</span> user = <span class="keyword">this</span>.list[key];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果没有此关键字的订阅，或者订阅此关键字的人数为空，则不需要通知</span></span><br><span class="line"><span class="keyword">if</span>(!user || user.length === <span class="number">0</span>){</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布给订阅用户列表中的用户</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>, each;each = user[i++];){</span><br><span class="line">each.call(<span class="keyword">this</span>,...arguments);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口：给转进来的对象加入method1方法</span></span><br><span class="line"><span class="keyword">var</span> init = <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> method1){</span><br><span class="line">obj[key] = method1[key];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个卖家，并初始化方法</span></span><br><span class="line"><span class="keyword">var</span> seller = {};</span><br><span class="line">init(seller);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加订阅人A</span></span><br><span class="line">seller.listen(<span class="string">'显卡'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'我是订阅者A，订阅：显卡，价格为：'</span>,msg);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'\n'</span>);</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加订阅人B</span></span><br><span class="line">seller.listen(<span class="string">'电脑'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'我是订阅者B，订阅：电脑，价格为：'</span>,msg);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'\n'</span>);</span><br><span class="line">})</span><br><span class="line"><span class="comment">// 添加订阅人C</span></span><br><span class="line">seller.listen(<span class="string">'手机'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'我是订阅者C，订阅：手机，价格为：'</span>,msg);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'\n'</span>);</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 卖家发布信息并通知相关订阅人</span></span><br><span class="line">seller.trigger(<span class="string">'显卡'</span>, <span class="number">2499</span>);</span><br><span class="line">seller.trigger(<span class="string">'棒槌'</span>, <span class="number">2499</span>);</span><br><span class="line">seller.trigger(<span class="string">'手机'</span>, <span class="number">999</span>);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="总结问题"><a href="#总结问题" class="headerlink" title="总结问题"></a>总结问题</h3><ul><li>通过上面的案例，稍微体验了一下封装是什么样的感觉，类似大的插件也是这样的思想，封装对于大厂用途比较多。</li><li>尽量的体会过程！！！</li></ul><hr><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>js中，内存是自动分配的，当变量不再需要的时候自动释放，过程如下：</p><ol><li><strong>分配</strong>需要的内存空间</li><li><strong>使用</strong>分配的内存（读写）</li><li>不需要时<strong>释放</strong>或者归还 gc（垃圾回收机制）<h3 id="内存泄露"><a href="#内存泄露" class="headerlink" title="内存泄露"></a>内存泄露</h3>不再需要此内存，然而由于某种原因，无法释放此内存。</li><li>全局变量带来的</li><li>回调函数<pre><code>function a(){    return 2;}var b = a()</code></pre></li><li>额外的定时器</li><li>dom引用（removeChild后，还能获得节点的信息）<h3 id="垃圾回收机制-GC"><a href="#垃圾回收机制-GC" class="headerlink" title="垃圾回收机制 GC"></a>垃圾回收机制 GC</h3>垃圾回收的方法分两种，</li><li>引用计数：统计被引用的次数，次数为0，被回收。</li><li>标记清除</li></ol><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li>栈：用来存放<strong>基本数据类型</strong>，还有指向复杂数据类型的<strong>引用指针</strong></li><li>堆：用来存放<strong>复杂数据类型</strong>，这种数据结构是一种无序的树状，通过<code>key</code>来保存指针，类似字典。</li><li>队列：先进先出，典型的例子是 JS中的事件循环（<code>eventsloop</code>）</li><li>池<h2 id="this"><a href="#this" class="headerlink" title="this**"></a>this**</h2><h3 id="默认"><a href="#默认" class="headerlink" title="默认"></a>默认</h3></li><li>绑定的this是在Windows上的</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// window.a();</span></span><br><span class="line">a();</span><br></pre></td></tr></tbody></table></figure></div><h3 id="函数的严格模式"><a href="#函数的严格模式" class="headerlink" title="函数的严格模式"></a>函数的严格模式</h3><ul><li>严格模式下，this指向<code>undefined</code>，<a href="http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html" target="_blank" rel="noopener">大神的严格模式介绍。</a></li></ul><h3 id="隐式绑定"><a href="#隐式绑定" class="headerlink" title="隐式绑定"></a>隐式绑定</h3><h3 id="显式绑定"><a href="#显式绑定" class="headerlink" title="显式绑定"></a>显式绑定</h3><ul><li>call</li><li>apply</li><li>bind</li></ul><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数中的this指向，跟外层作用域的this有关</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端23_Vue】生命周期、常见API的使用，v-key的特点、组件及通信、路由</title>
      <link href="p/aca19dee.html"/>
      <url>p/aca19dee.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><p>因为之前曾接触过小程序的开发，所以 <strong>入手</strong> Vue 相对爽了一些，因为思想都是数据绑定，Vue是华人尤雨溪开发的，这可是个大佬，B站上有个关于大佬的纪律片，是 <strong>Up主：鱼C-小甲鱼</strong> 翻译的，有兴趣的话可以看看。</p><p><a href="https://www.bilibili.com/video/BV1dT4y1V7Dn" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1dT4y1V7Dn</a></p><hr><h2 id="M-V-VM"><a href="#M-V-VM" class="headerlink" title="M V VM"></a>M V VM</h2><ul><li>他是一种架构方式、开发思想</li></ul><ul><li>M：Model 数据模型  （操作数据的类）</li><li>V：View 视图界面  (HTML)</li><li>VM：ViewModel 视图模型</li></ul><hr><h2 id="Vue-的思想"><a href="#Vue-的思想" class="headerlink" title="Vue 的思想"></a>Vue 的思想</h2><p>Vue是比较重要的是用数据来驱动页面，下面是一个简单的用Vue实现的页面</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><div id="<span" class="string">"app">{{message}}<<span class="regexp">/div></span><br><span class="line"><span class="regexp"><!--</span-->body></span><br><span class="line"><script src="<span" class="string">"js/vue.js"</span>><span class="xml"><span class="tag"></<span class="name">script</span>></span></span></span><br><span class="line"><script></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">data:{</span><br><span class="line">message:<span class="string">"hello world"</span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="生命周期函数"><a href="#生命周期函数" class="headerlink" title="生命周期函数"></a>生命周期函数</h2><p>需要记得有</p><ul><li>beforeCreate</li><li>create</li><li>beforeMount</li><li>mounted</li><li>beforeUpdata</li><li>updated</li><li>beforeDestroy</li><li>destroyed</li></ul><p>其实有规律可循，创造-挂载-更新-销毁<br><img src="https://img-blog.csdnimg.cn/20200518105014239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h2 id="Vue实例中的选项"><a href="#Vue实例中的选项" class="headerlink" title="Vue实例中的选项"></a>Vue实例中的选项</h2><h3 id="el"><a href="#el" class="headerlink" title="el"></a>el</h3><ul><li>获取元素，你可以用<code>#id</code>、<code>.类名</code>，类似JQuery的选择器等等，也可以用<code>document.querySelectAll()</code>之类的<h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3></li><li>实例中的数据都放在这里<h3 id="computed-计算属性"><a href="#computed-计算属性" class="headerlink" title="computed 计算属性"></a>computed 计算属性</h3></li><li>计算属性的结果是放在<strong>缓存</strong>里的</li></ul><hr><h2 id="常见API的使用"><a href="#常见API的使用" class="headerlink" title="常见API的使用"></a>常见API的使用</h2><h3 id="v-if-条件"><a href="#v-if-条件" class="headerlink" title="v-if 条件"></a>v-if 条件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="comment"><!-- 条件语句必须if/else紧跟着 --></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line">{{message}}</span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"message == 'hello world'"</span>></span>if<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">"message == 'hello world1'"</span>></span>else-if<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-else</span>></span>else<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">message:<span class="string">"hello world"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><ul><li><code>v-show</code>不能搭配<code>template</code> ，即使条件不对也会显示到页面上<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">template</span> <span class="attr">v-show</span>=<span class="string">"1 == 2"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h1</span>></span>我是个标题<span class="tag"></<span class="name">h1</span>></span></span><br><span class="line"><span class="tag"></<span class="name">template</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li>如果<code>v-show</code>里面的条件不对的话，页面渲染的时候会使用<code>display:none</code>把他隐藏掉<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">"1 == 2"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">h1</span>></span>我是个标题<span class="tag"></<span class="name">h1</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="v-for-循环"><a href="#v-for-循环" class="headerlink" title="v-for 循环"></a>v-for 循环</h3></li><li>比方说我要循环一个名字叫<code>li</code>的数组</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"> <span class="comment"><!-- 这里也可以写成 (each,index) of li，借用了ES6的语法--></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(each,index) in li"</span>></span></span><br><span class="line">each:{{each}}-----index:{{index}}</span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">li:[<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'four'</span>,<span class="string">'five'</span>]</span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p><img src="https://img-blog.csdnimg.cn/20200521165706705.png" alt="在这里插入图片描述"></p><hr><h3 id="v-key"><a href="#v-key" class="headerlink" title="v-key**"></a>v-key**</h3><p><a href="https://blog.csdn.net/shicl/article/details/81392385" target="_blank" rel="noopener">参考博文1</a><br><a href="https://blog.csdn.net/xukongjing1/article/details/81587549?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">参考博文2</a></p><ul><li>虚拟DOM的Diff算法，其核心是基于两个简单的假设：1. 两个相同的组件产生类似的DOM结构，不同的组件产生不同的DOM结构。2. 同一层级的一组节点，他们可以通过唯一的id进行区分。</li><li>总结一句话：为了更好的让Vue更新虚拟Dom，key来给每个节点做一个唯一标识。</li><li>影响：如果不加上标识的话，在插入的时候会发生错误<br><img src="https://img-blog.csdnimg.cn/2020061915185852.gif" alt="在这里插入图片描述"></li></ul><p><img src="https://img-blog.csdnimg.cn/20200619151901834.gif" alt="在这里插入图片描述"></p><h3 id="v-cloak-取消抖动"><a href="#v-cloak-取消抖动" class="headerlink" title="v-cloak 取消抖动"></a>v-cloak 取消抖动</h3><p>用Vue渲染页面的时候，你刷新页面，会有页面没有加载数据就渲染出来的情况，一闪而过（尝试截取动图但是截不到），但是为了美，这种缺点怎么可能忍呢！！！</p><p>只需两步轻松解决</p><ul><li>在标签里写上 <code>v-cloak</code></li><li>在样式里写`[v-cloak]{<pre><code>    display: none;}`</code></pre></li></ul><p>举个小例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line"><span class="css"><span class="selector-attr">[v-cloak]</span>{</span></span><br><span class="line">display: none;</span><br><span class="line">}</span><br><span class="line"><span class="tag"></<span class="name">style</span>></span></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> <span class="attr">v-cloak</span>></span><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><p>首次渲染之后，页面不再随着数据的变化而变化</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-once</span>></span></span><br><span class="line"><span class="comment"><!--可以在控制台上改变数值 app.message = 'nihao' --></span></span><br><span class="line">{{message}}</span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">message:<span class="string">"hello world"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="v-bind-绑定属性"><a href="#v-bind-绑定属性" class="headerlink" title="v-bind 绑定属性 **"></a>v-bind 绑定属性 **</h3><p>v-bind可以简略写成<code>:</code>，v-bind:后面接标签的属性，用来绑定标签的属性。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="comment"><!-- 下面两个div的绑定类是一样的，都是name1 --></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">"className"</span>></span> v-bind:class="className"<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"className"</span>></span>:class<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">className:<span class="string">"name1"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p><img src="https://img-blog.csdnimg.cn/2020051314020343.png" alt="在这里插入图片描述"></p><hr><h3 id="v-on-绑定事件"><a href="#v-on-绑定事件" class="headerlink" title="v-on 绑定事件"></a>v-on 绑定事件</h3><ul><li><code>v-on</code> 也可以写成 <code>@</code></li><li>可以传递参数，如果向添加事件因子，可以<code>@click="函数名($event)</code>这样传递</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><!-- 下面两个div都绑定了click点击事件,效果一样 --></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">v-on:click</span>=<span class="string">""</span>></span><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> @<span class="attr">click</span>=<span class="string">""</span>></span><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"><<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hand2(10,$event)"</span>></span>btn2---$event<span class="tag"></<span class="name">button</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><p><code>.</code>这个点就是修饰符，能修饰什么呢？下面就是例子</p><h4 id="冒泡与捕获"><a href="#冒泡与捕获" class="headerlink" title="冒泡与捕获"></a>冒泡与捕获</h4><ul><li>阻止冒泡：<code>.stop</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"fa"</span>></span>fa</span><br><span class="line"><span class="tag"><<span class="name">div</span> @<span class="attr">click.stop</span>=<span class="string">"son"</span>></span>son<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="comment"><!-- 这样，点击son，就不会出发fa的点击事件了 --></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>捕获：<code>.capture</code><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> @<span class="attr">click.capture</span>=<span class="string">"fa"</span>></span>fa</span><br><span class="line"><span class="tag"><<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"son"</span>></span>son<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="comment"><!-- 这样，点击son，就会先触发fa，然后son --></span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><h4 id="按键触发事件"><a href="#按键触发事件" class="headerlink" title="按键触发事件"></a>按键触发事件</h4><ul><li>37是键盘上的左方向键</li><li>如果向要组合按键，触发连招的话，可以连着修饰符写，如下<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keydown.37</span>=<span class="string">"key1Handler"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keydown.space</span>=<span class="string">"key1Handler1"</span> <span class="attr">placeholder</span>=<span class="string">"space"</span>></span></span><br><span class="line"><span class="comment"><!-- 组合按键 --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keydown.shift.83</span>=<span class="string">"key1Handler2"</span> <span class="attr">placeholder</span>=<span class="string">"shift+S"</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li></ul><hr><h3 id="v-html-编译-amp-v-pre-跳过"><a href="#v-html-编译-amp-v-pre-跳过" class="headerlink" title="v-html 编译 & v-pre 跳过"></a>v-html 编译 & v-pre 跳过</h3><p>注意 <code>v-html</code> 的一些细节</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"tar"</span>></span>span1<span class="tag"></<span class="name">span</span>></span></span><br><span class="line"><span class="tag"><<span class="name">span</span> <span class="attr">v-pre</span>=<span class="string">"tar1"</span>></span>span2<span class="tag"></<span class="name">span</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// v-html 转化成html</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 注意转化后的页面格式，是插入此标签内了，标签内原有的内容将被覆盖</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// v-pre 跳过这个元素和它的子元素的编译过程。</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">'#app'</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="handlebars"><span class="xml">tar:"<span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>></span>11<span class="tag"></<span class="name">a</span>></span>",</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">tar1:"<span class="tag"><<span class="name">a</span> <span class="attr">href</span>=<span class="string">'#'</span>></span>11<span class="tag"></<span class="name">a</span>></span>"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><p>图片展示<img src="https://img-blog.csdnimg.cn/20200514101241243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h3 id="v-model-绑定输入"><a href="#v-model-绑定输入" class="headerlink" title="v-model 绑定输入"></a>v-model 绑定输入</h3><ul><li><code>v-model</code>可以绑定<code>input</code> 和 <code>textarea</code>的文本<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> <span class="attr">v-cloak</span>></span> </span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>></span></span><br><span class="line">{{message}}</span><br><span class="line"><span class="tag"><<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">""</span> <span class="attr">v-model</span>=<span class="string">"message"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">textarea</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">message:<span class="string">"hello world"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li>input失焦时在改变data，把输入框中的值变为number、去掉输入框中值的首尾空格</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="comment"><!-- .lazy 是change事件，当失去焦点的时候会改变 --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.lazy</span>=<span class="string">"mes"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><!-- .number 把输入数据变成类型为number --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.number</span>=<span class="string">"mes"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><!-- .trim 去首和尾空格 --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.trim</span>=<span class="string">"mes"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">h1</span>></span>{{mes}}<span class="tag"></<span class="name">h1</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">mes:<span class="string">"hello world"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="单选框、复选框、下拉框"><a href="#单选框、复选框、下拉框" class="headerlink" title="单选框、复选框、下拉框"></a>单选框、复选框、下拉框</h2><ul><li>都是通过<code>v-model</code>来分组，相当于校服，不同学校相当于不同的组。校服一样说明是一个学校的</li><li>单选框<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="comment"><!-- 单选：多个互斥 --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">v-model</span>=<span class="string">"pick"</span> <span class="attr">value</span>=<span class="string">"male"</span>></span><span class="tag"><<span class="name">label</span>></span>男<span class="tag"></<span class="name">label</span>></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">v-model</span>=<span class="string">"pick"</span> <span class="attr">value</span>=<span class="string">"female"</span>></span><span class="tag"><<span class="name">label</span>></span>女<span class="tag"></<span class="name">label</span>></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">v-model</span>=<span class="string">"pick"</span> <span class="attr">value</span>=<span class="string">"???"</span>></span><span class="tag"><<span class="name">label</span>></span>男女男<span class="tag"></<span class="name">label</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 单选框</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 页面上选择哪一项，pick的值就是哪一个value值</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">pick:<span class="string">"male"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div></li><li>多选框</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="comment"><!-- 复选框多选 --></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"check"</span> <span class="attr">value</span>=<span class="string">"checkBox1"</span>></span><span class="tag"><<span class="name">label</span>></span>复选框1<span class="tag"></<span class="name">label</span>></span></span><br><span class="line"><span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"check"</span> <span class="attr">value</span>=<span class="string">"checkBox2"</span>></span><span class="tag"><<span class="name">label</span>></span>复选框2<span class="tag"></<span class="name">label</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript"><span class="comment">// check里存储谁被选中了</span></span></span><br><span class="line">check:[]</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>下拉框</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="comment"><!-- select如果想添加多个属性，加multiple --></span></span><br><span class="line"><span class="tag"><<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"select"</span>></span></span><br><span class="line"><span class="comment"><!-- 默认是个option中的文本进行匹配</span></span><br><span class="line"><span class="comment"> 如果用了value的话优先value</span></span><br><span class="line"><span class="comment"> --></span></span><br><span class="line"><span class="tag"><<span class="name">option</span>></span>1<span class="tag"></<span class="name">option</span>></span></span><br><span class="line"><span class="tag"><<span class="name">option</span>></span>2<span class="tag"></<span class="name">option</span>></span></span><br><span class="line"><span class="tag"><<span class="name">option</span> <span class="attr">value</span>=<span class="string">'你好'</span>></span>3<span class="tag"></<span class="name">option</span>></span></span><br><span class="line"><span class="tag"></<span class="name">select</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">select:<span class="string">"你好"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><hr><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="组件命名要求"><a href="#组件命名要求" class="headerlink" title="组件命名要求"></a>组件命名要求</h3><ul><li><p><strong>短横线分隔命名</strong></p></li><li><p><strong>首字母大写命名</strong></p><h3 id="全局-局部组件定义"><a href="#全局-局部组件定义" class="headerlink" title="全局/局部组件定义"></a>全局/局部组件定义</h3><p>顾名思义，组件的使用范围不一样</p></li><li><p>需要注意的是，全局组件要在实例化对象之前就要注册，说人话，就是<br><img src="https://img-blog.csdnimg.cn/20200521154507188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>为什么要先注册在实例化呢？反过来行不行呢？我反过来会报如下的错误</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Vue warn]: Unknown custom element: <span class="xml"><span class="tag"><<span class="name">card</span>></span> -</span></span><br><span class="line"><span class="xml"> did you register the component correctly? </span></span><br><span class="line"><span class="xml"> For recursive components, make sure to provide the "name" option.</span></span><br></pre></td></tr></tbody></table></figure></div><p>报错信息提示说：<strong>不知道的元素<code>card</code>，是否正确注册组件？</strong>，看一下生命周期那张流程图：创建完Vue实例之后就已经渲染完<code>template</code>了，这时候在注册带有<code>template</code>的组件的话，Vue是不认识的</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line">{{message}}</span><br><span class="line"><span class="tag"><<span class="name">else-name</span>></span><span class="tag"></<span class="name">else-name</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 全局组件:</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// else-name 是我自定义的标签名称</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 命名规范：不能用驼峰命名，推荐都用小写 </span></span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'else-name'</span>,{</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:'<span class="tag"><<span class="name">div</span>></span>这是组件中<span class="tag"></<span class="name">div</span>></span>'</span></span></span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><p>局部的组件，这里写了两种写法</p><ul><li>直接把模板放到组件里</li><li>把模板放到外边：方便修改</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 局部：只在当前vue中有效</span></span><br><span class="line"><span class="keyword">var</span> child = {</span><br><span class="line">template:<span class="string">'<div>这是组件局部，内部中2</div>'</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">data:{</span><br><span class="line">message:<span class="string">'hello world'</span></span><br><span class="line">},</span><br><span class="line">components:{</span><br><span class="line"><span class="string">'demo1'</span>:{</span><br><span class="line">template:<span class="string">'<div>这是组件局部，内部中1</div>'</span></span><br><span class="line">},</span><br><span class="line"><span class="string">'demo2'</span>:child</span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="组件中的模板"><a href="#组件中的模板" class="headerlink" title="组件中的模板"></a>组件中的模板</h3><ul><li>模板里只能由只能有一个根元素，不能有两个以上的根元素</li></ul><p>意思是说可以这样：<code><div>                <div></div>            </div></code> 不可以<code><div></div>            <div></div></code>，<br>            前者两个<code>div</code>是父子关系，后者两个<code>div</code>是同级的哥们关系</p><h3 id="组件中的变量"><a href="#组件中的变量" class="headerlink" title="组件中的变量"></a>组件中的变量</h3><p>组件中的变量可以这样定义和使用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'else-name'</span>,{</span><br><span class="line">template:<span class="string">'<div>这是组件全局-外部中{{mess1}} {{mess2}}</div>'</span>,</span><br><span class="line">data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="keyword">return</span> {</span><br><span class="line">mess1:<span class="string">'<<这是组件中的data1>>'</span>,</span><br><span class="line">mess2:<span class="string">'<<这是组件中的data2>>'</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="组件的通信"><a href="#组件的通信" class="headerlink" title="组件的通信"></a>组件的通信</h3><ul><li><p>先来个简单的，Vue的实例对象和组件的通信<br><img src="https://img-blog.csdnimg.cn/20200521162157786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>假如我设Vue实例是爸爸，实例中的组件是儿子，儿子里又有个组件叫孙子，那么，爸爸和孙子之间怎么交流？</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">son</span> <span class="attr">:msgson</span>=<span class="string">msgfa</span>></span><span class="tag"></<span class="name">son</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// props单项传递，父向子传</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: {</span><br><span class="line"><span class="actionscript">msgfa: <span class="string">'我是你爸爸'</span></span></span><br><span class="line">},</span><br><span class="line">components:{</span><br><span class="line"><span class="actionscript"><span class="string">'son'</span>: {</span></span><br><span class="line"><span class="actionscript">props:[<span class="string">"msgson"</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:`<span class="tag"><<span class="name">div</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">介绍:</span><span class="template-variable">{{msgson}}</span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"><<span class="name">grandson</span> <span class="attr">:msggrandson</span>=<span class="string">'sonData'</span>></span><span class="tag"></<span class="name">grandson</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag"></<span class="name">div</span>></span>`,</span></span></span><br><span class="line">components:{</span><br><span class="line"><span class="actionscript"><span class="string">'grandson'</span>:{</span></span><br><span class="line"><span class="actionscript">props:[<span class="string">'msggrandson'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:`<span class="tag"><<span class="name">div</span>></span></span><span class="template-variable">{{msggrandson}}</span><span class="xml"><span class="tag"></<span class="name">div</span>></span>`</span></span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line"><span class="actionscript">data:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">sonData:<span class="string">'儿子'</span></span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>儿子如何向爸爸传递信息呢，也就是子向父传递，这时候用到了自定义函数</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">show</span> @<span class="attr">myevent</span>=<span class="string">"showVal"</span>></span><span class="tag"></<span class="name">show</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 子向父亲 $emit()触发事件，只是为了传值 v-on</span></span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'show'</span>, {</span></span><br><span class="line"><span class="actionscript">data: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">str: <span class="string">'我是组件中的string'</span></span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">methods: {</span><br><span class="line"><span class="actionscript">sendMsgToFa: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 这里的this指向组件</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 自定义事件</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.$emit(<span class="string">'myevent'</span>,<span class="keyword">this</span>.str);</span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line"><span class="handlebars"><span class="xml">template: `<span class="tag"><<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"sendMsgToFa"</span>></span>点击弹出组件传递的数据<span class="tag"></<span class="name">button</span>></span>`</span></span></span><br><span class="line">})</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">message:<span class="string">"hello world"</span></span></span><br><span class="line">},</span><br><span class="line">methods:{</span><br><span class="line"><span class="actionscript">showVal: <span class="function"><span class="keyword">function</span><span class="params">(a)</span></span>{</span></span><br><span class="line">alert(a)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>如果我的孙子向给儿子传递信息呢？（就是<strong>组件中的组件</strong> 向 <strong>组件</strong> 传递信息）</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line">我有三个阶级关系，分别是父亲--儿子--孙子</span><br><span class="line"><span class="tag"><<span class="name">son</span> <span class="attr">:msgson</span>=<span class="string">msgfa</span>></span><span class="tag"></<span class="name">son</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// props单项传递，父向子传</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el: <span class="string">'#app'</span>,</span></span><br><span class="line">data: {</span><br><span class="line"><span class="actionscript">msgfa: <span class="string">'我是你爸爸'</span></span></span><br><span class="line">},</span><br><span class="line">components:{</span><br><span class="line"><span class="actionscript"><span class="string">'son'</span>: {</span></span><br><span class="line"><span class="actionscript">props:[<span class="string">"msgson"</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:`<span class="tag"><<span class="name">div</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">介绍:</span><span class="template-variable">{{msgson}}</span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"><<span class="name">grandson</span> <span class="attr">:msggrandson</span>=<span class="string">'sonData'</span> @<span class="attr">myevent</span>=<span class="string">'showVal'</span>></span><span class="tag"></<span class="name">grandson</span>></span></span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag"></<span class="name">div</span>></span>`,</span></span></span><br><span class="line">components:{</span><br><span class="line"><span class="actionscript"><span class="string">'grandson'</span>:{</span></span><br><span class="line"><span class="actionscript">props:[<span class="string">'msggrandson'</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:`<span class="tag"><<span class="name">div</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"></span><span class="template-variable">{{msggrandson}}</span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"><<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"sendMsgToFa"</span>></span>孙子给儿子传值<span class="tag"></<span class="name">button</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="tag"></<span class="name">div</span>></span>`,</span></span></span><br><span class="line">methods:{</span><br><span class="line"><span class="actionscript">sendMsgToFa: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 传值不是自发的，而是事件驱动的，所以需要个绑定事件</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 自定义事件确定了，父亲的接收函数名，和想要传递给父亲的数据，</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.$emit(<span class="string">'myevent'</span>,<span class="string">'我是孙子里面的消息'</span>)</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line"><span class="actionscript">data:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">sonData:<span class="string">'儿子'</span></span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">methods:{</span><br><span class="line"><span class="actionscript">showVal: <span class="function"><span class="keyword">function</span><span class="params">(val)</span></span>{</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(val);</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="中央事件总线bus：数据的中介"><a href="#中央事件总线bus：数据的中介" class="headerlink" title="中央事件总线bus：数据的中介"></a>中央事件总线bus：数据的中介</h4><blockquote><p>如果我现在还是有三层关系，分别是父亲，儿子，和孙子，父亲是Vue实例，儿子是实例中的组件，孙子是组件中的组件<br>如果这三个人，两两之间可以互相通信，那么就不向上面那样麻烦了，如何做到呢？</p></blockquote><p>我们需要借助一个中介：中央事件总线<br><img src="https://img-blog.csdnimg.cn/20200527090852759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="父链-子链"><a href="#父链-子链" class="headerlink" title="父链/子链"></a>父链/子链</h4><ul><li>子组件可以通过父链拿到父组件的所有，也可以修改父组件的数据</li><li>取父组件中的数据可以，但是如果是<strong>修改的话</strong>，那么父子组件的<strong>关系就会更紧</strong>，这是<strong>解耦合</strong>的操作，不太推荐（组件之间的关系应该尽量独立，不要太过亲昵）<img src="https://img-blog.csdnimg.cn/20200527091426886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h4 id="给组件起名字，并通过名字获得组件"><a href="#给组件起名字，并通过名字获得组件" class="headerlink" title="给组件起名字，并通过名字获得组件"></a>给组件起名字，并通过名字获得组件</h4></li><li>给组件起名字 <code>ref</code></li><li>取值的话通过<code>this.$refs.组件名字</code><br><img src="https://img-blog.csdnimg.cn/20200527101056181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h3 id="组件的插槽"><a href="#组件的插槽" class="headerlink" title="组件的插槽"></a>组件的插槽</h3><ul><li>插槽的作用在于内容的分发<br><img src="https://img-blog.csdnimg.cn/2020052711354652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="comment"><!-- 编译的作用域 --></span></span><br><span class="line"><span class="comment"><!-- 父组件的模板的内容实在父组件的作用域编译 --></span></span><br><span class="line"><span class="comment"><!-- 插槽 --></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">comp</span>></span></span><br><span class="line"><span class="tag"><<span class="name">p</span>></span>父亲模板的内容<span class="tag"></<span class="name">p</span>></span></span><br><span class="line"><span class="tag"></<span class="name">comp</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="comment">// slot是插槽</span></span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'comp'</span>,{</span></span><br><span class="line"><span class="handlebars"><span class="xml">template:`<span class="tag"><<span class="name">div</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"><<span class="name">slot</span>></span>如果父模板没有内容，就显示我<span class="tag"></<span class="name">slot</span>></span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag"></<span class="name">div</span>></span>`</span></span></span><br><span class="line">})</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">el:<span class="string">"#app"</span>,</span></span><br><span class="line">data:{</span><br><span class="line"><span class="actionscript">message:<span class="string">"hello world"</span></span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>指定插槽的内容分发，我们可以给每个插槽起个名字<br><img src="https://img-blog.csdnimg.cn/20200527114029539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><body></span><br><span class="line"><!-- 插槽: 具名的插槽分发--></span><br><span class="line"><div id=<span class="string">"app"</span>></span><br><span class="line"><comp></span><br><span class="line"><!-- 注意这里不是v-slot --></span><br><span class="line"><p slot=<span class="string">"top"</span>>top<<span class="regexp">/p></span></span><br><span class="line"><span class="regexp"><p slot="foot">foot</</span>p></span><br><span class="line"><p>我没有名字<span class="number">1</span><<span class="regexp">/p></span></span><br><span class="line"><span class="regexp"><p>我没有名字2</</span>p></span><br><span class="line"><<span class="regexp">/comp></span></span><br><span class="line"><span class="regexp"></</span>div></span><br><span class="line"><<span class="regexp">/body></span></span><br><span class="line"><span class="regexp"><script src="../</span>js/vue.js<span class="string">"></script></span></span><br><span class="line"><span class="string"><script></span></span><br><span class="line"><span class="string">// slot是插槽</span></span><br><span class="line"><span class="string">Vue.component('comp',{</span></span><br><span class="line"><span class="string">template:`<div></span></span><br><span class="line"><span class="string"> <slot name="</span>top<span class="string">"></slot></span></span><br><span class="line"><span class="string"> <slot name="</span>foot<span class="string">"></slot></span></span><br><span class="line"><span class="string"> <div></span></span><br><span class="line"><span class="string"><slot></slot></span></span><br><span class="line"><span class="string"> </div></span></span><br><span class="line"><span class="string">  </div>`</span></span><br><span class="line"><span class="string">})</span></span><br><span class="line"><span class="string">var app = new Vue({</span></span><br><span class="line">el:"#app",</span><br><span class="line">data:{</span><br><span class="line">message:<span class="string">"hello world"</span></span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="动态切换组件"><a href="#动态切换组件" class="headerlink" title="动态切换组件"></a>动态切换组件</h3><ul><li>在<code>component</code> 标签上有个属性<code>is</code>，里面填写组件的名字<br><img src="https://img-blog.csdnimg.cn/20200527172940247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyNjM0MjM=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="简单路由"><a href="#简单路由" class="headerlink" title="简单路由"></a>简单路由</h3><p><img src="https://img-blog.csdnimg.cn/20200608145811988.gif" alt="在这里插入图片描述"></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><script src=<span class="string">"./node_modules/vue/dist/vue.js"</span>><span class="xml"><span class="tag"></<span class="name">script</span>></span></span></span><br><span class="line"><script src=<span class="string">"./node_modules/vue-router/dist/vue-router.js"</span>><span class="xml"><span class="tag"></<span class="name">script</span>></span></span></span><br><span class="line"><body></span><br><span class="line"><div id=<span class="string">"app"</span>></span><br><span class="line"><router-link to=<span class="string">"/shangcheng"</span>>商城<<span class="regexp">/router-link></span></span><br><span class="line"><span class="regexp"><router-link to="/</span>shuma<span class="string">">数码</router-link></span></span><br><span class="line"><span class="string"><router-link to="</span>/jiaju<span class="string">">家具</router-link></span></span><br><span class="line"><span class="string"><router-view></router-view></span></span><br><span class="line"><span class="string"></div></span></span><br><span class="line"><span class="string"></body></span></span><br><span class="line"><span class="string"><script></span></span><br><span class="line"><span class="string">var sc = { template:`<h1>商城组件</h1>` }</span></span><br><span class="line"><span class="string">var sm = { template:`<h1>数码组件</h1>` }</span></span><br><span class="line"><span class="string">var jj = { template:`<h1>家具组件</h1>` }</span></span><br><span class="line"><span class="string">var router = new VueRouter({</span></span><br><span class="line"><span class="string">routes:[</span></span><br><span class="line"><span class="string">// redirect 重定向</span></span><br><span class="line"><span class="string">{ path: '/',redirect: '/shuma' },</span></span><br><span class="line"><span class="string">{ path: '/shangcheng',component: sc},</span></span><br><span class="line"><span class="string">{ path: '/shuma',component: sm},</span></span><br><span class="line"><span class="string">{ path: '/jiaju',component: jj}</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">})</span></span><br><span class="line"><span class="string">var app = new Vue({</span></span><br><span class="line">el:"#app",</span><br><span class="line">router,</span><br><span class="line">})</span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><ul><li>动态路由可以<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><body></span><br><span class="line"><div id=<span class="string">"app"</span>></span><br><span class="line"><router-link to=<span class="string">"hello/65"</span>>点击<<span class="regexp">/router-link></span></span><br><span class="line"><span class="regexp"><router-view></</span>router-view></span><br><span class="line"><<span class="regexp">/div></span></span><br><span class="line"><span class="regexp"></</span>body></span><br><span class="line"><script></span><br><span class="line"><span class="comment">// 动态路由</span></span><br><span class="line"><span class="keyword">var</span> Hello = {</span><br><span class="line">template: <span class="string">`<h1>你好 {{$route.params.id}} </h1>`</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter({</span><br><span class="line">routes:[</span><br><span class="line">{ <span class="attr">path</span>:<span class="string">'/hello/:id'</span>, <span class="attr">component</span>: Hello }</span><br><span class="line">]</span><br><span class="line">})</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">router</span><br><span class="line">})</span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="路由前进-后退"><a href="#路由前进-后退" class="headerlink" title="路由前进/后退"></a>路由前进/后退</h3></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><body></span><br><span class="line"><div id=<span class="string">"app"</span>></span><br><span class="line"><router-link to=<span class="string">"hello"</span>>点击<<span class="regexp">/router-link></span></span><br><span class="line"><span class="regexp"><router-view></</span>router-view></span><br><span class="line"><button v-on:click=<span class="string">"back"</span>>后退<<span class="regexp">/button></span></span><br><span class="line"><span class="regexp"><button v-on:click="go">前进</</span>button></span><br><span class="line"><<span class="regexp">/div></span></span><br><span class="line"><span class="regexp"></</span>body></span><br><span class="line"></span><br><span class="line"><script></span><br><span class="line"><span class="comment">// 组件</span></span><br><span class="line"><span class="keyword">var</span> Hello = {</span><br><span class="line">template: <span class="string">`<h1>名字{{name}},年龄{{age}} </h1>`</span>,</span><br><span class="line">props:[<span class="string">'name'</span>, <span class="string">'age'</span>]</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 路由传参</span></span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter({</span><br><span class="line">routes:[</span><br><span class="line">{ </span><br><span class="line">path: <span class="string">'/hello'</span>, </span><br><span class="line">component: Hello ,</span><br><span class="line">props: { <span class="attr">name</span>:<span class="string">'张三'</span>, <span class="attr">age</span>:<span class="number">11</span> }</span><br><span class="line">}</span><br><span class="line">]</span><br><span class="line">})</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">router,</span><br><span class="line">methods:{</span><br><span class="line"><span class="comment">// 路由的前进和后退</span></span><br><span class="line">go(){</span><br><span class="line"><span class="keyword">this</span>.$router.go(<span class="number">1</span>)</span><br><span class="line">},</span><br><span class="line">back(){</span><br><span class="line"><span class="keyword">this</span>.$router.go(<span class="number">-1</span>)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"><<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="监听路由"><a href="#监听路由" class="headerlink" title="监听路由"></a>监听路由</h3><ul><li>我想点击登录的时候在右上角更改信息，就是把原先的登录注册按钮改成用户名和注销</li><li>然而我的登录写成了组件，在组件中更改App.vue的一个data信息，奈何学术不精，百度了好久，想到通过监听路由来出发事件</li><li>主要的是<code>watch()</code>这个API，只要路由变化就会触发，但是浏览器的后退是不会触发的<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>{</span><br><span class="line">data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="keyword">return</span>{</span><br><span class="line">isLogin: <span class="literal">false</span>,</span><br><span class="line">userName:<span class="string">''</span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">methods:{</span><br><span class="line">zhuxiao(){</span><br><span class="line"><span class="built_in">window</span>.sessionStorage.setItem(<span class="string">'isLogin'</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">this</span>.isLogin = <span class="literal">false</span></span><br><span class="line"><span class="keyword">this</span>.$router.push({</span><br><span class="line">path: <span class="string">`/login`</span></span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">watch:{</span><br><span class="line">$route(to){</span><br><span class="line"><span class="keyword">if</span>(to.path === <span class="string">'/view'</span>){</span><br><span class="line"><span class="keyword">this</span>.isLogin = <span class="literal">true</span></span><br><span class="line"><span class="keyword">this</span>.userName = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">'userName'</span>)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></li></ul></body></html></script></span></span></div></span></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建的细节及踩雷总结</title>
      <link href="p/33097.html"/>
      <url>p/33097.html</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="搭建时的坑"><a href="#搭建时的坑" class="headerlink" title="搭建时的坑"></a>搭建时的坑</h1><h2 id="与远端服务器建立相互信任"><a href="#与远端服务器建立相互信任" class="headerlink" title="与远端服务器建立相互信任"></a>与远端服务器建立相互信任</h2><p>目的：每次推送文章到远端git仓库时都需要输入密码，如果建立信任的话，就不需要输入密码了</p><p>操作</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/yourname/.ssh/id_rsa.pub git@server_ip</span><br></pre></td></tr></tbody></table></figure></div><p>这里需要修改 <code>yourname</code> 以及 <code>server_ip</code>，分别对应本地用户名字，和远端服务器的ip地址</p><p>当然你也可以通过xshell等软件登录远端，通过linux命令来操作，如果对linux操作比较熟悉的话建议这样。</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="更新github账户名和邮箱"><a href="#更新github账户名和邮箱" class="headerlink" title="更新github账户名和邮箱"></a>更新github账户名和邮箱</h2><p>这个会在你长期不用博客，然后回过神想写博客的时候用到</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name "yourname"</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email "1007420679@qq.com"</span><br></pre></td></tr></tbody></table></figure></div><h2 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></tbody></table></figure></div><h2 id="缺少模块"><a href="#缺少模块" class="headerlink" title="缺少模块"></a>缺少模块</h2><p>如果提示你缺少某系模块的话，直接安装</p><p><a href="https://cdn.jsdelivr.net/gh/Amethyst-Ruby/myCDN/img/Snipaste_2020-02-07_09-57-52.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Amethyst-Ruby/myCDN/img/Snipaste_2020-02-07_09-57-52.png" src="/img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install cheerio</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Amethyst-Ruby/myCDN/img/Snipaste_2020-02-07_09-58-19.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Amethyst-Ruby/myCDN/img/Snipaste_2020-02-07_09-58-19.png" src="/img/loading.gif" class="lazyload"></a></p><h2 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></tbody></table></figure></div><h2 id="主题平滑升级"><a href="#主题平滑升级" class="headerlink" title="主题平滑升级"></a>主题平滑升级</h2><p>在你的主题文件夹下打开git bash，键入命令（你的主题得支持平滑升级）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></tbody></table></figure></div><h1 id="文章撰写"><a href="#文章撰写" class="headerlink" title="文章撰写"></a>文章撰写</h1><h2 id="设置文章的属性"><a href="#设置文章的属性" class="headerlink" title="设置文章的属性"></a>设置文章的属性</h2><p>比方说要设置文章的分类，我们可以在文章里设置yaml语句</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文章标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章写作的日期</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-02</span><span class="number">-06</span> <span class="number">09</span><span class="string">:25:00</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章是否置顶</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cover为文章的封面</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://cdn.jsdelivr.net/gh/Amethyst-Ruby/myCDN/img/blogBgImg.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否显示左侧边栏的标题分类及阅读进度，默认为true</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">summary:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#文章的分类</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">写博客的经验</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文章的标签</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Typora</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Markdown</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">（除非特定需要，可以不寫）</span></span><br><span class="line"><span class="string">comments</span>  <span class="string">是否顯示評論（除非設置false,可以不寫）</span></span><br><span class="line"><span class="attr">cover:</span>  <span class="string">縮略圖</span></span><br><span class="line"><span class="attr">toc:</span>  <span class="string">是否顯示toc</span> <span class="string">（除非特定文章設置，可以不寫）</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="string">是否顯示toc數字</span> <span class="string">（除非特定文章設置，可以不寫）</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="string">是否顯示版權</span> <span class="string">（除非特定文章設置，可以不寫）</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">hide:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="好用的MarkDown写作器"><a href="#好用的MarkDown写作器" class="headerlink" title="好用的MarkDown写作器"></a>好用的MarkDown写作器</h2><p>推荐Typora</p><h2 id="Typora的图片插件typora-plugins-win-img"><a href="#Typora的图片插件typora-plugins-win-img" class="headerlink" title="Typora的图片插件typora-plugins-win-img"></a>Typora的图片插件typora-plugins-win-img</h2><p><a href="https://github.com/Thobian/typora-plugins-win-img" target="_blank" rel="noopener">插件原项目在这里</a></p><p>这里也有安装的步骤，重点是 <strong>window.html</strong> 这个文件不要复制，而是改变它的代码，打开它，然后搜索下面的语句</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./plugins/image/upload.js"</span> <span class="attr">defer</span>=<span class="string">"defer"</span>></span><span class="tag"><!--<span class="name"-->script</span>></span><br></pre></td></tr></tbody></table></figure></div><p>在这个语句后面他的后面添加</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./plugins/image/upload.js"</span> <span class="attr">defer</span>=<span class="string">"defer"</span>></span><span class="tag"><!--<span class="name"-->script</span>></span><br></pre></td></tr></tbody></table></figure></div><h1 id="本地预览和服务器预览不一致"><a href="#本地预览和服务器预览不一致" class="headerlink" title="本地预览和服务器预览不一致"></a>本地预览和服务器预览不一致</h1><ol><li>键入以下命令</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></tbody></table></figure></div><ol start="2"><li>如果你用的是<strong>Chrome</strong>的话，那就是<strong>缓存</strong>的锅，试着换个浏览器试试，或是<strong>清除Chrome的缓存</strong></li><li>重启再试一次（这个我试过也好使）</li></ol><h1 id="图片放大器-fancybox-失效"><a href="#图片放大器-fancybox-失效" class="headerlink" title="图片放大器 fancybox 失效"></a>图片放大器 fancybox 失效</h1><p>2020-03-16 </p><p>刚把MUI的文章更新完，然后发布后发现我的图片放大器坏了，我透心里一万只草泥马飞奔，又开始排错误</p><p>我也没改什么，就是图床的几个图片失效了，我就改了配置文件，想想也不可能是图床的问题啊</p><p>于是我就打开了开发者模式，发现图片的a标签指向 loading.gif，从而推断是脚本的问题</p><p>然后我把本地的loading.gif文件改成loading1.gif，接着查看，发现浏览器还能显示loading.gif，这他妈是缓存的锅么？</p><p>于是我发现了一个很重要的问题，就是在你 <code>hexo g</code>的时候会生成一个 public 公共文件，于是我考虑是不是<code>hexo g</code>整理出了问题呢？于是我 <code>hexo clean</code> 接着 <code>hexo g</code> 再次整理了一遍，最后图片放大器好使了,a标签也不再指向loading.gif了</p><p>后记：<code>hexo g</code> 时可能出现些小错误，删掉重新来一遍就好了，这次排查错误我好像更能理解博客如何生成的过程了，它是把所有的配置文件捏成public文件夹，然后push上远端仓库。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
            <tag> 写博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
